Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AS
    ASSERT
    ASYNC
    AWAIT
    BASE
    CASE
    CATCH
    CLASS
    CONST
    CONTINUE
    COVARIANT
    DEFAULT
    DEFERRED
    DIVIDE
    DO
    DOLLAR
    DYNAMIC
    ENUM
    EXPORT
    EXTENDS
    EXTENSION
    EXTERNAL
    FACTORY
    FALSE
    FINAL
    FINALLY
    FUNCTION
    GET
    HIDE
    IMPLEMENTS
    IN
    INTERFACE
    IS
    LATE
    LIBRARY
    LISTEMPTY
    MAPEMPTY
    MAPTYPE
    MINUS
    MIXIN
    MOD
    ON
    OPERATOR
    PART
    PLUS
    QUESTIONMARK
    REQUIRED
    RETHROW
    SEALED
    SHOW
    SUPER
    SWITCH
    SYNC
    THIS
    THROW
    TIMES
    TRUE
    TRY
    TYPEDEF
    UNDERSCORE
    VAR
    WHEN
    WITH
    YIELD

Grammar

Rule 0     S' -> instruccionesMas
Rule 1     instruccionesMas -> instruccion
Rule 2     instruccionesMas -> instruccion instruccionesMas
Rule 3     instruccion -> funcion
Rule 4     instruccion -> sentenciaFor
Rule 5     instruccion -> sentenciaIf
Rule 6     instruccion -> asignacionesMas
Rule 7     instruccion -> estructuraMap
Rule 8     instruccion -> array
Rule 9     instruccion -> arrayChanges
Rule 10    instruccion -> declarset
Rule 11    instruccion -> sentenciaIfElse
Rule 12    instruccion -> sentenciaElse
Rule 13    instruccion -> foreach
Rule 14    instruccion -> listBuscar
Rule 15    instruccion -> importsDart
Rule 16    instruccion -> listMethods
Rule 17    instruccion -> sentenciaWhile
Rule 18    instruccion -> palabraBreak
Rule 19    instruccion -> funcionPrint
Rule 20    parametrosF -> parametro COMMA parametrosF
Rule 21    parametrosF -> parametro
Rule 22    parametro -> DATATYPES ID
Rule 23    funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
Rule 24    funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
Rule 25    funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
Rule 26    sentenciaReturn -> RETURN LPAREN retornarValues RPAREN SEMICOLON
Rule 27    retornarValues -> values
Rule 28    retornarValues -> NULL
Rule 29    sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 30    sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 31    sentenciaElse -> ELSE sentenciaIf sentenciaElse
Rule 32    sentenciaElse -> ELSE sentenciaIf
Rule 33    sentenciaIfElse -> sentenciaIf
Rule 34    sentenciaIfElse -> sentenciaIf sentenciaElse
Rule 35    set -> values COMMA set
Rule 36    set -> values
Rule 37    declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
Rule 38    declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
Rule 39    declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
Rule 40    declarset -> setadd
Rule 41    declarset -> setclear
Rule 42    declarset -> setcontains
Rule 43    declarset -> setAddAll
Rule 44    declarset -> setlengh
Rule 45    declarset -> setremove
Rule 46    setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON
Rule 47    setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON
Rule 48    setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
Rule 49    setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
Rule 50    setlengh -> ID DOT LENGTH SEMICOLON
Rule 51    setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON
Rule 52    foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
Rule 53    array -> ID EQUAL arrayInicio SEMICOLON
Rule 54    array -> arrayFunc SEMICOLON
Rule 55    array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
Rule 56    array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
Rule 57    arrayInicio -> SQUAREBRACKETLEFT SQUAREBRACKETRIGHT
Rule 58    arrayInicio -> SQUAREBRACKETLEFT set SQUAREBRACKETRIGHT
Rule 59    arrayInicio -> ID DOT subArray
Rule 60    arrayValues -> values
Rule 61    arrayValues -> values COMMA arrayValues
Rule 62    arrayFunc -> ID DOT subArray
Rule 63    listBuscar -> ID DOT LENGTH SEMICOLON
Rule 64    arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
Rule 65    subArray -> SUBLIST LPAREN values RPAREN SEMICOLON
Rule 66    subArray -> subArray DOT subArray
Rule 67    asignacion -> DATATYPES ID EQUAL values SEMICOLON
Rule 68    asignacion -> VARTYPE ID EQUAL values SEMICOLON
Rule 69    asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON
Rule 70    asignacionesMas -> asignacion
Rule 71    asignacionesMas -> asignacion asignacionesMas
Rule 72    values -> INT
Rule 73    values -> FLOAT
Rule 74    values -> BOOLEAN
Rule 75    values -> STR
Rule 76    estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
Rule 77    estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
Rule 78    estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
Rule 79    estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
Rule 80    estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
Rule 81    estructuraMap -> metodoMapClear
Rule 82    estructuraMap -> metodoMapRemoveKey
Rule 83    estructuraMap -> metodoMapAddAll
Rule 84    estructuraMap -> metodoMapAdd
Rule 85    itemsMaps -> values COLON values
Rule 86    itemsMaps -> values COLON values COMMA itemsMaps
Rule 87    sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 88    sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 89    funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON
Rule 90    printValues -> ID
Rule 91    printValues -> values
Rule 92    palabraBreak -> BREAK SEMICOLON
Rule 93    comparacion -> ID comparador values
Rule 94    comparacion -> ID comparador ID
Rule 95    comparacion -> BOOLEAN
Rule 96    comparacion -> ID operadoresLogicos ID
Rule 97    comparacion -> BOOLEAN operadoresLogicos ID
Rule 98    comparador -> GREATER
Rule 99    comparador -> LESS
Rule 100   comparador -> GREATEREQ
Rule 101   comparador -> LESSEQ
Rule 102   comparador -> EQUALC
Rule 103   comparador -> DIFFERENT
Rule 104   operadoresLogicos -> AND
Rule 105   operadoresLogicos -> OR
Rule 106   operadoresLogicos -> NOT
Rule 107   operadoresArimeticoId -> ID INCREMENT
Rule 108   operadoresArimeticoId -> ID DECREMENT
Rule 109   operadoresArimeticoId -> ID PLUSEQUAL values
Rule 110   operadoresArimeticoId -> ID MINUSEQUAL values
Rule 111   operadoresArimeticoId -> ID MULTIPLUS values
Rule 112   operadoresArimeticoId -> ID DIVIDEEQUAL values
Rule 113   operadoresAsignacion -> PLUSEQUAL
Rule 114   operadoresAsignacion -> MINUSEQUAL
Rule 115   operadoresAsignacion -> MULTIPLUS
Rule 116   operadoresAsignacion -> DIVIDEEQUAL
Rule 117   metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON
Rule 118   metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON
Rule 119   metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
Rule 120   metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
Rule 121   importsDart -> IMPORT STR SEMICOLON
Rule 122   listMethods -> metodoListFilled
Rule 123   metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

Terminals, with rules where they appear

ABSTRACT             : 
ADD                  : 46
ADDALL               : 49
AND                  : 104
AS                   : 
ASSERT               : 
ASYNC                : 
AWAIT                : 
BASE                 : 
BOOLEAN              : 74 95 97
BREAK                : 92
CASE                 : 
CATCH                : 
CLASS                : 
CLEAR                : 47 117 118 119
COLON                : 85 86
COMMA                : 20 35 61 77 80 86
CONST                : 
CONTAINS             : 48
CONTINUE             : 
COVARIANT            : 
CURLYBRACKETLEFT     : 23 24 25 29 30 38 39 76 77 78 87 88 119
CURLYBRACKETRIGHT    : 23 24 25 29 30 38 39 76 77 78 87 88 119
DATATYPES            : 22 23 24 39 39 55 67 69 77 77 80 80
DECREMENT            : 108
DEFAULT              : 
DEFERRED             : 
DIFFERENT            : 103
DIVIDE               : 
DIVIDEEQUAL          : 112 116
DO                   : 
DOLLAR               : 
DOT                  : 46 47 48 49 50 51 52 59 62 63 66 117 118 119 123
DYNAMIC              : 
ELSE                 : 30 31 32
ENUM                 : 
EQUAL                : 37 38 39 53 55 56 64 67 68 76 77 78 79 80 120
EQUALC               : 102
EXPORT               : 
EXTENDS              : 
EXTENSION            : 
EXTERNAL             : 
FACTORY              : 
FALSE                : 
FILLED               : 123
FINAL                : 
FINALLY              : 
FLOAT                : 73
FOR                  : 87
FOREACH              : 52
FUNCTION             : 
GET                  : 
GREATER              : 39 77 80 98
GREATEREQ            : 100
HIDE                 : 
ID                   : 22 23 24 25 37 38 39 46 47 48 49 49 50 51 52 53 55 56 59 62 63 64 67 68 69 76 77 78 79 80 90 93 94 94 96 96 97 107 108 109 110 111 112 117 118 119 120
IF                   : 29
IMPLEMENTS           : 
IMPORT               : 121
IN                   : 
INCREMENT            : 107
INT                  : 72
INTERFACE            : 
IS                   : 
LATE                 : 
LENGTH               : 50 63
LESS                 : 39 77 80 99
LESSEQ               : 101
LIBRARY              : 
LIST                 : 56 123
LISTEMPTY            : 
LPAREN               : 23 24 25 26 29 37 46 47 48 49 51 52 65 79 80 87 88 89 117 118 119 123
MAP                  : 76 77 79 80
MAPEMPTY             : 
MAPTYPE              : 
MINUS                : 
MINUSEQUAL           : 110 114
MIXIN                : 
MOD                  : 
MULTIPLUS            : 111 115
NEW                  : 37 79 80
NOT                  : 106
NULL                 : 28
ON                   : 
OPERATOR             : 
OR                   : 105
PART                 : 
PLUS                 : 
PLUSEQUAL            : 109 113
PRINT                : 89
QUESTIONMARK         : 
REMOVE               : 51
REQUIRED             : 
RETHROW              : 
RETURN               : 26
RPAREN               : 23 24 25 26 29 37 46 47 48 49 51 52 65 79 80 87 88 89 117 118 119 123
SEALED               : 
SEMICOLON            : 26 37 38 39 46 47 48 49 50 51 52 53 54 55 56 63 64 65 67 68 69 76 77 78 79 80 87 87 89 92 117 118 119 120 121 123
SET                  : 37 37 38
SHOW                 : 
SQUAREBRACKETLEFT    : 55 56 57 58 64 120
SQUAREBRACKETRIGHT   : 55 56 57 58 64 120
STATIC               : 23
STR                  : 75 121
SUBLIST              : 65
SUPER                : 
SWITCH               : 
SYNC                 : 
THIS                 : 
THROW                : 
TIMES                : 
TRUE                 : 
TRY                  : 
TYPEDEF              : 
UNDERSCORE           : 
VAR                  : 
VARTYPE              : 68 78 79 80
VOID                 : 25
WHEN                 : 
WHILE                : 88
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

array                : 8
arrayChanges         : 9
arrayFunc            : 54
arrayInicio          : 53
arrayValues          : 55 56 61 123
asignacion           : 70 71 87
asignacionesMas      : 6 71
comparacion          : 29 87 88
comparador           : 93 94
declarset            : 10
estructuraMap        : 7
foreach              : 13
funcion              : 3
funcionPrint         : 19
importsDart          : 15
instruccion          : 1 2
instruccionesMas     : 2 23 24 25 29 30 52 87 88 0
itemsMaps            : 76 77 78 86 119
listBuscar           : 14
listMethods          : 16
metodoListFilled     : 122
metodoMapAdd         : 84
metodoMapAddAll      : 83
metodoMapClear       : 81
metodoMapRemoveKey   : 82
operadoresArimeticoId : 87
operadoresAsignacion : 69
operadoresLogicos    : 96 97
palabraBreak         : 18
parametro            : 20 21
parametrosF          : 20 23 24 25
printValues          : 89
retornarValues       : 26
sentenciaElse        : 12 31 34
sentenciaFor         : 4
sentenciaIf          : 5 31 32 33 34
sentenciaIfElse      : 11
sentenciaReturn      : 23 24 25
sentenciaWhile       : 17
set                  : 35 38 39 58
setAddAll            : 43
setadd               : 40
setclear             : 41
setcontains          : 42
setlengh             : 44
setremove            : 45
subArray             : 59 62 66 66
values               : 27 35 36 46 47 48 51 60 61 64 64 65 67 68 69 85 85 86 86 91 93 109 110 111 112 118 120 120

Parsing method: LALR

state 0

    (0) S' -> . instruccionesMas
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . sentenciaIf
    (6) instruccion -> . asignacionesMas
    (7) instruccion -> . estructuraMap
    (8) instruccion -> . array
    (9) instruccion -> . arrayChanges
    (10) instruccion -> . declarset
    (11) instruccion -> . sentenciaIfElse
    (12) instruccion -> . sentenciaElse
    (13) instruccion -> . foreach
    (14) instruccion -> . listBuscar
    (15) instruccion -> . importsDart
    (16) instruccion -> . listMethods
    (17) instruccion -> . sentenciaWhile
    (18) instruccion -> . palabraBreak
    (19) instruccion -> . funcionPrint
    (23) funcion -> . STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (24) funcion -> . DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (25) funcion -> . VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (87) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (70) asignacionesMas -> . asignacion
    (71) asignacionesMas -> . asignacion asignacionesMas
    (76) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (77) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (78) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (79) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (81) estructuraMap -> . metodoMapClear
    (82) estructuraMap -> . metodoMapRemoveKey
    (83) estructuraMap -> . metodoMapAddAll
    (84) estructuraMap -> . metodoMapAdd
    (53) array -> . ID EQUAL arrayInicio SEMICOLON
    (54) array -> . arrayFunc SEMICOLON
    (55) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (56) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (64) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (37) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (38) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (40) declarset -> . setadd
    (41) declarset -> . setclear
    (42) declarset -> . setcontains
    (43) declarset -> . setAddAll
    (44) declarset -> . setlengh
    (45) declarset -> . setremove
    (33) sentenciaIfElse -> . sentenciaIf
    (34) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse
    (32) sentenciaElse -> . ELSE sentenciaIf
    (52) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (63) listBuscar -> . ID DOT LENGTH SEMICOLON
    (121) importsDart -> . IMPORT STR SEMICOLON
    (122) listMethods -> . metodoListFilled
    (88) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (92) palabraBreak -> . BREAK SEMICOLON
    (89) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (67) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (68) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (69) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (117) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (118) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (119) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (120) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (62) arrayFunc -> . ID DOT subArray
    (46) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (47) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (48) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (49) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (50) setlengh -> . ID DOT LENGTH SEMICOLON
    (51) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (123) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 20
    DATATYPES       shift and go to state 21
    VOID            shift and go to state 23
    FOR             shift and go to state 24
    IF              shift and go to state 26
    MAP             shift and go to state 27
    VARTYPE         shift and go to state 28
    ID              shift and go to state 22
    LIST            shift and go to state 34
    SET             shift and go to state 35
    ELSE            shift and go to state 42
    IMPORT          shift and go to state 43
    WHILE           shift and go to state 45
    BREAK           shift and go to state 46
    PRINT           shift and go to state 47

    instruccionesMas               shift and go to state 1
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    sentenciaIf                    shift and go to state 5
    asignacionesMas                shift and go to state 6
    estructuraMap                  shift and go to state 7
    array                          shift and go to state 8
    arrayChanges                   shift and go to state 9
    declarset                      shift and go to state 10
    sentenciaIfElse                shift and go to state 11
    sentenciaElse                  shift and go to state 12
    foreach                        shift and go to state 13
    listBuscar                     shift and go to state 14
    importsDart                    shift and go to state 15
    listMethods                    shift and go to state 16
    sentenciaWhile                 shift and go to state 17
    palabraBreak                   shift and go to state 18
    funcionPrint                   shift and go to state 19
    asignacion                     shift and go to state 25
    metodoMapClear                 shift and go to state 29
    metodoMapRemoveKey             shift and go to state 30
    metodoMapAddAll                shift and go to state 31
    metodoMapAdd                   shift and go to state 32
    arrayFunc                      shift and go to state 33
    setadd                         shift and go to state 36
    setclear                       shift and go to state 37
    setcontains                    shift and go to state 38
    setAddAll                      shift and go to state 39
    setlengh                       shift and go to state 40
    setremove                      shift and go to state 41
    metodoListFilled               shift and go to state 44

state 1

    (0) S' -> instruccionesMas .



state 2

    (1) instruccionesMas -> instruccion .
    (2) instruccionesMas -> instruccion . instruccionesMas
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . sentenciaIf
    (6) instruccion -> . asignacionesMas
    (7) instruccion -> . estructuraMap
    (8) instruccion -> . array
    (9) instruccion -> . arrayChanges
    (10) instruccion -> . declarset
    (11) instruccion -> . sentenciaIfElse
    (12) instruccion -> . sentenciaElse
    (13) instruccion -> . foreach
    (14) instruccion -> . listBuscar
    (15) instruccion -> . importsDart
    (16) instruccion -> . listMethods
    (17) instruccion -> . sentenciaWhile
    (18) instruccion -> . palabraBreak
    (19) instruccion -> . funcionPrint
    (23) funcion -> . STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (24) funcion -> . DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (25) funcion -> . VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (87) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (70) asignacionesMas -> . asignacion
    (71) asignacionesMas -> . asignacion asignacionesMas
    (76) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (77) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (78) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (79) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (81) estructuraMap -> . metodoMapClear
    (82) estructuraMap -> . metodoMapRemoveKey
    (83) estructuraMap -> . metodoMapAddAll
    (84) estructuraMap -> . metodoMapAdd
    (53) array -> . ID EQUAL arrayInicio SEMICOLON
    (54) array -> . arrayFunc SEMICOLON
    (55) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (56) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (64) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (37) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (38) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (40) declarset -> . setadd
    (41) declarset -> . setclear
    (42) declarset -> . setcontains
    (43) declarset -> . setAddAll
    (44) declarset -> . setlengh
    (45) declarset -> . setremove
    (33) sentenciaIfElse -> . sentenciaIf
    (34) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse
    (32) sentenciaElse -> . ELSE sentenciaIf
    (52) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (63) listBuscar -> . ID DOT LENGTH SEMICOLON
    (121) importsDart -> . IMPORT STR SEMICOLON
    (122) listMethods -> . metodoListFilled
    (88) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (92) palabraBreak -> . BREAK SEMICOLON
    (89) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (67) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (68) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (69) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (117) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (118) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (119) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (120) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (62) arrayFunc -> . ID DOT subArray
    (46) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (47) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (48) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (49) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (50) setlengh -> . ID DOT LENGTH SEMICOLON
    (51) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (123) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    $end            reduce using rule 1 (instruccionesMas -> instruccion .)
    CURLYBRACKETRIGHT reduce using rule 1 (instruccionesMas -> instruccion .)
    RPAREN          reduce using rule 1 (instruccionesMas -> instruccion .)
    RETURN          reduce using rule 1 (instruccionesMas -> instruccion .)
    STATIC          shift and go to state 20
    DATATYPES       shift and go to state 21
    VOID            shift and go to state 23
    FOR             shift and go to state 24
    IF              shift and go to state 26
    MAP             shift and go to state 27
    VARTYPE         shift and go to state 28
    ID              shift and go to state 22
    LIST            shift and go to state 34
    SET             shift and go to state 35
    ELSE            shift and go to state 42
    IMPORT          shift and go to state 43
    WHILE           shift and go to state 45
    BREAK           shift and go to state 46
    PRINT           shift and go to state 47

    instruccion                    shift and go to state 2
    instruccionesMas               shift and go to state 48
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    sentenciaIf                    shift and go to state 5
    asignacionesMas                shift and go to state 6
    estructuraMap                  shift and go to state 7
    array                          shift and go to state 8
    arrayChanges                   shift and go to state 9
    declarset                      shift and go to state 10
    sentenciaIfElse                shift and go to state 11
    sentenciaElse                  shift and go to state 12
    foreach                        shift and go to state 13
    listBuscar                     shift and go to state 14
    importsDart                    shift and go to state 15
    listMethods                    shift and go to state 16
    sentenciaWhile                 shift and go to state 17
    palabraBreak                   shift and go to state 18
    funcionPrint                   shift and go to state 19
    asignacion                     shift and go to state 25
    metodoMapClear                 shift and go to state 29
    metodoMapRemoveKey             shift and go to state 30
    metodoMapAddAll                shift and go to state 31
    metodoMapAdd                   shift and go to state 32
    arrayFunc                      shift and go to state 33
    setadd                         shift and go to state 36
    setclear                       shift and go to state 37
    setcontains                    shift and go to state 38
    setAddAll                      shift and go to state 39
    setlengh                       shift and go to state 40
    setremove                      shift and go to state 41
    metodoListFilled               shift and go to state 44

state 3

    (3) instruccion -> funcion .

    STATIC          reduce using rule 3 (instruccion -> funcion .)
    DATATYPES       reduce using rule 3 (instruccion -> funcion .)
    VOID            reduce using rule 3 (instruccion -> funcion .)
    FOR             reduce using rule 3 (instruccion -> funcion .)
    IF              reduce using rule 3 (instruccion -> funcion .)
    MAP             reduce using rule 3 (instruccion -> funcion .)
    VARTYPE         reduce using rule 3 (instruccion -> funcion .)
    ID              reduce using rule 3 (instruccion -> funcion .)
    LIST            reduce using rule 3 (instruccion -> funcion .)
    SET             reduce using rule 3 (instruccion -> funcion .)
    ELSE            reduce using rule 3 (instruccion -> funcion .)
    IMPORT          reduce using rule 3 (instruccion -> funcion .)
    WHILE           reduce using rule 3 (instruccion -> funcion .)
    BREAK           reduce using rule 3 (instruccion -> funcion .)
    PRINT           reduce using rule 3 (instruccion -> funcion .)
    $end            reduce using rule 3 (instruccion -> funcion .)
    CURLYBRACKETRIGHT reduce using rule 3 (instruccion -> funcion .)
    RPAREN          reduce using rule 3 (instruccion -> funcion .)
    RETURN          reduce using rule 3 (instruccion -> funcion .)


state 4

    (4) instruccion -> sentenciaFor .

    STATIC          reduce using rule 4 (instruccion -> sentenciaFor .)
    DATATYPES       reduce using rule 4 (instruccion -> sentenciaFor .)
    VOID            reduce using rule 4 (instruccion -> sentenciaFor .)
    FOR             reduce using rule 4 (instruccion -> sentenciaFor .)
    IF              reduce using rule 4 (instruccion -> sentenciaFor .)
    MAP             reduce using rule 4 (instruccion -> sentenciaFor .)
    VARTYPE         reduce using rule 4 (instruccion -> sentenciaFor .)
    ID              reduce using rule 4 (instruccion -> sentenciaFor .)
    LIST            reduce using rule 4 (instruccion -> sentenciaFor .)
    SET             reduce using rule 4 (instruccion -> sentenciaFor .)
    ELSE            reduce using rule 4 (instruccion -> sentenciaFor .)
    IMPORT          reduce using rule 4 (instruccion -> sentenciaFor .)
    WHILE           reduce using rule 4 (instruccion -> sentenciaFor .)
    BREAK           reduce using rule 4 (instruccion -> sentenciaFor .)
    PRINT           reduce using rule 4 (instruccion -> sentenciaFor .)
    $end            reduce using rule 4 (instruccion -> sentenciaFor .)
    CURLYBRACKETRIGHT reduce using rule 4 (instruccion -> sentenciaFor .)
    RPAREN          reduce using rule 4 (instruccion -> sentenciaFor .)
    RETURN          reduce using rule 4 (instruccion -> sentenciaFor .)


state 5

    (5) instruccion -> sentenciaIf .
    (33) sentenciaIfElse -> sentenciaIf .
    (34) sentenciaIfElse -> sentenciaIf . sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse
    (32) sentenciaElse -> . ELSE sentenciaIf

  ! reduce/reduce conflict for STATIC resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for DATATYPES resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for VOID resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for IF resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for MAP resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for VARTYPE resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for ID resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for LIST resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for SET resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for ELSE resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for IMPORT resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for BREAK resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for PRINT resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for $end resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for CURLYBRACKETRIGHT resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for RPAREN resolved using rule 5 (instruccion -> sentenciaIf .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (instruccion -> sentenciaIf .)
  ! shift/reduce conflict for ELSE resolved as shift
    STATIC          reduce using rule 5 (instruccion -> sentenciaIf .)
    DATATYPES       reduce using rule 5 (instruccion -> sentenciaIf .)
    VOID            reduce using rule 5 (instruccion -> sentenciaIf .)
    FOR             reduce using rule 5 (instruccion -> sentenciaIf .)
    IF              reduce using rule 5 (instruccion -> sentenciaIf .)
    MAP             reduce using rule 5 (instruccion -> sentenciaIf .)
    VARTYPE         reduce using rule 5 (instruccion -> sentenciaIf .)
    ID              reduce using rule 5 (instruccion -> sentenciaIf .)
    LIST            reduce using rule 5 (instruccion -> sentenciaIf .)
    SET             reduce using rule 5 (instruccion -> sentenciaIf .)
    IMPORT          reduce using rule 5 (instruccion -> sentenciaIf .)
    WHILE           reduce using rule 5 (instruccion -> sentenciaIf .)
    BREAK           reduce using rule 5 (instruccion -> sentenciaIf .)
    PRINT           reduce using rule 5 (instruccion -> sentenciaIf .)
    $end            reduce using rule 5 (instruccion -> sentenciaIf .)
    CURLYBRACKETRIGHT reduce using rule 5 (instruccion -> sentenciaIf .)
    RPAREN          reduce using rule 5 (instruccion -> sentenciaIf .)
    RETURN          reduce using rule 5 (instruccion -> sentenciaIf .)
    ELSE            shift and go to state 42

  ! ELSE            [ reduce using rule 5 (instruccion -> sentenciaIf .) ]
  ! STATIC          [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! DATATYPES       [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! VOID            [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! FOR             [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! IF              [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! MAP             [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! VARTYPE         [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! ID              [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! LIST            [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! SET             [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! ELSE            [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! IMPORT          [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! WHILE           [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! BREAK           [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! PRINT           [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! $end            [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! CURLYBRACKETRIGHT [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! RPAREN          [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]
  ! RETURN          [ reduce using rule 33 (sentenciaIfElse -> sentenciaIf .) ]

    sentenciaElse                  shift and go to state 49

state 6

    (6) instruccion -> asignacionesMas .

    STATIC          reduce using rule 6 (instruccion -> asignacionesMas .)
    DATATYPES       reduce using rule 6 (instruccion -> asignacionesMas .)
    VOID            reduce using rule 6 (instruccion -> asignacionesMas .)
    FOR             reduce using rule 6 (instruccion -> asignacionesMas .)
    IF              reduce using rule 6 (instruccion -> asignacionesMas .)
    MAP             reduce using rule 6 (instruccion -> asignacionesMas .)
    VARTYPE         reduce using rule 6 (instruccion -> asignacionesMas .)
    ID              reduce using rule 6 (instruccion -> asignacionesMas .)
    LIST            reduce using rule 6 (instruccion -> asignacionesMas .)
    SET             reduce using rule 6 (instruccion -> asignacionesMas .)
    ELSE            reduce using rule 6 (instruccion -> asignacionesMas .)
    IMPORT          reduce using rule 6 (instruccion -> asignacionesMas .)
    WHILE           reduce using rule 6 (instruccion -> asignacionesMas .)
    BREAK           reduce using rule 6 (instruccion -> asignacionesMas .)
    PRINT           reduce using rule 6 (instruccion -> asignacionesMas .)
    $end            reduce using rule 6 (instruccion -> asignacionesMas .)
    CURLYBRACKETRIGHT reduce using rule 6 (instruccion -> asignacionesMas .)
    RPAREN          reduce using rule 6 (instruccion -> asignacionesMas .)
    RETURN          reduce using rule 6 (instruccion -> asignacionesMas .)


state 7

    (7) instruccion -> estructuraMap .

    STATIC          reduce using rule 7 (instruccion -> estructuraMap .)
    DATATYPES       reduce using rule 7 (instruccion -> estructuraMap .)
    VOID            reduce using rule 7 (instruccion -> estructuraMap .)
    FOR             reduce using rule 7 (instruccion -> estructuraMap .)
    IF              reduce using rule 7 (instruccion -> estructuraMap .)
    MAP             reduce using rule 7 (instruccion -> estructuraMap .)
    VARTYPE         reduce using rule 7 (instruccion -> estructuraMap .)
    ID              reduce using rule 7 (instruccion -> estructuraMap .)
    LIST            reduce using rule 7 (instruccion -> estructuraMap .)
    SET             reduce using rule 7 (instruccion -> estructuraMap .)
    ELSE            reduce using rule 7 (instruccion -> estructuraMap .)
    IMPORT          reduce using rule 7 (instruccion -> estructuraMap .)
    WHILE           reduce using rule 7 (instruccion -> estructuraMap .)
    BREAK           reduce using rule 7 (instruccion -> estructuraMap .)
    PRINT           reduce using rule 7 (instruccion -> estructuraMap .)
    $end            reduce using rule 7 (instruccion -> estructuraMap .)
    CURLYBRACKETRIGHT reduce using rule 7 (instruccion -> estructuraMap .)
    RPAREN          reduce using rule 7 (instruccion -> estructuraMap .)
    RETURN          reduce using rule 7 (instruccion -> estructuraMap .)


state 8

    (8) instruccion -> array .

    STATIC          reduce using rule 8 (instruccion -> array .)
    DATATYPES       reduce using rule 8 (instruccion -> array .)
    VOID            reduce using rule 8 (instruccion -> array .)
    FOR             reduce using rule 8 (instruccion -> array .)
    IF              reduce using rule 8 (instruccion -> array .)
    MAP             reduce using rule 8 (instruccion -> array .)
    VARTYPE         reduce using rule 8 (instruccion -> array .)
    ID              reduce using rule 8 (instruccion -> array .)
    LIST            reduce using rule 8 (instruccion -> array .)
    SET             reduce using rule 8 (instruccion -> array .)
    ELSE            reduce using rule 8 (instruccion -> array .)
    IMPORT          reduce using rule 8 (instruccion -> array .)
    WHILE           reduce using rule 8 (instruccion -> array .)
    BREAK           reduce using rule 8 (instruccion -> array .)
    PRINT           reduce using rule 8 (instruccion -> array .)
    $end            reduce using rule 8 (instruccion -> array .)
    CURLYBRACKETRIGHT reduce using rule 8 (instruccion -> array .)
    RPAREN          reduce using rule 8 (instruccion -> array .)
    RETURN          reduce using rule 8 (instruccion -> array .)


state 9

    (9) instruccion -> arrayChanges .

    STATIC          reduce using rule 9 (instruccion -> arrayChanges .)
    DATATYPES       reduce using rule 9 (instruccion -> arrayChanges .)
    VOID            reduce using rule 9 (instruccion -> arrayChanges .)
    FOR             reduce using rule 9 (instruccion -> arrayChanges .)
    IF              reduce using rule 9 (instruccion -> arrayChanges .)
    MAP             reduce using rule 9 (instruccion -> arrayChanges .)
    VARTYPE         reduce using rule 9 (instruccion -> arrayChanges .)
    ID              reduce using rule 9 (instruccion -> arrayChanges .)
    LIST            reduce using rule 9 (instruccion -> arrayChanges .)
    SET             reduce using rule 9 (instruccion -> arrayChanges .)
    ELSE            reduce using rule 9 (instruccion -> arrayChanges .)
    IMPORT          reduce using rule 9 (instruccion -> arrayChanges .)
    WHILE           reduce using rule 9 (instruccion -> arrayChanges .)
    BREAK           reduce using rule 9 (instruccion -> arrayChanges .)
    PRINT           reduce using rule 9 (instruccion -> arrayChanges .)
    $end            reduce using rule 9 (instruccion -> arrayChanges .)
    CURLYBRACKETRIGHT reduce using rule 9 (instruccion -> arrayChanges .)
    RPAREN          reduce using rule 9 (instruccion -> arrayChanges .)
    RETURN          reduce using rule 9 (instruccion -> arrayChanges .)


state 10

    (10) instruccion -> declarset .

    STATIC          reduce using rule 10 (instruccion -> declarset .)
    DATATYPES       reduce using rule 10 (instruccion -> declarset .)
    VOID            reduce using rule 10 (instruccion -> declarset .)
    FOR             reduce using rule 10 (instruccion -> declarset .)
    IF              reduce using rule 10 (instruccion -> declarset .)
    MAP             reduce using rule 10 (instruccion -> declarset .)
    VARTYPE         reduce using rule 10 (instruccion -> declarset .)
    ID              reduce using rule 10 (instruccion -> declarset .)
    LIST            reduce using rule 10 (instruccion -> declarset .)
    SET             reduce using rule 10 (instruccion -> declarset .)
    ELSE            reduce using rule 10 (instruccion -> declarset .)
    IMPORT          reduce using rule 10 (instruccion -> declarset .)
    WHILE           reduce using rule 10 (instruccion -> declarset .)
    BREAK           reduce using rule 10 (instruccion -> declarset .)
    PRINT           reduce using rule 10 (instruccion -> declarset .)
    $end            reduce using rule 10 (instruccion -> declarset .)
    CURLYBRACKETRIGHT reduce using rule 10 (instruccion -> declarset .)
    RPAREN          reduce using rule 10 (instruccion -> declarset .)
    RETURN          reduce using rule 10 (instruccion -> declarset .)


state 11

    (11) instruccion -> sentenciaIfElse .

    STATIC          reduce using rule 11 (instruccion -> sentenciaIfElse .)
    DATATYPES       reduce using rule 11 (instruccion -> sentenciaIfElse .)
    VOID            reduce using rule 11 (instruccion -> sentenciaIfElse .)
    FOR             reduce using rule 11 (instruccion -> sentenciaIfElse .)
    IF              reduce using rule 11 (instruccion -> sentenciaIfElse .)
    MAP             reduce using rule 11 (instruccion -> sentenciaIfElse .)
    VARTYPE         reduce using rule 11 (instruccion -> sentenciaIfElse .)
    ID              reduce using rule 11 (instruccion -> sentenciaIfElse .)
    LIST            reduce using rule 11 (instruccion -> sentenciaIfElse .)
    SET             reduce using rule 11 (instruccion -> sentenciaIfElse .)
    ELSE            reduce using rule 11 (instruccion -> sentenciaIfElse .)
    IMPORT          reduce using rule 11 (instruccion -> sentenciaIfElse .)
    WHILE           reduce using rule 11 (instruccion -> sentenciaIfElse .)
    BREAK           reduce using rule 11 (instruccion -> sentenciaIfElse .)
    PRINT           reduce using rule 11 (instruccion -> sentenciaIfElse .)
    $end            reduce using rule 11 (instruccion -> sentenciaIfElse .)
    CURLYBRACKETRIGHT reduce using rule 11 (instruccion -> sentenciaIfElse .)
    RPAREN          reduce using rule 11 (instruccion -> sentenciaIfElse .)
    RETURN          reduce using rule 11 (instruccion -> sentenciaIfElse .)


state 12

    (12) instruccion -> sentenciaElse .

    STATIC          reduce using rule 12 (instruccion -> sentenciaElse .)
    DATATYPES       reduce using rule 12 (instruccion -> sentenciaElse .)
    VOID            reduce using rule 12 (instruccion -> sentenciaElse .)
    FOR             reduce using rule 12 (instruccion -> sentenciaElse .)
    IF              reduce using rule 12 (instruccion -> sentenciaElse .)
    MAP             reduce using rule 12 (instruccion -> sentenciaElse .)
    VARTYPE         reduce using rule 12 (instruccion -> sentenciaElse .)
    ID              reduce using rule 12 (instruccion -> sentenciaElse .)
    LIST            reduce using rule 12 (instruccion -> sentenciaElse .)
    SET             reduce using rule 12 (instruccion -> sentenciaElse .)
    ELSE            reduce using rule 12 (instruccion -> sentenciaElse .)
    IMPORT          reduce using rule 12 (instruccion -> sentenciaElse .)
    WHILE           reduce using rule 12 (instruccion -> sentenciaElse .)
    BREAK           reduce using rule 12 (instruccion -> sentenciaElse .)
    PRINT           reduce using rule 12 (instruccion -> sentenciaElse .)
    $end            reduce using rule 12 (instruccion -> sentenciaElse .)
    CURLYBRACKETRIGHT reduce using rule 12 (instruccion -> sentenciaElse .)
    RPAREN          reduce using rule 12 (instruccion -> sentenciaElse .)
    RETURN          reduce using rule 12 (instruccion -> sentenciaElse .)


state 13

    (13) instruccion -> foreach .

    STATIC          reduce using rule 13 (instruccion -> foreach .)
    DATATYPES       reduce using rule 13 (instruccion -> foreach .)
    VOID            reduce using rule 13 (instruccion -> foreach .)
    FOR             reduce using rule 13 (instruccion -> foreach .)
    IF              reduce using rule 13 (instruccion -> foreach .)
    MAP             reduce using rule 13 (instruccion -> foreach .)
    VARTYPE         reduce using rule 13 (instruccion -> foreach .)
    ID              reduce using rule 13 (instruccion -> foreach .)
    LIST            reduce using rule 13 (instruccion -> foreach .)
    SET             reduce using rule 13 (instruccion -> foreach .)
    ELSE            reduce using rule 13 (instruccion -> foreach .)
    IMPORT          reduce using rule 13 (instruccion -> foreach .)
    WHILE           reduce using rule 13 (instruccion -> foreach .)
    BREAK           reduce using rule 13 (instruccion -> foreach .)
    PRINT           reduce using rule 13 (instruccion -> foreach .)
    $end            reduce using rule 13 (instruccion -> foreach .)
    CURLYBRACKETRIGHT reduce using rule 13 (instruccion -> foreach .)
    RPAREN          reduce using rule 13 (instruccion -> foreach .)
    RETURN          reduce using rule 13 (instruccion -> foreach .)


state 14

    (14) instruccion -> listBuscar .

    STATIC          reduce using rule 14 (instruccion -> listBuscar .)
    DATATYPES       reduce using rule 14 (instruccion -> listBuscar .)
    VOID            reduce using rule 14 (instruccion -> listBuscar .)
    FOR             reduce using rule 14 (instruccion -> listBuscar .)
    IF              reduce using rule 14 (instruccion -> listBuscar .)
    MAP             reduce using rule 14 (instruccion -> listBuscar .)
    VARTYPE         reduce using rule 14 (instruccion -> listBuscar .)
    ID              reduce using rule 14 (instruccion -> listBuscar .)
    LIST            reduce using rule 14 (instruccion -> listBuscar .)
    SET             reduce using rule 14 (instruccion -> listBuscar .)
    ELSE            reduce using rule 14 (instruccion -> listBuscar .)
    IMPORT          reduce using rule 14 (instruccion -> listBuscar .)
    WHILE           reduce using rule 14 (instruccion -> listBuscar .)
    BREAK           reduce using rule 14 (instruccion -> listBuscar .)
    PRINT           reduce using rule 14 (instruccion -> listBuscar .)
    $end            reduce using rule 14 (instruccion -> listBuscar .)
    CURLYBRACKETRIGHT reduce using rule 14 (instruccion -> listBuscar .)
    RPAREN          reduce using rule 14 (instruccion -> listBuscar .)
    RETURN          reduce using rule 14 (instruccion -> listBuscar .)


state 15

    (15) instruccion -> importsDart .

    STATIC          reduce using rule 15 (instruccion -> importsDart .)
    DATATYPES       reduce using rule 15 (instruccion -> importsDart .)
    VOID            reduce using rule 15 (instruccion -> importsDart .)
    FOR             reduce using rule 15 (instruccion -> importsDart .)
    IF              reduce using rule 15 (instruccion -> importsDart .)
    MAP             reduce using rule 15 (instruccion -> importsDart .)
    VARTYPE         reduce using rule 15 (instruccion -> importsDart .)
    ID              reduce using rule 15 (instruccion -> importsDart .)
    LIST            reduce using rule 15 (instruccion -> importsDart .)
    SET             reduce using rule 15 (instruccion -> importsDart .)
    ELSE            reduce using rule 15 (instruccion -> importsDart .)
    IMPORT          reduce using rule 15 (instruccion -> importsDart .)
    WHILE           reduce using rule 15 (instruccion -> importsDart .)
    BREAK           reduce using rule 15 (instruccion -> importsDart .)
    PRINT           reduce using rule 15 (instruccion -> importsDart .)
    $end            reduce using rule 15 (instruccion -> importsDart .)
    CURLYBRACKETRIGHT reduce using rule 15 (instruccion -> importsDart .)
    RPAREN          reduce using rule 15 (instruccion -> importsDart .)
    RETURN          reduce using rule 15 (instruccion -> importsDart .)


state 16

    (16) instruccion -> listMethods .

    STATIC          reduce using rule 16 (instruccion -> listMethods .)
    DATATYPES       reduce using rule 16 (instruccion -> listMethods .)
    VOID            reduce using rule 16 (instruccion -> listMethods .)
    FOR             reduce using rule 16 (instruccion -> listMethods .)
    IF              reduce using rule 16 (instruccion -> listMethods .)
    MAP             reduce using rule 16 (instruccion -> listMethods .)
    VARTYPE         reduce using rule 16 (instruccion -> listMethods .)
    ID              reduce using rule 16 (instruccion -> listMethods .)
    LIST            reduce using rule 16 (instruccion -> listMethods .)
    SET             reduce using rule 16 (instruccion -> listMethods .)
    ELSE            reduce using rule 16 (instruccion -> listMethods .)
    IMPORT          reduce using rule 16 (instruccion -> listMethods .)
    WHILE           reduce using rule 16 (instruccion -> listMethods .)
    BREAK           reduce using rule 16 (instruccion -> listMethods .)
    PRINT           reduce using rule 16 (instruccion -> listMethods .)
    $end            reduce using rule 16 (instruccion -> listMethods .)
    CURLYBRACKETRIGHT reduce using rule 16 (instruccion -> listMethods .)
    RPAREN          reduce using rule 16 (instruccion -> listMethods .)
    RETURN          reduce using rule 16 (instruccion -> listMethods .)


state 17

    (17) instruccion -> sentenciaWhile .

    STATIC          reduce using rule 17 (instruccion -> sentenciaWhile .)
    DATATYPES       reduce using rule 17 (instruccion -> sentenciaWhile .)
    VOID            reduce using rule 17 (instruccion -> sentenciaWhile .)
    FOR             reduce using rule 17 (instruccion -> sentenciaWhile .)
    IF              reduce using rule 17 (instruccion -> sentenciaWhile .)
    MAP             reduce using rule 17 (instruccion -> sentenciaWhile .)
    VARTYPE         reduce using rule 17 (instruccion -> sentenciaWhile .)
    ID              reduce using rule 17 (instruccion -> sentenciaWhile .)
    LIST            reduce using rule 17 (instruccion -> sentenciaWhile .)
    SET             reduce using rule 17 (instruccion -> sentenciaWhile .)
    ELSE            reduce using rule 17 (instruccion -> sentenciaWhile .)
    IMPORT          reduce using rule 17 (instruccion -> sentenciaWhile .)
    WHILE           reduce using rule 17 (instruccion -> sentenciaWhile .)
    BREAK           reduce using rule 17 (instruccion -> sentenciaWhile .)
    PRINT           reduce using rule 17 (instruccion -> sentenciaWhile .)
    $end            reduce using rule 17 (instruccion -> sentenciaWhile .)
    CURLYBRACKETRIGHT reduce using rule 17 (instruccion -> sentenciaWhile .)
    RPAREN          reduce using rule 17 (instruccion -> sentenciaWhile .)
    RETURN          reduce using rule 17 (instruccion -> sentenciaWhile .)


state 18

    (18) instruccion -> palabraBreak .

    STATIC          reduce using rule 18 (instruccion -> palabraBreak .)
    DATATYPES       reduce using rule 18 (instruccion -> palabraBreak .)
    VOID            reduce using rule 18 (instruccion -> palabraBreak .)
    FOR             reduce using rule 18 (instruccion -> palabraBreak .)
    IF              reduce using rule 18 (instruccion -> palabraBreak .)
    MAP             reduce using rule 18 (instruccion -> palabraBreak .)
    VARTYPE         reduce using rule 18 (instruccion -> palabraBreak .)
    ID              reduce using rule 18 (instruccion -> palabraBreak .)
    LIST            reduce using rule 18 (instruccion -> palabraBreak .)
    SET             reduce using rule 18 (instruccion -> palabraBreak .)
    ELSE            reduce using rule 18 (instruccion -> palabraBreak .)
    IMPORT          reduce using rule 18 (instruccion -> palabraBreak .)
    WHILE           reduce using rule 18 (instruccion -> palabraBreak .)
    BREAK           reduce using rule 18 (instruccion -> palabraBreak .)
    PRINT           reduce using rule 18 (instruccion -> palabraBreak .)
    $end            reduce using rule 18 (instruccion -> palabraBreak .)
    CURLYBRACKETRIGHT reduce using rule 18 (instruccion -> palabraBreak .)
    RPAREN          reduce using rule 18 (instruccion -> palabraBreak .)
    RETURN          reduce using rule 18 (instruccion -> palabraBreak .)


state 19

    (19) instruccion -> funcionPrint .

    STATIC          reduce using rule 19 (instruccion -> funcionPrint .)
    DATATYPES       reduce using rule 19 (instruccion -> funcionPrint .)
    VOID            reduce using rule 19 (instruccion -> funcionPrint .)
    FOR             reduce using rule 19 (instruccion -> funcionPrint .)
    IF              reduce using rule 19 (instruccion -> funcionPrint .)
    MAP             reduce using rule 19 (instruccion -> funcionPrint .)
    VARTYPE         reduce using rule 19 (instruccion -> funcionPrint .)
    ID              reduce using rule 19 (instruccion -> funcionPrint .)
    LIST            reduce using rule 19 (instruccion -> funcionPrint .)
    SET             reduce using rule 19 (instruccion -> funcionPrint .)
    ELSE            reduce using rule 19 (instruccion -> funcionPrint .)
    IMPORT          reduce using rule 19 (instruccion -> funcionPrint .)
    WHILE           reduce using rule 19 (instruccion -> funcionPrint .)
    BREAK           reduce using rule 19 (instruccion -> funcionPrint .)
    PRINT           reduce using rule 19 (instruccion -> funcionPrint .)
    $end            reduce using rule 19 (instruccion -> funcionPrint .)
    CURLYBRACKETRIGHT reduce using rule 19 (instruccion -> funcionPrint .)
    RPAREN          reduce using rule 19 (instruccion -> funcionPrint .)
    RETURN          reduce using rule 19 (instruccion -> funcionPrint .)


state 20

    (23) funcion -> STATIC . DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    DATATYPES       shift and go to state 50


state 21

    (24) funcion -> DATATYPES . ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (55) array -> DATATYPES . ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (39) declarset -> DATATYPES . ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (67) asignacion -> DATATYPES . ID EQUAL values SEMICOLON
    (69) asignacion -> DATATYPES . ID operadoresAsignacion values SEMICOLON

    ID              shift and go to state 51


state 22

    (53) array -> ID . EQUAL arrayInicio SEMICOLON
    (64) arrayChanges -> ID . SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (52) foreach -> ID . DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (63) listBuscar -> ID . DOT LENGTH SEMICOLON
    (117) metodoMapClear -> ID . DOT CLEAR LPAREN RPAREN SEMICOLON
    (118) metodoMapRemoveKey -> ID . DOT CLEAR LPAREN values RPAREN SEMICOLON
    (119) metodoMapAddAll -> ID . DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (120) metodoMapAdd -> ID . SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (62) arrayFunc -> ID . DOT subArray
    (46) setadd -> ID . DOT ADD LPAREN values RPAREN SEMICOLON
    (47) setclear -> ID . DOT CLEAR LPAREN values RPAREN SEMICOLON
    (48) setcontains -> ID . DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (49) setAddAll -> ID . DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (50) setlengh -> ID . DOT LENGTH SEMICOLON
    (51) setremove -> ID . DOT REMOVE LPAREN values RPAREN SEMICOLON

    EQUAL           shift and go to state 52
    SQUAREBRACKETLEFT shift and go to state 53
    DOT             shift and go to state 55
    SQUAREBRACKETRIGHT shift and go to state 54


state 23

    (25) funcion -> VOID . ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    ID              shift and go to state 56


state 24

    (87) sentenciaFor -> FOR . LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    LPAREN          shift and go to state 57


state 25

    (70) asignacionesMas -> asignacion .
    (71) asignacionesMas -> asignacion . asignacionesMas
    (70) asignacionesMas -> . asignacion
    (71) asignacionesMas -> . asignacion asignacionesMas
    (67) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (68) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (69) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON

  ! shift/reduce conflict for DATATYPES resolved as shift
  ! shift/reduce conflict for VARTYPE resolved as shift
    STATIC          reduce using rule 70 (asignacionesMas -> asignacion .)
    VOID            reduce using rule 70 (asignacionesMas -> asignacion .)
    FOR             reduce using rule 70 (asignacionesMas -> asignacion .)
    IF              reduce using rule 70 (asignacionesMas -> asignacion .)
    MAP             reduce using rule 70 (asignacionesMas -> asignacion .)
    ID              reduce using rule 70 (asignacionesMas -> asignacion .)
    LIST            reduce using rule 70 (asignacionesMas -> asignacion .)
    SET             reduce using rule 70 (asignacionesMas -> asignacion .)
    ELSE            reduce using rule 70 (asignacionesMas -> asignacion .)
    IMPORT          reduce using rule 70 (asignacionesMas -> asignacion .)
    WHILE           reduce using rule 70 (asignacionesMas -> asignacion .)
    BREAK           reduce using rule 70 (asignacionesMas -> asignacion .)
    PRINT           reduce using rule 70 (asignacionesMas -> asignacion .)
    $end            reduce using rule 70 (asignacionesMas -> asignacion .)
    CURLYBRACKETRIGHT reduce using rule 70 (asignacionesMas -> asignacion .)
    RPAREN          reduce using rule 70 (asignacionesMas -> asignacion .)
    RETURN          reduce using rule 70 (asignacionesMas -> asignacion .)
    DATATYPES       shift and go to state 59
    VARTYPE         shift and go to state 60

  ! DATATYPES       [ reduce using rule 70 (asignacionesMas -> asignacion .) ]
  ! VARTYPE         [ reduce using rule 70 (asignacionesMas -> asignacion .) ]

    asignacion                     shift and go to state 25
    asignacionesMas                shift and go to state 58

state 26

    (29) sentenciaIf -> IF . LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    LPAREN          shift and go to state 61


state 27

    (76) estructuraMap -> MAP . ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (77) estructuraMap -> MAP . LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    ID              shift and go to state 62
    LESS            shift and go to state 63


state 28

    (78) estructuraMap -> VARTYPE . ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (79) estructuraMap -> VARTYPE . ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> VARTYPE . ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (68) asignacion -> VARTYPE . ID EQUAL values SEMICOLON

    ID              shift and go to state 64


state 29

    (81) estructuraMap -> metodoMapClear .

    STATIC          reduce using rule 81 (estructuraMap -> metodoMapClear .)
    DATATYPES       reduce using rule 81 (estructuraMap -> metodoMapClear .)
    VOID            reduce using rule 81 (estructuraMap -> metodoMapClear .)
    FOR             reduce using rule 81 (estructuraMap -> metodoMapClear .)
    IF              reduce using rule 81 (estructuraMap -> metodoMapClear .)
    MAP             reduce using rule 81 (estructuraMap -> metodoMapClear .)
    VARTYPE         reduce using rule 81 (estructuraMap -> metodoMapClear .)
    ID              reduce using rule 81 (estructuraMap -> metodoMapClear .)
    LIST            reduce using rule 81 (estructuraMap -> metodoMapClear .)
    SET             reduce using rule 81 (estructuraMap -> metodoMapClear .)
    ELSE            reduce using rule 81 (estructuraMap -> metodoMapClear .)
    IMPORT          reduce using rule 81 (estructuraMap -> metodoMapClear .)
    WHILE           reduce using rule 81 (estructuraMap -> metodoMapClear .)
    BREAK           reduce using rule 81 (estructuraMap -> metodoMapClear .)
    PRINT           reduce using rule 81 (estructuraMap -> metodoMapClear .)
    $end            reduce using rule 81 (estructuraMap -> metodoMapClear .)
    CURLYBRACKETRIGHT reduce using rule 81 (estructuraMap -> metodoMapClear .)
    RPAREN          reduce using rule 81 (estructuraMap -> metodoMapClear .)
    RETURN          reduce using rule 81 (estructuraMap -> metodoMapClear .)


state 30

    (82) estructuraMap -> metodoMapRemoveKey .

    STATIC          reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    DATATYPES       reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    VOID            reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    FOR             reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    IF              reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    MAP             reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    VARTYPE         reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    ID              reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    LIST            reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    SET             reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    ELSE            reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    IMPORT          reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    WHILE           reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    BREAK           reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    PRINT           reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    $end            reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    CURLYBRACKETRIGHT reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    RPAREN          reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)
    RETURN          reduce using rule 82 (estructuraMap -> metodoMapRemoveKey .)


state 31

    (83) estructuraMap -> metodoMapAddAll .

    STATIC          reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    DATATYPES       reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    VOID            reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    FOR             reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    IF              reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    MAP             reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    VARTYPE         reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    ID              reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    LIST            reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    SET             reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    ELSE            reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    IMPORT          reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    WHILE           reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    BREAK           reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    PRINT           reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    $end            reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    CURLYBRACKETRIGHT reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    RPAREN          reduce using rule 83 (estructuraMap -> metodoMapAddAll .)
    RETURN          reduce using rule 83 (estructuraMap -> metodoMapAddAll .)


state 32

    (84) estructuraMap -> metodoMapAdd .

    STATIC          reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    DATATYPES       reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    VOID            reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    FOR             reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    IF              reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    MAP             reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    VARTYPE         reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    ID              reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    LIST            reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    SET             reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    ELSE            reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    IMPORT          reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    WHILE           reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    BREAK           reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    PRINT           reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    $end            reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    CURLYBRACKETRIGHT reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    RPAREN          reduce using rule 84 (estructuraMap -> metodoMapAdd .)
    RETURN          reduce using rule 84 (estructuraMap -> metodoMapAdd .)


state 33

    (54) array -> arrayFunc . SEMICOLON

    SEMICOLON       shift and go to state 65


state 34

    (56) array -> LIST . ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (123) metodoListFilled -> LIST . DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    ID              shift and go to state 66
    DOT             shift and go to state 67


state 35

    (37) declarset -> SET . ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (38) declarset -> SET . ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    ID              shift and go to state 68


state 36

    (40) declarset -> setadd .

    STATIC          reduce using rule 40 (declarset -> setadd .)
    DATATYPES       reduce using rule 40 (declarset -> setadd .)
    VOID            reduce using rule 40 (declarset -> setadd .)
    FOR             reduce using rule 40 (declarset -> setadd .)
    IF              reduce using rule 40 (declarset -> setadd .)
    MAP             reduce using rule 40 (declarset -> setadd .)
    VARTYPE         reduce using rule 40 (declarset -> setadd .)
    ID              reduce using rule 40 (declarset -> setadd .)
    LIST            reduce using rule 40 (declarset -> setadd .)
    SET             reduce using rule 40 (declarset -> setadd .)
    ELSE            reduce using rule 40 (declarset -> setadd .)
    IMPORT          reduce using rule 40 (declarset -> setadd .)
    WHILE           reduce using rule 40 (declarset -> setadd .)
    BREAK           reduce using rule 40 (declarset -> setadd .)
    PRINT           reduce using rule 40 (declarset -> setadd .)
    $end            reduce using rule 40 (declarset -> setadd .)
    CURLYBRACKETRIGHT reduce using rule 40 (declarset -> setadd .)
    RPAREN          reduce using rule 40 (declarset -> setadd .)
    RETURN          reduce using rule 40 (declarset -> setadd .)


state 37

    (41) declarset -> setclear .

    STATIC          reduce using rule 41 (declarset -> setclear .)
    DATATYPES       reduce using rule 41 (declarset -> setclear .)
    VOID            reduce using rule 41 (declarset -> setclear .)
    FOR             reduce using rule 41 (declarset -> setclear .)
    IF              reduce using rule 41 (declarset -> setclear .)
    MAP             reduce using rule 41 (declarset -> setclear .)
    VARTYPE         reduce using rule 41 (declarset -> setclear .)
    ID              reduce using rule 41 (declarset -> setclear .)
    LIST            reduce using rule 41 (declarset -> setclear .)
    SET             reduce using rule 41 (declarset -> setclear .)
    ELSE            reduce using rule 41 (declarset -> setclear .)
    IMPORT          reduce using rule 41 (declarset -> setclear .)
    WHILE           reduce using rule 41 (declarset -> setclear .)
    BREAK           reduce using rule 41 (declarset -> setclear .)
    PRINT           reduce using rule 41 (declarset -> setclear .)
    $end            reduce using rule 41 (declarset -> setclear .)
    CURLYBRACKETRIGHT reduce using rule 41 (declarset -> setclear .)
    RPAREN          reduce using rule 41 (declarset -> setclear .)
    RETURN          reduce using rule 41 (declarset -> setclear .)


state 38

    (42) declarset -> setcontains .

    STATIC          reduce using rule 42 (declarset -> setcontains .)
    DATATYPES       reduce using rule 42 (declarset -> setcontains .)
    VOID            reduce using rule 42 (declarset -> setcontains .)
    FOR             reduce using rule 42 (declarset -> setcontains .)
    IF              reduce using rule 42 (declarset -> setcontains .)
    MAP             reduce using rule 42 (declarset -> setcontains .)
    VARTYPE         reduce using rule 42 (declarset -> setcontains .)
    ID              reduce using rule 42 (declarset -> setcontains .)
    LIST            reduce using rule 42 (declarset -> setcontains .)
    SET             reduce using rule 42 (declarset -> setcontains .)
    ELSE            reduce using rule 42 (declarset -> setcontains .)
    IMPORT          reduce using rule 42 (declarset -> setcontains .)
    WHILE           reduce using rule 42 (declarset -> setcontains .)
    BREAK           reduce using rule 42 (declarset -> setcontains .)
    PRINT           reduce using rule 42 (declarset -> setcontains .)
    $end            reduce using rule 42 (declarset -> setcontains .)
    CURLYBRACKETRIGHT reduce using rule 42 (declarset -> setcontains .)
    RPAREN          reduce using rule 42 (declarset -> setcontains .)
    RETURN          reduce using rule 42 (declarset -> setcontains .)


state 39

    (43) declarset -> setAddAll .

    STATIC          reduce using rule 43 (declarset -> setAddAll .)
    DATATYPES       reduce using rule 43 (declarset -> setAddAll .)
    VOID            reduce using rule 43 (declarset -> setAddAll .)
    FOR             reduce using rule 43 (declarset -> setAddAll .)
    IF              reduce using rule 43 (declarset -> setAddAll .)
    MAP             reduce using rule 43 (declarset -> setAddAll .)
    VARTYPE         reduce using rule 43 (declarset -> setAddAll .)
    ID              reduce using rule 43 (declarset -> setAddAll .)
    LIST            reduce using rule 43 (declarset -> setAddAll .)
    SET             reduce using rule 43 (declarset -> setAddAll .)
    ELSE            reduce using rule 43 (declarset -> setAddAll .)
    IMPORT          reduce using rule 43 (declarset -> setAddAll .)
    WHILE           reduce using rule 43 (declarset -> setAddAll .)
    BREAK           reduce using rule 43 (declarset -> setAddAll .)
    PRINT           reduce using rule 43 (declarset -> setAddAll .)
    $end            reduce using rule 43 (declarset -> setAddAll .)
    CURLYBRACKETRIGHT reduce using rule 43 (declarset -> setAddAll .)
    RPAREN          reduce using rule 43 (declarset -> setAddAll .)
    RETURN          reduce using rule 43 (declarset -> setAddAll .)


state 40

    (44) declarset -> setlengh .

    STATIC          reduce using rule 44 (declarset -> setlengh .)
    DATATYPES       reduce using rule 44 (declarset -> setlengh .)
    VOID            reduce using rule 44 (declarset -> setlengh .)
    FOR             reduce using rule 44 (declarset -> setlengh .)
    IF              reduce using rule 44 (declarset -> setlengh .)
    MAP             reduce using rule 44 (declarset -> setlengh .)
    VARTYPE         reduce using rule 44 (declarset -> setlengh .)
    ID              reduce using rule 44 (declarset -> setlengh .)
    LIST            reduce using rule 44 (declarset -> setlengh .)
    SET             reduce using rule 44 (declarset -> setlengh .)
    ELSE            reduce using rule 44 (declarset -> setlengh .)
    IMPORT          reduce using rule 44 (declarset -> setlengh .)
    WHILE           reduce using rule 44 (declarset -> setlengh .)
    BREAK           reduce using rule 44 (declarset -> setlengh .)
    PRINT           reduce using rule 44 (declarset -> setlengh .)
    $end            reduce using rule 44 (declarset -> setlengh .)
    CURLYBRACKETRIGHT reduce using rule 44 (declarset -> setlengh .)
    RPAREN          reduce using rule 44 (declarset -> setlengh .)
    RETURN          reduce using rule 44 (declarset -> setlengh .)


state 41

    (45) declarset -> setremove .

    STATIC          reduce using rule 45 (declarset -> setremove .)
    DATATYPES       reduce using rule 45 (declarset -> setremove .)
    VOID            reduce using rule 45 (declarset -> setremove .)
    FOR             reduce using rule 45 (declarset -> setremove .)
    IF              reduce using rule 45 (declarset -> setremove .)
    MAP             reduce using rule 45 (declarset -> setremove .)
    VARTYPE         reduce using rule 45 (declarset -> setremove .)
    ID              reduce using rule 45 (declarset -> setremove .)
    LIST            reduce using rule 45 (declarset -> setremove .)
    SET             reduce using rule 45 (declarset -> setremove .)
    ELSE            reduce using rule 45 (declarset -> setremove .)
    IMPORT          reduce using rule 45 (declarset -> setremove .)
    WHILE           reduce using rule 45 (declarset -> setremove .)
    BREAK           reduce using rule 45 (declarset -> setremove .)
    PRINT           reduce using rule 45 (declarset -> setremove .)
    $end            reduce using rule 45 (declarset -> setremove .)
    CURLYBRACKETRIGHT reduce using rule 45 (declarset -> setremove .)
    RPAREN          reduce using rule 45 (declarset -> setremove .)
    RETURN          reduce using rule 45 (declarset -> setremove .)


state 42

    (30) sentenciaElse -> ELSE . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> ELSE . sentenciaIf sentenciaElse
    (32) sentenciaElse -> ELSE . sentenciaIf
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 69
    IF              shift and go to state 26

    sentenciaIf                    shift and go to state 70

state 43

    (121) importsDart -> IMPORT . STR SEMICOLON

    STR             shift and go to state 71


state 44

    (122) listMethods -> metodoListFilled .

    STATIC          reduce using rule 122 (listMethods -> metodoListFilled .)
    DATATYPES       reduce using rule 122 (listMethods -> metodoListFilled .)
    VOID            reduce using rule 122 (listMethods -> metodoListFilled .)
    FOR             reduce using rule 122 (listMethods -> metodoListFilled .)
    IF              reduce using rule 122 (listMethods -> metodoListFilled .)
    MAP             reduce using rule 122 (listMethods -> metodoListFilled .)
    VARTYPE         reduce using rule 122 (listMethods -> metodoListFilled .)
    ID              reduce using rule 122 (listMethods -> metodoListFilled .)
    LIST            reduce using rule 122 (listMethods -> metodoListFilled .)
    SET             reduce using rule 122 (listMethods -> metodoListFilled .)
    ELSE            reduce using rule 122 (listMethods -> metodoListFilled .)
    IMPORT          reduce using rule 122 (listMethods -> metodoListFilled .)
    WHILE           reduce using rule 122 (listMethods -> metodoListFilled .)
    BREAK           reduce using rule 122 (listMethods -> metodoListFilled .)
    PRINT           reduce using rule 122 (listMethods -> metodoListFilled .)
    $end            reduce using rule 122 (listMethods -> metodoListFilled .)
    CURLYBRACKETRIGHT reduce using rule 122 (listMethods -> metodoListFilled .)
    RPAREN          reduce using rule 122 (listMethods -> metodoListFilled .)
    RETURN          reduce using rule 122 (listMethods -> metodoListFilled .)


state 45

    (88) sentenciaWhile -> WHILE . LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    LPAREN          shift and go to state 72


state 46

    (92) palabraBreak -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 73


state 47

    (89) funcionPrint -> PRINT . LPAREN printValues RPAREN SEMICOLON

    LPAREN          shift and go to state 74


state 48

    (2) instruccionesMas -> instruccion instruccionesMas .

    $end            reduce using rule 2 (instruccionesMas -> instruccion instruccionesMas .)
    CURLYBRACKETRIGHT reduce using rule 2 (instruccionesMas -> instruccion instruccionesMas .)
    RPAREN          reduce using rule 2 (instruccionesMas -> instruccion instruccionesMas .)
    RETURN          reduce using rule 2 (instruccionesMas -> instruccion instruccionesMas .)


state 49

    (34) sentenciaIfElse -> sentenciaIf sentenciaElse .

    STATIC          reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    DATATYPES       reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    VOID            reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    FOR             reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    IF              reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    MAP             reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    VARTYPE         reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    ID              reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    LIST            reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    SET             reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    ELSE            reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    IMPORT          reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    WHILE           reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    BREAK           reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    PRINT           reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    $end            reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    CURLYBRACKETRIGHT reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    RPAREN          reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    RETURN          reduce using rule 34 (sentenciaIfElse -> sentenciaIf sentenciaElse .)


state 50

    (23) funcion -> STATIC DATATYPES . ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    ID              shift and go to state 75


state 51

    (24) funcion -> DATATYPES ID . LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (55) array -> DATATYPES ID . EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (39) declarset -> DATATYPES ID . EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (67) asignacion -> DATATYPES ID . EQUAL values SEMICOLON
    (69) asignacion -> DATATYPES ID . operadoresAsignacion values SEMICOLON
    (113) operadoresAsignacion -> . PLUSEQUAL
    (114) operadoresAsignacion -> . MINUSEQUAL
    (115) operadoresAsignacion -> . MULTIPLUS
    (116) operadoresAsignacion -> . DIVIDEEQUAL

    LPAREN          shift and go to state 76
    EQUAL           shift and go to state 77
    PLUSEQUAL       shift and go to state 79
    MINUSEQUAL      shift and go to state 80
    MULTIPLUS       shift and go to state 81
    DIVIDEEQUAL     shift and go to state 82

    operadoresAsignacion           shift and go to state 78

state 52

    (53) array -> ID EQUAL . arrayInicio SEMICOLON
    (57) arrayInicio -> . SQUAREBRACKETLEFT SQUAREBRACKETRIGHT
    (58) arrayInicio -> . SQUAREBRACKETLEFT set SQUAREBRACKETRIGHT
    (59) arrayInicio -> . ID DOT subArray

    SQUAREBRACKETLEFT shift and go to state 85
    ID              shift and go to state 83

    arrayInicio                    shift and go to state 84

state 53

    (64) arrayChanges -> ID SQUAREBRACKETLEFT . values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 86

state 54

    (120) metodoMapAdd -> ID SQUAREBRACKETRIGHT . values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 91

state 55

    (52) foreach -> ID DOT . FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (63) listBuscar -> ID DOT . LENGTH SEMICOLON
    (117) metodoMapClear -> ID DOT . CLEAR LPAREN RPAREN SEMICOLON
    (118) metodoMapRemoveKey -> ID DOT . CLEAR LPAREN values RPAREN SEMICOLON
    (119) metodoMapAddAll -> ID DOT . CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (62) arrayFunc -> ID DOT . subArray
    (46) setadd -> ID DOT . ADD LPAREN values RPAREN SEMICOLON
    (47) setclear -> ID DOT . CLEAR LPAREN values RPAREN SEMICOLON
    (48) setcontains -> ID DOT . CONTAINS LPAREN values RPAREN SEMICOLON
    (49) setAddAll -> ID DOT . ADDALL LPAREN ID RPAREN SEMICOLON
    (50) setlengh -> ID DOT . LENGTH SEMICOLON
    (51) setremove -> ID DOT . REMOVE LPAREN values RPAREN SEMICOLON
    (65) subArray -> . SUBLIST LPAREN values RPAREN SEMICOLON
    (66) subArray -> . subArray DOT subArray

    FOREACH         shift and go to state 92
    LENGTH          shift and go to state 93
    CLEAR           shift and go to state 94
    ADD             shift and go to state 96
    CONTAINS        shift and go to state 97
    ADDALL          shift and go to state 98
    REMOVE          shift and go to state 99
    SUBLIST         shift and go to state 100

    subArray                       shift and go to state 95

state 56

    (25) funcion -> VOID ID . LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    LPAREN          shift and go to state 101


state 57

    (87) sentenciaFor -> FOR LPAREN . asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (67) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (68) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (69) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON

    DATATYPES       shift and go to state 59
    VARTYPE         shift and go to state 60

    asignacion                     shift and go to state 102

state 58

    (71) asignacionesMas -> asignacion asignacionesMas .

    STATIC          reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    DATATYPES       reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    VOID            reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    FOR             reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    IF              reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    MAP             reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    VARTYPE         reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    ID              reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    LIST            reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    SET             reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    ELSE            reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    IMPORT          reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    WHILE           reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    BREAK           reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    PRINT           reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    $end            reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    CURLYBRACKETRIGHT reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    RPAREN          reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)
    RETURN          reduce using rule 71 (asignacionesMas -> asignacion asignacionesMas .)


state 59

    (67) asignacion -> DATATYPES . ID EQUAL values SEMICOLON
    (69) asignacion -> DATATYPES . ID operadoresAsignacion values SEMICOLON

    ID              shift and go to state 103


state 60

    (68) asignacion -> VARTYPE . ID EQUAL values SEMICOLON

    ID              shift and go to state 104


state 61

    (29) sentenciaIf -> IF LPAREN . comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (93) comparacion -> . ID comparador values
    (94) comparacion -> . ID comparador ID
    (95) comparacion -> . BOOLEAN
    (96) comparacion -> . ID operadoresLogicos ID
    (97) comparacion -> . BOOLEAN operadoresLogicos ID

    ID              shift and go to state 106
    BOOLEAN         shift and go to state 107

    comparacion                    shift and go to state 105

state 62

    (76) estructuraMap -> MAP ID . EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    EQUAL           shift and go to state 108


state 63

    (77) estructuraMap -> MAP LESS . DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    DATATYPES       shift and go to state 109


state 64

    (78) estructuraMap -> VARTYPE ID . EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (79) estructuraMap -> VARTYPE ID . EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> VARTYPE ID . EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (68) asignacion -> VARTYPE ID . EQUAL values SEMICOLON

    EQUAL           shift and go to state 110


state 65

    (54) array -> arrayFunc SEMICOLON .

    STATIC          reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    DATATYPES       reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    VOID            reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    FOR             reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    IF              reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    MAP             reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    VARTYPE         reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    ID              reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    LIST            reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    SET             reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    ELSE            reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    IMPORT          reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    WHILE           reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    BREAK           reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    PRINT           reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    $end            reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    RPAREN          reduce using rule 54 (array -> arrayFunc SEMICOLON .)
    RETURN          reduce using rule 54 (array -> arrayFunc SEMICOLON .)


state 66

    (56) array -> LIST ID . EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON

    EQUAL           shift and go to state 111


state 67

    (123) metodoListFilled -> LIST DOT . FILLED LPAREN arrayValues RPAREN SEMICOLON

    FILLED          shift and go to state 112


state 68

    (37) declarset -> SET ID . EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (38) declarset -> SET ID . EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    EQUAL           shift and go to state 113


state 69

    (30) sentenciaElse -> ELSE CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . sentenciaIf
    (6) instruccion -> . asignacionesMas
    (7) instruccion -> . estructuraMap
    (8) instruccion -> . array
    (9) instruccion -> . arrayChanges
    (10) instruccion -> . declarset
    (11) instruccion -> . sentenciaIfElse
    (12) instruccion -> . sentenciaElse
    (13) instruccion -> . foreach
    (14) instruccion -> . listBuscar
    (15) instruccion -> . importsDart
    (16) instruccion -> . listMethods
    (17) instruccion -> . sentenciaWhile
    (18) instruccion -> . palabraBreak
    (19) instruccion -> . funcionPrint
    (23) funcion -> . STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (24) funcion -> . DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (25) funcion -> . VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (87) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (70) asignacionesMas -> . asignacion
    (71) asignacionesMas -> . asignacion asignacionesMas
    (76) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (77) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (78) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (79) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (81) estructuraMap -> . metodoMapClear
    (82) estructuraMap -> . metodoMapRemoveKey
    (83) estructuraMap -> . metodoMapAddAll
    (84) estructuraMap -> . metodoMapAdd
    (53) array -> . ID EQUAL arrayInicio SEMICOLON
    (54) array -> . arrayFunc SEMICOLON
    (55) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (56) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (64) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (37) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (38) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (40) declarset -> . setadd
    (41) declarset -> . setclear
    (42) declarset -> . setcontains
    (43) declarset -> . setAddAll
    (44) declarset -> . setlengh
    (45) declarset -> . setremove
    (33) sentenciaIfElse -> . sentenciaIf
    (34) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse
    (32) sentenciaElse -> . ELSE sentenciaIf
    (52) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (63) listBuscar -> . ID DOT LENGTH SEMICOLON
    (121) importsDart -> . IMPORT STR SEMICOLON
    (122) listMethods -> . metodoListFilled
    (88) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (92) palabraBreak -> . BREAK SEMICOLON
    (89) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (67) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (68) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (69) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (117) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (118) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (119) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (120) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (62) arrayFunc -> . ID DOT subArray
    (46) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (47) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (48) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (49) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (50) setlengh -> . ID DOT LENGTH SEMICOLON
    (51) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (123) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 20
    DATATYPES       shift and go to state 21
    VOID            shift and go to state 23
    FOR             shift and go to state 24
    IF              shift and go to state 26
    MAP             shift and go to state 27
    VARTYPE         shift and go to state 28
    ID              shift and go to state 22
    LIST            shift and go to state 34
    SET             shift and go to state 35
    ELSE            shift and go to state 42
    IMPORT          shift and go to state 43
    WHILE           shift and go to state 45
    BREAK           shift and go to state 46
    PRINT           shift and go to state 47

    instruccionesMas               shift and go to state 114
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    sentenciaIf                    shift and go to state 5
    asignacionesMas                shift and go to state 6
    estructuraMap                  shift and go to state 7
    array                          shift and go to state 8
    arrayChanges                   shift and go to state 9
    declarset                      shift and go to state 10
    sentenciaIfElse                shift and go to state 11
    sentenciaElse                  shift and go to state 12
    foreach                        shift and go to state 13
    listBuscar                     shift and go to state 14
    importsDart                    shift and go to state 15
    listMethods                    shift and go to state 16
    sentenciaWhile                 shift and go to state 17
    palabraBreak                   shift and go to state 18
    funcionPrint                   shift and go to state 19
    asignacion                     shift and go to state 25
    metodoMapClear                 shift and go to state 29
    metodoMapRemoveKey             shift and go to state 30
    metodoMapAddAll                shift and go to state 31
    metodoMapAdd                   shift and go to state 32
    arrayFunc                      shift and go to state 33
    setadd                         shift and go to state 36
    setclear                       shift and go to state 37
    setcontains                    shift and go to state 38
    setAddAll                      shift and go to state 39
    setlengh                       shift and go to state 40
    setremove                      shift and go to state 41
    metodoListFilled               shift and go to state 44

state 70

    (31) sentenciaElse -> ELSE sentenciaIf . sentenciaElse
    (32) sentenciaElse -> ELSE sentenciaIf .
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse
    (32) sentenciaElse -> . ELSE sentenciaIf

  ! shift/reduce conflict for ELSE resolved as shift
    STATIC          reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    DATATYPES       reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    VOID            reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    FOR             reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    IF              reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    MAP             reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    VARTYPE         reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    ID              reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    LIST            reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    SET             reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    IMPORT          reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    WHILE           reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    BREAK           reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    PRINT           reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    $end            reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    CURLYBRACKETRIGHT reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    RPAREN          reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    RETURN          reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .)
    ELSE            shift and go to state 42

  ! ELSE            [ reduce using rule 32 (sentenciaElse -> ELSE sentenciaIf .) ]

    sentenciaElse                  shift and go to state 115

state 71

    (121) importsDart -> IMPORT STR . SEMICOLON

    SEMICOLON       shift and go to state 116


state 72

    (88) sentenciaWhile -> WHILE LPAREN . comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (93) comparacion -> . ID comparador values
    (94) comparacion -> . ID comparador ID
    (95) comparacion -> . BOOLEAN
    (96) comparacion -> . ID operadoresLogicos ID
    (97) comparacion -> . BOOLEAN operadoresLogicos ID

    ID              shift and go to state 106
    BOOLEAN         shift and go to state 107

    comparacion                    shift and go to state 117

state 73

    (92) palabraBreak -> BREAK SEMICOLON .

    STATIC          reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    DATATYPES       reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    VOID            reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    FOR             reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    IF              reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    MAP             reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    VARTYPE         reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    ID              reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    LIST            reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    SET             reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    ELSE            reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    IMPORT          reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    WHILE           reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    BREAK           reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    PRINT           reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    $end            reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    RPAREN          reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)
    RETURN          reduce using rule 92 (palabraBreak -> BREAK SEMICOLON .)


state 74

    (89) funcionPrint -> PRINT LPAREN . printValues RPAREN SEMICOLON
    (90) printValues -> . ID
    (91) printValues -> . values
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    ID              shift and go to state 119
    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    printValues                    shift and go to state 118
    values                         shift and go to state 120

state 75

    (23) funcion -> STATIC DATATYPES ID . LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    LPAREN          shift and go to state 121


state 76

    (24) funcion -> DATATYPES ID LPAREN . parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) parametrosF -> . parametro COMMA parametrosF
    (21) parametrosF -> . parametro
    (22) parametro -> . DATATYPES ID

    DATATYPES       shift and go to state 122

    parametrosF                    shift and go to state 123
    parametro                      shift and go to state 124

state 77

    (55) array -> DATATYPES ID EQUAL . SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (39) declarset -> DATATYPES ID EQUAL . LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (67) asignacion -> DATATYPES ID EQUAL . values SEMICOLON
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    SQUAREBRACKETLEFT shift and go to state 125
    LESS            shift and go to state 126
    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 127

state 78

    (69) asignacion -> DATATYPES ID operadoresAsignacion . values SEMICOLON
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 128

state 79

    (113) operadoresAsignacion -> PLUSEQUAL .

    INT             reduce using rule 113 (operadoresAsignacion -> PLUSEQUAL .)
    FLOAT           reduce using rule 113 (operadoresAsignacion -> PLUSEQUAL .)
    BOOLEAN         reduce using rule 113 (operadoresAsignacion -> PLUSEQUAL .)
    STR             reduce using rule 113 (operadoresAsignacion -> PLUSEQUAL .)


state 80

    (114) operadoresAsignacion -> MINUSEQUAL .

    INT             reduce using rule 114 (operadoresAsignacion -> MINUSEQUAL .)
    FLOAT           reduce using rule 114 (operadoresAsignacion -> MINUSEQUAL .)
    BOOLEAN         reduce using rule 114 (operadoresAsignacion -> MINUSEQUAL .)
    STR             reduce using rule 114 (operadoresAsignacion -> MINUSEQUAL .)


state 81

    (115) operadoresAsignacion -> MULTIPLUS .

    INT             reduce using rule 115 (operadoresAsignacion -> MULTIPLUS .)
    FLOAT           reduce using rule 115 (operadoresAsignacion -> MULTIPLUS .)
    BOOLEAN         reduce using rule 115 (operadoresAsignacion -> MULTIPLUS .)
    STR             reduce using rule 115 (operadoresAsignacion -> MULTIPLUS .)


state 82

    (116) operadoresAsignacion -> DIVIDEEQUAL .

    INT             reduce using rule 116 (operadoresAsignacion -> DIVIDEEQUAL .)
    FLOAT           reduce using rule 116 (operadoresAsignacion -> DIVIDEEQUAL .)
    BOOLEAN         reduce using rule 116 (operadoresAsignacion -> DIVIDEEQUAL .)
    STR             reduce using rule 116 (operadoresAsignacion -> DIVIDEEQUAL .)


state 83

    (59) arrayInicio -> ID . DOT subArray

    DOT             shift and go to state 129


state 84

    (53) array -> ID EQUAL arrayInicio . SEMICOLON

    SEMICOLON       shift and go to state 130


state 85

    (57) arrayInicio -> SQUAREBRACKETLEFT . SQUAREBRACKETRIGHT
    (58) arrayInicio -> SQUAREBRACKETLEFT . set SQUAREBRACKETRIGHT
    (35) set -> . values COMMA set
    (36) set -> . values
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    SQUAREBRACKETRIGHT shift and go to state 131
    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    set                            shift and go to state 132
    values                         shift and go to state 133

state 86

    (64) arrayChanges -> ID SQUAREBRACKETLEFT values . SQUAREBRACKETRIGHT EQUAL values SEMICOLON

    SQUAREBRACKETRIGHT shift and go to state 134


state 87

    (72) values -> INT .

    SQUAREBRACKETRIGHT reduce using rule 72 (values -> INT .)
    SQUAREBRACKETLEFT reduce using rule 72 (values -> INT .)
    RPAREN          reduce using rule 72 (values -> INT .)
    SEMICOLON       reduce using rule 72 (values -> INT .)
    COMMA           reduce using rule 72 (values -> INT .)
    COLON           reduce using rule 72 (values -> INT .)
    CURLYBRACKETRIGHT reduce using rule 72 (values -> INT .)


state 88

    (73) values -> FLOAT .

    SQUAREBRACKETRIGHT reduce using rule 73 (values -> FLOAT .)
    SQUAREBRACKETLEFT reduce using rule 73 (values -> FLOAT .)
    RPAREN          reduce using rule 73 (values -> FLOAT .)
    SEMICOLON       reduce using rule 73 (values -> FLOAT .)
    COMMA           reduce using rule 73 (values -> FLOAT .)
    COLON           reduce using rule 73 (values -> FLOAT .)
    CURLYBRACKETRIGHT reduce using rule 73 (values -> FLOAT .)


state 89

    (74) values -> BOOLEAN .

    SQUAREBRACKETRIGHT reduce using rule 74 (values -> BOOLEAN .)
    SQUAREBRACKETLEFT reduce using rule 74 (values -> BOOLEAN .)
    RPAREN          reduce using rule 74 (values -> BOOLEAN .)
    SEMICOLON       reduce using rule 74 (values -> BOOLEAN .)
    COMMA           reduce using rule 74 (values -> BOOLEAN .)
    COLON           reduce using rule 74 (values -> BOOLEAN .)
    CURLYBRACKETRIGHT reduce using rule 74 (values -> BOOLEAN .)


state 90

    (75) values -> STR .

    SQUAREBRACKETRIGHT reduce using rule 75 (values -> STR .)
    SQUAREBRACKETLEFT reduce using rule 75 (values -> STR .)
    RPAREN          reduce using rule 75 (values -> STR .)
    SEMICOLON       reduce using rule 75 (values -> STR .)
    COMMA           reduce using rule 75 (values -> STR .)
    COLON           reduce using rule 75 (values -> STR .)
    CURLYBRACKETRIGHT reduce using rule 75 (values -> STR .)


state 91

    (120) metodoMapAdd -> ID SQUAREBRACKETRIGHT values . SQUAREBRACKETLEFT EQUAL values SEMICOLON

    SQUAREBRACKETLEFT shift and go to state 135


state 92

    (52) foreach -> ID DOT FOREACH . LPAREN instruccionesMas RPAREN SEMICOLON

    LPAREN          shift and go to state 136


state 93

    (63) listBuscar -> ID DOT LENGTH . SEMICOLON
    (50) setlengh -> ID DOT LENGTH . SEMICOLON

    SEMICOLON       shift and go to state 137


state 94

    (117) metodoMapClear -> ID DOT CLEAR . LPAREN RPAREN SEMICOLON
    (118) metodoMapRemoveKey -> ID DOT CLEAR . LPAREN values RPAREN SEMICOLON
    (119) metodoMapAddAll -> ID DOT CLEAR . LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (47) setclear -> ID DOT CLEAR . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 138


state 95

    (62) arrayFunc -> ID DOT subArray .
    (66) subArray -> subArray . DOT subArray

    SEMICOLON       reduce using rule 62 (arrayFunc -> ID DOT subArray .)
    DOT             shift and go to state 139


state 96

    (46) setadd -> ID DOT ADD . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 140


state 97

    (48) setcontains -> ID DOT CONTAINS . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 141


state 98

    (49) setAddAll -> ID DOT ADDALL . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 142


state 99

    (51) setremove -> ID DOT REMOVE . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 143


state 100

    (65) subArray -> SUBLIST . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 144


state 101

    (25) funcion -> VOID ID LPAREN . parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) parametrosF -> . parametro COMMA parametrosF
    (21) parametrosF -> . parametro
    (22) parametro -> . DATATYPES ID

    DATATYPES       shift and go to state 122

    parametrosF                    shift and go to state 145
    parametro                      shift and go to state 124

state 102

    (87) sentenciaFor -> FOR LPAREN asignacion . SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    SEMICOLON       shift and go to state 146


state 103

    (67) asignacion -> DATATYPES ID . EQUAL values SEMICOLON
    (69) asignacion -> DATATYPES ID . operadoresAsignacion values SEMICOLON
    (113) operadoresAsignacion -> . PLUSEQUAL
    (114) operadoresAsignacion -> . MINUSEQUAL
    (115) operadoresAsignacion -> . MULTIPLUS
    (116) operadoresAsignacion -> . DIVIDEEQUAL

    EQUAL           shift and go to state 147
    PLUSEQUAL       shift and go to state 79
    MINUSEQUAL      shift and go to state 80
    MULTIPLUS       shift and go to state 81
    DIVIDEEQUAL     shift and go to state 82

    operadoresAsignacion           shift and go to state 78

state 104

    (68) asignacion -> VARTYPE ID . EQUAL values SEMICOLON

    EQUAL           shift and go to state 148


state 105

    (29) sentenciaIf -> IF LPAREN comparacion . RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    RPAREN          shift and go to state 149


state 106

    (93) comparacion -> ID . comparador values
    (94) comparacion -> ID . comparador ID
    (96) comparacion -> ID . operadoresLogicos ID
    (98) comparador -> . GREATER
    (99) comparador -> . LESS
    (100) comparador -> . GREATEREQ
    (101) comparador -> . LESSEQ
    (102) comparador -> . EQUALC
    (103) comparador -> . DIFFERENT
    (104) operadoresLogicos -> . AND
    (105) operadoresLogicos -> . OR
    (106) operadoresLogicos -> . NOT

    GREATER         shift and go to state 152
    LESS            shift and go to state 153
    GREATEREQ       shift and go to state 154
    LESSEQ          shift and go to state 155
    EQUALC          shift and go to state 156
    DIFFERENT       shift and go to state 157
    AND             shift and go to state 158
    OR              shift and go to state 159
    NOT             shift and go to state 160

    comparador                     shift and go to state 150
    operadoresLogicos              shift and go to state 151

state 107

    (95) comparacion -> BOOLEAN .
    (97) comparacion -> BOOLEAN . operadoresLogicos ID
    (104) operadoresLogicos -> . AND
    (105) operadoresLogicos -> . OR
    (106) operadoresLogicos -> . NOT

    RPAREN          reduce using rule 95 (comparacion -> BOOLEAN .)
    SEMICOLON       reduce using rule 95 (comparacion -> BOOLEAN .)
    AND             shift and go to state 158
    OR              shift and go to state 159
    NOT             shift and go to state 160

    operadoresLogicos              shift and go to state 161

state 108

    (76) estructuraMap -> MAP ID EQUAL . CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETLEFT shift and go to state 162


state 109

    (77) estructuraMap -> MAP LESS DATATYPES . COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    COMMA           shift and go to state 163


state 110

    (78) estructuraMap -> VARTYPE ID EQUAL . CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (79) estructuraMap -> VARTYPE ID EQUAL . NEW MAP LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> VARTYPE ID EQUAL . NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (68) asignacion -> VARTYPE ID EQUAL . values SEMICOLON
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    CURLYBRACKETLEFT shift and go to state 164
    NEW             shift and go to state 165
    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 166

state 111

    (56) array -> LIST ID EQUAL . SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON

    SQUAREBRACKETLEFT shift and go to state 167


state 112

    (123) metodoListFilled -> LIST DOT FILLED . LPAREN arrayValues RPAREN SEMICOLON

    LPAREN          shift and go to state 168


state 113

    (37) declarset -> SET ID EQUAL . NEW SET LPAREN RPAREN SEMICOLON
    (38) declarset -> SET ID EQUAL . CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    NEW             shift and go to state 169
    CURLYBRACKETLEFT shift and go to state 170


state 114

    (30) sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 171


state 115

    (31) sentenciaElse -> ELSE sentenciaIf sentenciaElse .

    STATIC          reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    DATATYPES       reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    VOID            reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    FOR             reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    IF              reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    MAP             reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    VARTYPE         reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    ID              reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    LIST            reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    SET             reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    ELSE            reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    IMPORT          reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    WHILE           reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    BREAK           reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    PRINT           reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    $end            reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    CURLYBRACKETRIGHT reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    RPAREN          reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    RETURN          reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)


state 116

    (121) importsDart -> IMPORT STR SEMICOLON .

    STATIC          reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    DATATYPES       reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    VOID            reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    FOR             reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    IF              reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    MAP             reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    VARTYPE         reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    ID              reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    LIST            reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    SET             reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    ELSE            reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    IMPORT          reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    WHILE           reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    BREAK           reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    PRINT           reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    $end            reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    RPAREN          reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)
    RETURN          reduce using rule 121 (importsDart -> IMPORT STR SEMICOLON .)


state 117

    (88) sentenciaWhile -> WHILE LPAREN comparacion . RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    RPAREN          shift and go to state 172


state 118

    (89) funcionPrint -> PRINT LPAREN printValues . RPAREN SEMICOLON

    RPAREN          shift and go to state 173


state 119

    (90) printValues -> ID .

    RPAREN          reduce using rule 90 (printValues -> ID .)


state 120

    (91) printValues -> values .

    RPAREN          reduce using rule 91 (printValues -> values .)


state 121

    (23) funcion -> STATIC DATATYPES ID LPAREN . parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) parametrosF -> . parametro COMMA parametrosF
    (21) parametrosF -> . parametro
    (22) parametro -> . DATATYPES ID

    DATATYPES       shift and go to state 122

    parametrosF                    shift and go to state 174
    parametro                      shift and go to state 124

state 122

    (22) parametro -> DATATYPES . ID

    ID              shift and go to state 175


state 123

    (24) funcion -> DATATYPES ID LPAREN parametrosF . RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    RPAREN          shift and go to state 176


state 124

    (20) parametrosF -> parametro . COMMA parametrosF
    (21) parametrosF -> parametro .

    COMMA           shift and go to state 177
    RPAREN          reduce using rule 21 (parametrosF -> parametro .)


state 125

    (55) array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT . arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (60) arrayValues -> . values
    (61) arrayValues -> . values COMMA arrayValues
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    arrayValues                    shift and go to state 178
    values                         shift and go to state 179

state 126

    (39) declarset -> DATATYPES ID EQUAL LESS . DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    DATATYPES       shift and go to state 180


state 127

    (67) asignacion -> DATATYPES ID EQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 181


state 128

    (69) asignacion -> DATATYPES ID operadoresAsignacion values . SEMICOLON

    SEMICOLON       shift and go to state 182


state 129

    (59) arrayInicio -> ID DOT . subArray
    (65) subArray -> . SUBLIST LPAREN values RPAREN SEMICOLON
    (66) subArray -> . subArray DOT subArray

    SUBLIST         shift and go to state 100

    subArray                       shift and go to state 183

state 130

    (53) array -> ID EQUAL arrayInicio SEMICOLON .

    STATIC          reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    DATATYPES       reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    VOID            reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    FOR             reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    IF              reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    MAP             reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    VARTYPE         reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    ID              reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    LIST            reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    SET             reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    ELSE            reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    IMPORT          reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    WHILE           reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    BREAK           reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    PRINT           reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    $end            reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    RPAREN          reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)
    RETURN          reduce using rule 53 (array -> ID EQUAL arrayInicio SEMICOLON .)


state 131

    (57) arrayInicio -> SQUAREBRACKETLEFT SQUAREBRACKETRIGHT .

    SEMICOLON       reduce using rule 57 (arrayInicio -> SQUAREBRACKETLEFT SQUAREBRACKETRIGHT .)


state 132

    (58) arrayInicio -> SQUAREBRACKETLEFT set . SQUAREBRACKETRIGHT

    SQUAREBRACKETRIGHT shift and go to state 184


state 133

    (35) set -> values . COMMA set
    (36) set -> values .

    COMMA           shift and go to state 185
    SQUAREBRACKETRIGHT reduce using rule 36 (set -> values .)
    CURLYBRACKETRIGHT reduce using rule 36 (set -> values .)


state 134

    (64) arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT . EQUAL values SEMICOLON

    EQUAL           shift and go to state 186


state 135

    (120) metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT . EQUAL values SEMICOLON

    EQUAL           shift and go to state 187


state 136

    (52) foreach -> ID DOT FOREACH LPAREN . instruccionesMas RPAREN SEMICOLON
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . sentenciaIf
    (6) instruccion -> . asignacionesMas
    (7) instruccion -> . estructuraMap
    (8) instruccion -> . array
    (9) instruccion -> . arrayChanges
    (10) instruccion -> . declarset
    (11) instruccion -> . sentenciaIfElse
    (12) instruccion -> . sentenciaElse
    (13) instruccion -> . foreach
    (14) instruccion -> . listBuscar
    (15) instruccion -> . importsDart
    (16) instruccion -> . listMethods
    (17) instruccion -> . sentenciaWhile
    (18) instruccion -> . palabraBreak
    (19) instruccion -> . funcionPrint
    (23) funcion -> . STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (24) funcion -> . DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (25) funcion -> . VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (87) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (70) asignacionesMas -> . asignacion
    (71) asignacionesMas -> . asignacion asignacionesMas
    (76) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (77) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (78) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (79) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (81) estructuraMap -> . metodoMapClear
    (82) estructuraMap -> . metodoMapRemoveKey
    (83) estructuraMap -> . metodoMapAddAll
    (84) estructuraMap -> . metodoMapAdd
    (53) array -> . ID EQUAL arrayInicio SEMICOLON
    (54) array -> . arrayFunc SEMICOLON
    (55) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (56) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (64) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (37) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (38) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (40) declarset -> . setadd
    (41) declarset -> . setclear
    (42) declarset -> . setcontains
    (43) declarset -> . setAddAll
    (44) declarset -> . setlengh
    (45) declarset -> . setremove
    (33) sentenciaIfElse -> . sentenciaIf
    (34) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse
    (32) sentenciaElse -> . ELSE sentenciaIf
    (52) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (63) listBuscar -> . ID DOT LENGTH SEMICOLON
    (121) importsDart -> . IMPORT STR SEMICOLON
    (122) listMethods -> . metodoListFilled
    (88) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (92) palabraBreak -> . BREAK SEMICOLON
    (89) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (67) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (68) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (69) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (117) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (118) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (119) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (120) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (62) arrayFunc -> . ID DOT subArray
    (46) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (47) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (48) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (49) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (50) setlengh -> . ID DOT LENGTH SEMICOLON
    (51) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (123) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 20
    DATATYPES       shift and go to state 21
    VOID            shift and go to state 23
    FOR             shift and go to state 24
    IF              shift and go to state 26
    MAP             shift and go to state 27
    VARTYPE         shift and go to state 28
    ID              shift and go to state 22
    LIST            shift and go to state 34
    SET             shift and go to state 35
    ELSE            shift and go to state 42
    IMPORT          shift and go to state 43
    WHILE           shift and go to state 45
    BREAK           shift and go to state 46
    PRINT           shift and go to state 47

    instruccionesMas               shift and go to state 188
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    sentenciaIf                    shift and go to state 5
    asignacionesMas                shift and go to state 6
    estructuraMap                  shift and go to state 7
    array                          shift and go to state 8
    arrayChanges                   shift and go to state 9
    declarset                      shift and go to state 10
    sentenciaIfElse                shift and go to state 11
    sentenciaElse                  shift and go to state 12
    foreach                        shift and go to state 13
    listBuscar                     shift and go to state 14
    importsDart                    shift and go to state 15
    listMethods                    shift and go to state 16
    sentenciaWhile                 shift and go to state 17
    palabraBreak                   shift and go to state 18
    funcionPrint                   shift and go to state 19
    asignacion                     shift and go to state 25
    metodoMapClear                 shift and go to state 29
    metodoMapRemoveKey             shift and go to state 30
    metodoMapAddAll                shift and go to state 31
    metodoMapAdd                   shift and go to state 32
    arrayFunc                      shift and go to state 33
    setadd                         shift and go to state 36
    setclear                       shift and go to state 37
    setcontains                    shift and go to state 38
    setAddAll                      shift and go to state 39
    setlengh                       shift and go to state 40
    setremove                      shift and go to state 41
    metodoListFilled               shift and go to state 44

state 137

    (63) listBuscar -> ID DOT LENGTH SEMICOLON .
    (50) setlengh -> ID DOT LENGTH SEMICOLON .

  ! reduce/reduce conflict for STATIC resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for DATATYPES resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for VOID resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for FOR resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for IF resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for MAP resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for VARTYPE resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for ID resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for LIST resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for SET resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for ELSE resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for IMPORT resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for WHILE resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for BREAK resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for PRINT resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for $end resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for CURLYBRACKETRIGHT resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for RPAREN resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
  ! reduce/reduce conflict for RETURN resolved using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    STATIC          reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    DATATYPES       reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    VOID            reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    FOR             reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    IF              reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    MAP             reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    VARTYPE         reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    ID              reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    LIST            reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    SET             reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    ELSE            reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    IMPORT          reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    WHILE           reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    BREAK           reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    PRINT           reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    $end            reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    RPAREN          reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)
    RETURN          reduce using rule 50 (setlengh -> ID DOT LENGTH SEMICOLON .)

  ! STATIC          [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! DATATYPES       [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! VOID            [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! FOR             [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! IF              [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! MAP             [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! VARTYPE         [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! ID              [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! LIST            [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! SET             [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! ELSE            [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! IMPORT          [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! WHILE           [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! BREAK           [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! PRINT           [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! $end            [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! CURLYBRACKETRIGHT [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! RPAREN          [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]
  ! RETURN          [ reduce using rule 63 (listBuscar -> ID DOT LENGTH SEMICOLON .) ]


state 138

    (117) metodoMapClear -> ID DOT CLEAR LPAREN . RPAREN SEMICOLON
    (118) metodoMapRemoveKey -> ID DOT CLEAR LPAREN . values RPAREN SEMICOLON
    (119) metodoMapAddAll -> ID DOT CLEAR LPAREN . CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (47) setclear -> ID DOT CLEAR LPAREN . values RPAREN SEMICOLON
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    RPAREN          shift and go to state 189
    CURLYBRACKETLEFT shift and go to state 191
    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 190

state 139

    (66) subArray -> subArray DOT . subArray
    (65) subArray -> . SUBLIST LPAREN values RPAREN SEMICOLON
    (66) subArray -> . subArray DOT subArray

    SUBLIST         shift and go to state 100

    subArray                       shift and go to state 192

state 140

    (46) setadd -> ID DOT ADD LPAREN . values RPAREN SEMICOLON
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 193

state 141

    (48) setcontains -> ID DOT CONTAINS LPAREN . values RPAREN SEMICOLON
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 194

state 142

    (49) setAddAll -> ID DOT ADDALL LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 195


state 143

    (51) setremove -> ID DOT REMOVE LPAREN . values RPAREN SEMICOLON
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 196

state 144

    (65) subArray -> SUBLIST LPAREN . values RPAREN SEMICOLON
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 197

state 145

    (25) funcion -> VOID ID LPAREN parametrosF . RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    RPAREN          shift and go to state 198


state 146

    (87) sentenciaFor -> FOR LPAREN asignacion SEMICOLON . comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (93) comparacion -> . ID comparador values
    (94) comparacion -> . ID comparador ID
    (95) comparacion -> . BOOLEAN
    (96) comparacion -> . ID operadoresLogicos ID
    (97) comparacion -> . BOOLEAN operadoresLogicos ID

    ID              shift and go to state 106
    BOOLEAN         shift and go to state 107

    comparacion                    shift and go to state 199

state 147

    (67) asignacion -> DATATYPES ID EQUAL . values SEMICOLON
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 127

state 148

    (68) asignacion -> VARTYPE ID EQUAL . values SEMICOLON
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 166

state 149

    (29) sentenciaIf -> IF LPAREN comparacion RPAREN . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 200


state 150

    (93) comparacion -> ID comparador . values
    (94) comparacion -> ID comparador . ID
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    ID              shift and go to state 201
    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 202

state 151

    (96) comparacion -> ID operadoresLogicos . ID

    ID              shift and go to state 203


state 152

    (98) comparador -> GREATER .

    ID              reduce using rule 98 (comparador -> GREATER .)
    INT             reduce using rule 98 (comparador -> GREATER .)
    FLOAT           reduce using rule 98 (comparador -> GREATER .)
    BOOLEAN         reduce using rule 98 (comparador -> GREATER .)
    STR             reduce using rule 98 (comparador -> GREATER .)


state 153

    (99) comparador -> LESS .

    ID              reduce using rule 99 (comparador -> LESS .)
    INT             reduce using rule 99 (comparador -> LESS .)
    FLOAT           reduce using rule 99 (comparador -> LESS .)
    BOOLEAN         reduce using rule 99 (comparador -> LESS .)
    STR             reduce using rule 99 (comparador -> LESS .)


state 154

    (100) comparador -> GREATEREQ .

    ID              reduce using rule 100 (comparador -> GREATEREQ .)
    INT             reduce using rule 100 (comparador -> GREATEREQ .)
    FLOAT           reduce using rule 100 (comparador -> GREATEREQ .)
    BOOLEAN         reduce using rule 100 (comparador -> GREATEREQ .)
    STR             reduce using rule 100 (comparador -> GREATEREQ .)


state 155

    (101) comparador -> LESSEQ .

    ID              reduce using rule 101 (comparador -> LESSEQ .)
    INT             reduce using rule 101 (comparador -> LESSEQ .)
    FLOAT           reduce using rule 101 (comparador -> LESSEQ .)
    BOOLEAN         reduce using rule 101 (comparador -> LESSEQ .)
    STR             reduce using rule 101 (comparador -> LESSEQ .)


state 156

    (102) comparador -> EQUALC .

    ID              reduce using rule 102 (comparador -> EQUALC .)
    INT             reduce using rule 102 (comparador -> EQUALC .)
    FLOAT           reduce using rule 102 (comparador -> EQUALC .)
    BOOLEAN         reduce using rule 102 (comparador -> EQUALC .)
    STR             reduce using rule 102 (comparador -> EQUALC .)


state 157

    (103) comparador -> DIFFERENT .

    ID              reduce using rule 103 (comparador -> DIFFERENT .)
    INT             reduce using rule 103 (comparador -> DIFFERENT .)
    FLOAT           reduce using rule 103 (comparador -> DIFFERENT .)
    BOOLEAN         reduce using rule 103 (comparador -> DIFFERENT .)
    STR             reduce using rule 103 (comparador -> DIFFERENT .)


state 158

    (104) operadoresLogicos -> AND .

    ID              reduce using rule 104 (operadoresLogicos -> AND .)


state 159

    (105) operadoresLogicos -> OR .

    ID              reduce using rule 105 (operadoresLogicos -> OR .)


state 160

    (106) operadoresLogicos -> NOT .

    ID              reduce using rule 106 (operadoresLogicos -> NOT .)


state 161

    (97) comparacion -> BOOLEAN operadoresLogicos . ID

    ID              shift and go to state 204


state 162

    (76) estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT . itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (85) itemsMaps -> . values COLON values
    (86) itemsMaps -> . values COLON values COMMA itemsMaps
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    itemsMaps                      shift and go to state 205
    values                         shift and go to state 206

state 163

    (77) estructuraMap -> MAP LESS DATATYPES COMMA . DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    DATATYPES       shift and go to state 207


state 164

    (78) estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT . itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (85) itemsMaps -> . values COLON values
    (86) itemsMaps -> . values COLON values COMMA itemsMaps
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    itemsMaps                      shift and go to state 208
    values                         shift and go to state 206

state 165

    (79) estructuraMap -> VARTYPE ID EQUAL NEW . MAP LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> VARTYPE ID EQUAL NEW . MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON

    MAP             shift and go to state 209


state 166

    (68) asignacion -> VARTYPE ID EQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 210


state 167

    (56) array -> LIST ID EQUAL SQUAREBRACKETLEFT . arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (60) arrayValues -> . values
    (61) arrayValues -> . values COMMA arrayValues
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    arrayValues                    shift and go to state 211
    values                         shift and go to state 179

state 168

    (123) metodoListFilled -> LIST DOT FILLED LPAREN . arrayValues RPAREN SEMICOLON
    (60) arrayValues -> . values
    (61) arrayValues -> . values COMMA arrayValues
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    arrayValues                    shift and go to state 212
    values                         shift and go to state 179

state 169

    (37) declarset -> SET ID EQUAL NEW . SET LPAREN RPAREN SEMICOLON

    SET             shift and go to state 213


state 170

    (38) declarset -> SET ID EQUAL CURLYBRACKETLEFT . set CURLYBRACKETRIGHT SEMICOLON
    (35) set -> . values COMMA set
    (36) set -> . values
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    set                            shift and go to state 214
    values                         shift and go to state 133

state 171

    (30) sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    STATIC          reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ELSE            reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 172

    (88) sentenciaWhile -> WHILE LPAREN comparacion RPAREN . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 215


state 173

    (89) funcionPrint -> PRINT LPAREN printValues RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 216


state 174

    (23) funcion -> STATIC DATATYPES ID LPAREN parametrosF . RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    RPAREN          shift and go to state 217


state 175

    (22) parametro -> DATATYPES ID .

    COMMA           reduce using rule 22 (parametro -> DATATYPES ID .)
    RPAREN          reduce using rule 22 (parametro -> DATATYPES ID .)


state 176

    (24) funcion -> DATATYPES ID LPAREN parametrosF RPAREN . CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 218


state 177

    (20) parametrosF -> parametro COMMA . parametrosF
    (20) parametrosF -> . parametro COMMA parametrosF
    (21) parametrosF -> . parametro
    (22) parametro -> . DATATYPES ID

    DATATYPES       shift and go to state 122

    parametro                      shift and go to state 124
    parametrosF                    shift and go to state 219

state 178

    (55) array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues . SQUAREBRACKETRIGHT SEMICOLON

    SQUAREBRACKETRIGHT shift and go to state 220


state 179

    (60) arrayValues -> values .
    (61) arrayValues -> values . COMMA arrayValues

    SQUAREBRACKETRIGHT reduce using rule 60 (arrayValues -> values .)
    RPAREN          reduce using rule 60 (arrayValues -> values .)
    COMMA           shift and go to state 221


state 180

    (39) declarset -> DATATYPES ID EQUAL LESS DATATYPES . GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    GREATER         shift and go to state 222


state 181

    (67) asignacion -> DATATYPES ID EQUAL values SEMICOLON .

    DATATYPES       reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    STATIC          reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    VOID            reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    FOR             reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    IF              reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    MAP             reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    ID              reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    LIST            reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    SET             reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    ELSE            reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    IMPORT          reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    WHILE           reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    BREAK           reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    PRINT           reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    $end            reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    RPAREN          reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    RETURN          reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    SEMICOLON       reduce using rule 67 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)


state 182

    (69) asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .

    DATATYPES       reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    VARTYPE         reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    STATIC          reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    VOID            reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    FOR             reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    IF              reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    MAP             reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    ID              reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    LIST            reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    SET             reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    ELSE            reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    IMPORT          reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    WHILE           reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    BREAK           reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    PRINT           reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    $end            reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    RPAREN          reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    RETURN          reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    SEMICOLON       reduce using rule 69 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)


state 183

    (59) arrayInicio -> ID DOT subArray .
    (66) subArray -> subArray . DOT subArray

    SEMICOLON       reduce using rule 59 (arrayInicio -> ID DOT subArray .)
    DOT             shift and go to state 139


state 184

    (58) arrayInicio -> SQUAREBRACKETLEFT set SQUAREBRACKETRIGHT .

    SEMICOLON       reduce using rule 58 (arrayInicio -> SQUAREBRACKETLEFT set SQUAREBRACKETRIGHT .)


state 185

    (35) set -> values COMMA . set
    (35) set -> . values COMMA set
    (36) set -> . values
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 133
    set                            shift and go to state 223

state 186

    (64) arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL . values SEMICOLON
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 224

state 187

    (120) metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL . values SEMICOLON
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 225

state 188

    (52) foreach -> ID DOT FOREACH LPAREN instruccionesMas . RPAREN SEMICOLON

    RPAREN          shift and go to state 226


state 189

    (117) metodoMapClear -> ID DOT CLEAR LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 227


state 190

    (118) metodoMapRemoveKey -> ID DOT CLEAR LPAREN values . RPAREN SEMICOLON
    (47) setclear -> ID DOT CLEAR LPAREN values . RPAREN SEMICOLON

    RPAREN          shift and go to state 228


state 191

    (119) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT . itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (85) itemsMaps -> . values COLON values
    (86) itemsMaps -> . values COLON values COMMA itemsMaps
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    itemsMaps                      shift and go to state 229
    values                         shift and go to state 206

state 192

    (66) subArray -> subArray DOT subArray .
    (66) subArray -> subArray . DOT subArray

  ! shift/reduce conflict for DOT resolved as shift
    SEMICOLON       reduce using rule 66 (subArray -> subArray DOT subArray .)
    DOT             shift and go to state 139

  ! DOT             [ reduce using rule 66 (subArray -> subArray DOT subArray .) ]


state 193

    (46) setadd -> ID DOT ADD LPAREN values . RPAREN SEMICOLON

    RPAREN          shift and go to state 230


state 194

    (48) setcontains -> ID DOT CONTAINS LPAREN values . RPAREN SEMICOLON

    RPAREN          shift and go to state 231


state 195

    (49) setAddAll -> ID DOT ADDALL LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 232


state 196

    (51) setremove -> ID DOT REMOVE LPAREN values . RPAREN SEMICOLON

    RPAREN          shift and go to state 233


state 197

    (65) subArray -> SUBLIST LPAREN values . RPAREN SEMICOLON

    RPAREN          shift and go to state 234


state 198

    (25) funcion -> VOID ID LPAREN parametrosF RPAREN . CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 235


state 199

    (87) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion . SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    SEMICOLON       shift and go to state 236


state 200

    (29) sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . sentenciaIf
    (6) instruccion -> . asignacionesMas
    (7) instruccion -> . estructuraMap
    (8) instruccion -> . array
    (9) instruccion -> . arrayChanges
    (10) instruccion -> . declarset
    (11) instruccion -> . sentenciaIfElse
    (12) instruccion -> . sentenciaElse
    (13) instruccion -> . foreach
    (14) instruccion -> . listBuscar
    (15) instruccion -> . importsDart
    (16) instruccion -> . listMethods
    (17) instruccion -> . sentenciaWhile
    (18) instruccion -> . palabraBreak
    (19) instruccion -> . funcionPrint
    (23) funcion -> . STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (24) funcion -> . DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (25) funcion -> . VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (87) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (70) asignacionesMas -> . asignacion
    (71) asignacionesMas -> . asignacion asignacionesMas
    (76) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (77) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (78) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (79) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (81) estructuraMap -> . metodoMapClear
    (82) estructuraMap -> . metodoMapRemoveKey
    (83) estructuraMap -> . metodoMapAddAll
    (84) estructuraMap -> . metodoMapAdd
    (53) array -> . ID EQUAL arrayInicio SEMICOLON
    (54) array -> . arrayFunc SEMICOLON
    (55) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (56) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (64) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (37) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (38) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (40) declarset -> . setadd
    (41) declarset -> . setclear
    (42) declarset -> . setcontains
    (43) declarset -> . setAddAll
    (44) declarset -> . setlengh
    (45) declarset -> . setremove
    (33) sentenciaIfElse -> . sentenciaIf
    (34) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse
    (32) sentenciaElse -> . ELSE sentenciaIf
    (52) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (63) listBuscar -> . ID DOT LENGTH SEMICOLON
    (121) importsDart -> . IMPORT STR SEMICOLON
    (122) listMethods -> . metodoListFilled
    (88) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (92) palabraBreak -> . BREAK SEMICOLON
    (89) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (67) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (68) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (69) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (117) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (118) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (119) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (120) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (62) arrayFunc -> . ID DOT subArray
    (46) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (47) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (48) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (49) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (50) setlengh -> . ID DOT LENGTH SEMICOLON
    (51) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (123) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 20
    DATATYPES       shift and go to state 21
    VOID            shift and go to state 23
    FOR             shift and go to state 24
    IF              shift and go to state 26
    MAP             shift and go to state 27
    VARTYPE         shift and go to state 28
    ID              shift and go to state 22
    LIST            shift and go to state 34
    SET             shift and go to state 35
    ELSE            shift and go to state 42
    IMPORT          shift and go to state 43
    WHILE           shift and go to state 45
    BREAK           shift and go to state 46
    PRINT           shift and go to state 47

    instruccionesMas               shift and go to state 237
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    sentenciaIf                    shift and go to state 5
    asignacionesMas                shift and go to state 6
    estructuraMap                  shift and go to state 7
    array                          shift and go to state 8
    arrayChanges                   shift and go to state 9
    declarset                      shift and go to state 10
    sentenciaIfElse                shift and go to state 11
    sentenciaElse                  shift and go to state 12
    foreach                        shift and go to state 13
    listBuscar                     shift and go to state 14
    importsDart                    shift and go to state 15
    listMethods                    shift and go to state 16
    sentenciaWhile                 shift and go to state 17
    palabraBreak                   shift and go to state 18
    funcionPrint                   shift and go to state 19
    asignacion                     shift and go to state 25
    metodoMapClear                 shift and go to state 29
    metodoMapRemoveKey             shift and go to state 30
    metodoMapAddAll                shift and go to state 31
    metodoMapAdd                   shift and go to state 32
    arrayFunc                      shift and go to state 33
    setadd                         shift and go to state 36
    setclear                       shift and go to state 37
    setcontains                    shift and go to state 38
    setAddAll                      shift and go to state 39
    setlengh                       shift and go to state 40
    setremove                      shift and go to state 41
    metodoListFilled               shift and go to state 44

state 201

    (94) comparacion -> ID comparador ID .

    RPAREN          reduce using rule 94 (comparacion -> ID comparador ID .)
    SEMICOLON       reduce using rule 94 (comparacion -> ID comparador ID .)


state 202

    (93) comparacion -> ID comparador values .

    RPAREN          reduce using rule 93 (comparacion -> ID comparador values .)
    SEMICOLON       reduce using rule 93 (comparacion -> ID comparador values .)


state 203

    (96) comparacion -> ID operadoresLogicos ID .

    RPAREN          reduce using rule 96 (comparacion -> ID operadoresLogicos ID .)
    SEMICOLON       reduce using rule 96 (comparacion -> ID operadoresLogicos ID .)


state 204

    (97) comparacion -> BOOLEAN operadoresLogicos ID .

    RPAREN          reduce using rule 97 (comparacion -> BOOLEAN operadoresLogicos ID .)
    SEMICOLON       reduce using rule 97 (comparacion -> BOOLEAN operadoresLogicos ID .)


state 205

    (76) estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 238


state 206

    (85) itemsMaps -> values . COLON values
    (86) itemsMaps -> values . COLON values COMMA itemsMaps

    COLON           shift and go to state 239


state 207

    (77) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES . GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    GREATER         shift and go to state 240


state 208

    (78) estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 241


state 209

    (79) estructuraMap -> VARTYPE ID EQUAL NEW MAP . LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> VARTYPE ID EQUAL NEW MAP . LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 242
    LESS            shift and go to state 243


state 210

    (68) asignacion -> VARTYPE ID EQUAL values SEMICOLON .

    DATATYPES       reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    STATIC          reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    VOID            reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    FOR             reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    IF              reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    MAP             reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    ID              reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    LIST            reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    SET             reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    ELSE            reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    IMPORT          reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    WHILE           reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    BREAK           reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    PRINT           reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    $end            reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    RPAREN          reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    RETURN          reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    SEMICOLON       reduce using rule 68 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)


state 211

    (56) array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues . SQUAREBRACKETRIGHT SEMICOLON

    SQUAREBRACKETRIGHT shift and go to state 244


state 212

    (123) metodoListFilled -> LIST DOT FILLED LPAREN arrayValues . RPAREN SEMICOLON

    RPAREN          shift and go to state 245


state 213

    (37) declarset -> SET ID EQUAL NEW SET . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 246


state 214

    (38) declarset -> SET ID EQUAL CURLYBRACKETLEFT set . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 247


state 215

    (88) sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . sentenciaIf
    (6) instruccion -> . asignacionesMas
    (7) instruccion -> . estructuraMap
    (8) instruccion -> . array
    (9) instruccion -> . arrayChanges
    (10) instruccion -> . declarset
    (11) instruccion -> . sentenciaIfElse
    (12) instruccion -> . sentenciaElse
    (13) instruccion -> . foreach
    (14) instruccion -> . listBuscar
    (15) instruccion -> . importsDart
    (16) instruccion -> . listMethods
    (17) instruccion -> . sentenciaWhile
    (18) instruccion -> . palabraBreak
    (19) instruccion -> . funcionPrint
    (23) funcion -> . STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (24) funcion -> . DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (25) funcion -> . VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (87) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (70) asignacionesMas -> . asignacion
    (71) asignacionesMas -> . asignacion asignacionesMas
    (76) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (77) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (78) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (79) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (81) estructuraMap -> . metodoMapClear
    (82) estructuraMap -> . metodoMapRemoveKey
    (83) estructuraMap -> . metodoMapAddAll
    (84) estructuraMap -> . metodoMapAdd
    (53) array -> . ID EQUAL arrayInicio SEMICOLON
    (54) array -> . arrayFunc SEMICOLON
    (55) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (56) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (64) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (37) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (38) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (40) declarset -> . setadd
    (41) declarset -> . setclear
    (42) declarset -> . setcontains
    (43) declarset -> . setAddAll
    (44) declarset -> . setlengh
    (45) declarset -> . setremove
    (33) sentenciaIfElse -> . sentenciaIf
    (34) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse
    (32) sentenciaElse -> . ELSE sentenciaIf
    (52) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (63) listBuscar -> . ID DOT LENGTH SEMICOLON
    (121) importsDart -> . IMPORT STR SEMICOLON
    (122) listMethods -> . metodoListFilled
    (88) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (92) palabraBreak -> . BREAK SEMICOLON
    (89) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (67) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (68) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (69) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (117) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (118) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (119) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (120) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (62) arrayFunc -> . ID DOT subArray
    (46) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (47) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (48) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (49) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (50) setlengh -> . ID DOT LENGTH SEMICOLON
    (51) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (123) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 20
    DATATYPES       shift and go to state 21
    VOID            shift and go to state 23
    FOR             shift and go to state 24
    IF              shift and go to state 26
    MAP             shift and go to state 27
    VARTYPE         shift and go to state 28
    ID              shift and go to state 22
    LIST            shift and go to state 34
    SET             shift and go to state 35
    ELSE            shift and go to state 42
    IMPORT          shift and go to state 43
    WHILE           shift and go to state 45
    BREAK           shift and go to state 46
    PRINT           shift and go to state 47

    instruccionesMas               shift and go to state 248
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    sentenciaIf                    shift and go to state 5
    asignacionesMas                shift and go to state 6
    estructuraMap                  shift and go to state 7
    array                          shift and go to state 8
    arrayChanges                   shift and go to state 9
    declarset                      shift and go to state 10
    sentenciaIfElse                shift and go to state 11
    sentenciaElse                  shift and go to state 12
    foreach                        shift and go to state 13
    listBuscar                     shift and go to state 14
    importsDart                    shift and go to state 15
    listMethods                    shift and go to state 16
    sentenciaWhile                 shift and go to state 17
    palabraBreak                   shift and go to state 18
    funcionPrint                   shift and go to state 19
    asignacion                     shift and go to state 25
    metodoMapClear                 shift and go to state 29
    metodoMapRemoveKey             shift and go to state 30
    metodoMapAddAll                shift and go to state 31
    metodoMapAdd                   shift and go to state 32
    arrayFunc                      shift and go to state 33
    setadd                         shift and go to state 36
    setclear                       shift and go to state 37
    setcontains                    shift and go to state 38
    setAddAll                      shift and go to state 39
    setlengh                       shift and go to state 40
    setremove                      shift and go to state 41
    metodoListFilled               shift and go to state 44

state 216

    (89) funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .

    STATIC          reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    VOID            reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    FOR             reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    IF              reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    MAP             reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    ID              reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    LIST            reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    SET             reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    ELSE            reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    IMPORT          reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    WHILE           reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    BREAK           reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    PRINT           reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    $end            reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    RPAREN          reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    RETURN          reduce using rule 89 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)


state 217

    (23) funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN . CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 249


state 218

    (24) funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT . instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . sentenciaIf
    (6) instruccion -> . asignacionesMas
    (7) instruccion -> . estructuraMap
    (8) instruccion -> . array
    (9) instruccion -> . arrayChanges
    (10) instruccion -> . declarset
    (11) instruccion -> . sentenciaIfElse
    (12) instruccion -> . sentenciaElse
    (13) instruccion -> . foreach
    (14) instruccion -> . listBuscar
    (15) instruccion -> . importsDart
    (16) instruccion -> . listMethods
    (17) instruccion -> . sentenciaWhile
    (18) instruccion -> . palabraBreak
    (19) instruccion -> . funcionPrint
    (23) funcion -> . STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (24) funcion -> . DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (25) funcion -> . VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (87) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (70) asignacionesMas -> . asignacion
    (71) asignacionesMas -> . asignacion asignacionesMas
    (76) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (77) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (78) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (79) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (81) estructuraMap -> . metodoMapClear
    (82) estructuraMap -> . metodoMapRemoveKey
    (83) estructuraMap -> . metodoMapAddAll
    (84) estructuraMap -> . metodoMapAdd
    (53) array -> . ID EQUAL arrayInicio SEMICOLON
    (54) array -> . arrayFunc SEMICOLON
    (55) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (56) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (64) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (37) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (38) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (40) declarset -> . setadd
    (41) declarset -> . setclear
    (42) declarset -> . setcontains
    (43) declarset -> . setAddAll
    (44) declarset -> . setlengh
    (45) declarset -> . setremove
    (33) sentenciaIfElse -> . sentenciaIf
    (34) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse
    (32) sentenciaElse -> . ELSE sentenciaIf
    (52) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (63) listBuscar -> . ID DOT LENGTH SEMICOLON
    (121) importsDart -> . IMPORT STR SEMICOLON
    (122) listMethods -> . metodoListFilled
    (88) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (92) palabraBreak -> . BREAK SEMICOLON
    (89) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (67) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (68) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (69) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (117) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (118) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (119) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (120) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (62) arrayFunc -> . ID DOT subArray
    (46) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (47) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (48) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (49) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (50) setlengh -> . ID DOT LENGTH SEMICOLON
    (51) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (123) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 20
    DATATYPES       shift and go to state 21
    VOID            shift and go to state 23
    FOR             shift and go to state 24
    IF              shift and go to state 26
    MAP             shift and go to state 27
    VARTYPE         shift and go to state 28
    ID              shift and go to state 22
    LIST            shift and go to state 34
    SET             shift and go to state 35
    ELSE            shift and go to state 42
    IMPORT          shift and go to state 43
    WHILE           shift and go to state 45
    BREAK           shift and go to state 46
    PRINT           shift and go to state 47

    instruccionesMas               shift and go to state 250
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    sentenciaIf                    shift and go to state 5
    asignacionesMas                shift and go to state 6
    estructuraMap                  shift and go to state 7
    array                          shift and go to state 8
    arrayChanges                   shift and go to state 9
    declarset                      shift and go to state 10
    sentenciaIfElse                shift and go to state 11
    sentenciaElse                  shift and go to state 12
    foreach                        shift and go to state 13
    listBuscar                     shift and go to state 14
    importsDart                    shift and go to state 15
    listMethods                    shift and go to state 16
    sentenciaWhile                 shift and go to state 17
    palabraBreak                   shift and go to state 18
    funcionPrint                   shift and go to state 19
    asignacion                     shift and go to state 25
    metodoMapClear                 shift and go to state 29
    metodoMapRemoveKey             shift and go to state 30
    metodoMapAddAll                shift and go to state 31
    metodoMapAdd                   shift and go to state 32
    arrayFunc                      shift and go to state 33
    setadd                         shift and go to state 36
    setclear                       shift and go to state 37
    setcontains                    shift and go to state 38
    setAddAll                      shift and go to state 39
    setlengh                       shift and go to state 40
    setremove                      shift and go to state 41
    metodoListFilled               shift and go to state 44

state 219

    (20) parametrosF -> parametro COMMA parametrosF .

    RPAREN          reduce using rule 20 (parametrosF -> parametro COMMA parametrosF .)


state 220

    (55) array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 251


state 221

    (61) arrayValues -> values COMMA . arrayValues
    (60) arrayValues -> . values
    (61) arrayValues -> . values COMMA arrayValues
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 179
    arrayValues                    shift and go to state 252

state 222

    (39) declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER . CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETLEFT shift and go to state 253


state 223

    (35) set -> values COMMA set .

    SQUAREBRACKETRIGHT reduce using rule 35 (set -> values COMMA set .)
    CURLYBRACKETRIGHT reduce using rule 35 (set -> values COMMA set .)


state 224

    (64) arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 254


state 225

    (120) metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 255


state 226

    (52) foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 256


state 227

    (117) metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .

    STATIC          reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    IMPORT          reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 117 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)


state 228

    (118) metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN . SEMICOLON
    (47) setclear -> ID DOT CLEAR LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 257


state 229

    (119) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps . CURLYBRACKETRIGHT RPAREN SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 258


state 230

    (46) setadd -> ID DOT ADD LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 259


state 231

    (48) setcontains -> ID DOT CONTAINS LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 260


state 232

    (49) setAddAll -> ID DOT ADDALL LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 261


state 233

    (51) setremove -> ID DOT REMOVE LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 262


state 234

    (65) subArray -> SUBLIST LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 263


state 235

    (25) funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT . instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . sentenciaIf
    (6) instruccion -> . asignacionesMas
    (7) instruccion -> . estructuraMap
    (8) instruccion -> . array
    (9) instruccion -> . arrayChanges
    (10) instruccion -> . declarset
    (11) instruccion -> . sentenciaIfElse
    (12) instruccion -> . sentenciaElse
    (13) instruccion -> . foreach
    (14) instruccion -> . listBuscar
    (15) instruccion -> . importsDart
    (16) instruccion -> . listMethods
    (17) instruccion -> . sentenciaWhile
    (18) instruccion -> . palabraBreak
    (19) instruccion -> . funcionPrint
    (23) funcion -> . STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (24) funcion -> . DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (25) funcion -> . VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (87) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (70) asignacionesMas -> . asignacion
    (71) asignacionesMas -> . asignacion asignacionesMas
    (76) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (77) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (78) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (79) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (81) estructuraMap -> . metodoMapClear
    (82) estructuraMap -> . metodoMapRemoveKey
    (83) estructuraMap -> . metodoMapAddAll
    (84) estructuraMap -> . metodoMapAdd
    (53) array -> . ID EQUAL arrayInicio SEMICOLON
    (54) array -> . arrayFunc SEMICOLON
    (55) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (56) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (64) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (37) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (38) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (40) declarset -> . setadd
    (41) declarset -> . setclear
    (42) declarset -> . setcontains
    (43) declarset -> . setAddAll
    (44) declarset -> . setlengh
    (45) declarset -> . setremove
    (33) sentenciaIfElse -> . sentenciaIf
    (34) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse
    (32) sentenciaElse -> . ELSE sentenciaIf
    (52) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (63) listBuscar -> . ID DOT LENGTH SEMICOLON
    (121) importsDart -> . IMPORT STR SEMICOLON
    (122) listMethods -> . metodoListFilled
    (88) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (92) palabraBreak -> . BREAK SEMICOLON
    (89) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (67) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (68) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (69) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (117) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (118) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (119) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (120) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (62) arrayFunc -> . ID DOT subArray
    (46) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (47) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (48) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (49) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (50) setlengh -> . ID DOT LENGTH SEMICOLON
    (51) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (123) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 20
    DATATYPES       shift and go to state 21
    VOID            shift and go to state 23
    FOR             shift and go to state 24
    IF              shift and go to state 26
    MAP             shift and go to state 27
    VARTYPE         shift and go to state 28
    ID              shift and go to state 22
    LIST            shift and go to state 34
    SET             shift and go to state 35
    ELSE            shift and go to state 42
    IMPORT          shift and go to state 43
    WHILE           shift and go to state 45
    BREAK           shift and go to state 46
    PRINT           shift and go to state 47

    instruccionesMas               shift and go to state 264
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    sentenciaIf                    shift and go to state 5
    asignacionesMas                shift and go to state 6
    estructuraMap                  shift and go to state 7
    array                          shift and go to state 8
    arrayChanges                   shift and go to state 9
    declarset                      shift and go to state 10
    sentenciaIfElse                shift and go to state 11
    sentenciaElse                  shift and go to state 12
    foreach                        shift and go to state 13
    listBuscar                     shift and go to state 14
    importsDart                    shift and go to state 15
    listMethods                    shift and go to state 16
    sentenciaWhile                 shift and go to state 17
    palabraBreak                   shift and go to state 18
    funcionPrint                   shift and go to state 19
    asignacion                     shift and go to state 25
    metodoMapClear                 shift and go to state 29
    metodoMapRemoveKey             shift and go to state 30
    metodoMapAddAll                shift and go to state 31
    metodoMapAdd                   shift and go to state 32
    arrayFunc                      shift and go to state 33
    setadd                         shift and go to state 36
    setclear                       shift and go to state 37
    setcontains                    shift and go to state 38
    setAddAll                      shift and go to state 39
    setlengh                       shift and go to state 40
    setremove                      shift and go to state 41
    metodoListFilled               shift and go to state 44

state 236

    (87) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON . operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (107) operadoresArimeticoId -> . ID INCREMENT
    (108) operadoresArimeticoId -> . ID DECREMENT
    (109) operadoresArimeticoId -> . ID PLUSEQUAL values
    (110) operadoresArimeticoId -> . ID MINUSEQUAL values
    (111) operadoresArimeticoId -> . ID MULTIPLUS values
    (112) operadoresArimeticoId -> . ID DIVIDEEQUAL values

    ID              shift and go to state 266

    operadoresArimeticoId          shift and go to state 265

state 237

    (29) sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 267


state 238

    (76) estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 268


state 239

    (85) itemsMaps -> values COLON . values
    (86) itemsMaps -> values COLON . values COMMA itemsMaps
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 269

state 240

    (77) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER . ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    ID              shift and go to state 270


state 241

    (78) estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 271


state 242

    (79) estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 272


state 243

    (80) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS . DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON

    DATATYPES       shift and go to state 273


state 244

    (56) array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 274


state 245

    (123) metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 275


state 246

    (37) declarset -> SET ID EQUAL NEW SET LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 276


state 247

    (38) declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 277


state 248

    (88) sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 278


state 249

    (23) funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT . instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . sentenciaIf
    (6) instruccion -> . asignacionesMas
    (7) instruccion -> . estructuraMap
    (8) instruccion -> . array
    (9) instruccion -> . arrayChanges
    (10) instruccion -> . declarset
    (11) instruccion -> . sentenciaIfElse
    (12) instruccion -> . sentenciaElse
    (13) instruccion -> . foreach
    (14) instruccion -> . listBuscar
    (15) instruccion -> . importsDart
    (16) instruccion -> . listMethods
    (17) instruccion -> . sentenciaWhile
    (18) instruccion -> . palabraBreak
    (19) instruccion -> . funcionPrint
    (23) funcion -> . STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (24) funcion -> . DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (25) funcion -> . VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (87) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (70) asignacionesMas -> . asignacion
    (71) asignacionesMas -> . asignacion asignacionesMas
    (76) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (77) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (78) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (79) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (81) estructuraMap -> . metodoMapClear
    (82) estructuraMap -> . metodoMapRemoveKey
    (83) estructuraMap -> . metodoMapAddAll
    (84) estructuraMap -> . metodoMapAdd
    (53) array -> . ID EQUAL arrayInicio SEMICOLON
    (54) array -> . arrayFunc SEMICOLON
    (55) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (56) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (64) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (37) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (38) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (40) declarset -> . setadd
    (41) declarset -> . setclear
    (42) declarset -> . setcontains
    (43) declarset -> . setAddAll
    (44) declarset -> . setlengh
    (45) declarset -> . setremove
    (33) sentenciaIfElse -> . sentenciaIf
    (34) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse
    (32) sentenciaElse -> . ELSE sentenciaIf
    (52) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (63) listBuscar -> . ID DOT LENGTH SEMICOLON
    (121) importsDart -> . IMPORT STR SEMICOLON
    (122) listMethods -> . metodoListFilled
    (88) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (92) palabraBreak -> . BREAK SEMICOLON
    (89) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (67) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (68) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (69) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (117) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (118) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (119) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (120) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (62) arrayFunc -> . ID DOT subArray
    (46) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (47) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (48) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (49) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (50) setlengh -> . ID DOT LENGTH SEMICOLON
    (51) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (123) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 20
    DATATYPES       shift and go to state 21
    VOID            shift and go to state 23
    FOR             shift and go to state 24
    IF              shift and go to state 26
    MAP             shift and go to state 27
    VARTYPE         shift and go to state 28
    ID              shift and go to state 22
    LIST            shift and go to state 34
    SET             shift and go to state 35
    ELSE            shift and go to state 42
    IMPORT          shift and go to state 43
    WHILE           shift and go to state 45
    BREAK           shift and go to state 46
    PRINT           shift and go to state 47

    instruccionesMas               shift and go to state 279
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    sentenciaIf                    shift and go to state 5
    asignacionesMas                shift and go to state 6
    estructuraMap                  shift and go to state 7
    array                          shift and go to state 8
    arrayChanges                   shift and go to state 9
    declarset                      shift and go to state 10
    sentenciaIfElse                shift and go to state 11
    sentenciaElse                  shift and go to state 12
    foreach                        shift and go to state 13
    listBuscar                     shift and go to state 14
    importsDart                    shift and go to state 15
    listMethods                    shift and go to state 16
    sentenciaWhile                 shift and go to state 17
    palabraBreak                   shift and go to state 18
    funcionPrint                   shift and go to state 19
    asignacion                     shift and go to state 25
    metodoMapClear                 shift and go to state 29
    metodoMapRemoveKey             shift and go to state 30
    metodoMapAddAll                shift and go to state 31
    metodoMapAdd                   shift and go to state 32
    arrayFunc                      shift and go to state 33
    setadd                         shift and go to state 36
    setclear                       shift and go to state 37
    setcontains                    shift and go to state 38
    setAddAll                      shift and go to state 39
    setlengh                       shift and go to state 40
    setremove                      shift and go to state 41
    metodoListFilled               shift and go to state 44

state 250

    (24) funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas . sentenciaReturn CURLYBRACKETRIGHT
    (26) sentenciaReturn -> . RETURN LPAREN retornarValues RPAREN SEMICOLON

    RETURN          shift and go to state 281

    sentenciaReturn                shift and go to state 280

state 251

    (55) array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    ELSE            reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 55 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)


state 252

    (61) arrayValues -> values COMMA arrayValues .

    SQUAREBRACKETRIGHT reduce using rule 61 (arrayValues -> values COMMA arrayValues .)
    RPAREN          reduce using rule 61 (arrayValues -> values COMMA arrayValues .)


state 253

    (39) declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT . set CURLYBRACKETRIGHT SEMICOLON
    (35) set -> . values COMMA set
    (36) set -> . values
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    set                            shift and go to state 282
    values                         shift and go to state 133

state 254

    (64) arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .

    STATIC          reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    DATATYPES       reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    VOID            reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    FOR             reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    IF              reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    MAP             reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    ID              reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    LIST            reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    SET             reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    ELSE            reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    IMPORT          reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    WHILE           reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    BREAK           reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    PRINT           reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    $end            reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    RPAREN          reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    RETURN          reduce using rule 64 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)


state 255

    (120) metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .

    STATIC          reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    DATATYPES       reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    VOID            reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    FOR             reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    IF              reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    MAP             reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    ID              reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    LIST            reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    SET             reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    ELSE            reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    IMPORT          reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    WHILE           reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    BREAK           reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    PRINT           reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    $end            reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    RPAREN          reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    RETURN          reduce using rule 120 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)


state 256

    (52) foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .

    STATIC          reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    VOID            reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    FOR             reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    IF              reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    MAP             reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    ID              reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    LIST            reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    SET             reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    ELSE            reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    IMPORT          reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    WHILE           reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    BREAK           reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    PRINT           reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    $end            reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    RPAREN          reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    RETURN          reduce using rule 52 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)


state 257

    (118) metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .
    (47) setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .

  ! reduce/reduce conflict for STATIC resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for DATATYPES resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for VOID resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for FOR resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for IF resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for MAP resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for VARTYPE resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for ID resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for LIST resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for SET resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for ELSE resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for IMPORT resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for WHILE resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for BREAK resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for PRINT resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for $end resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for CURLYBRACKETRIGHT resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for RPAREN resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
  ! reduce/reduce conflict for RETURN resolved using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    STATIC          reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    VOID            reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    FOR             reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    IF              reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    MAP             reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    ID              reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    LIST            reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    SET             reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    ELSE            reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    IMPORT          reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    WHILE           reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    BREAK           reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    PRINT           reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    $end            reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    RPAREN          reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    RETURN          reduce using rule 47 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)

  ! STATIC          [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! DATATYPES       [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! VOID            [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! FOR             [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! IF              [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! MAP             [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! VARTYPE         [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! ID              [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! LIST            [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! SET             [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! ELSE            [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! IMPORT          [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! WHILE           [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! BREAK           [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! PRINT           [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! $end            [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! CURLYBRACKETRIGHT [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! RPAREN          [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]
  ! RETURN          [ reduce using rule 118 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .) ]


state 258

    (119) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT . RPAREN SEMICOLON

    RPAREN          shift and go to state 283


state 259

    (46) setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .

    STATIC          reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    VOID            reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    FOR             reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    IF              reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    MAP             reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    ID              reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    LIST            reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    SET             reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    ELSE            reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    IMPORT          reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    WHILE           reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    BREAK           reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    PRINT           reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    $end            reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    RPAREN          reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    RETURN          reduce using rule 46 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)


state 260

    (48) setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .

    STATIC          reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    VOID            reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    FOR             reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    IF              reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    MAP             reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    ID              reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    LIST            reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    SET             reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    ELSE            reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    IMPORT          reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    WHILE           reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    BREAK           reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    PRINT           reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    $end            reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    RPAREN          reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    RETURN          reduce using rule 48 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)


state 261

    (49) setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .

    STATIC          reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    VOID            reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    FOR             reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    MAP             reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    ID              reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    LIST            reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    SET             reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    ELSE            reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    IMPORT          reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    BREAK           reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    $end            reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    RPAREN          reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 49 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)


state 262

    (51) setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .

    STATIC          reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    VOID            reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    FOR             reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    IF              reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    MAP             reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    ID              reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    LIST            reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    SET             reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    ELSE            reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    IMPORT          reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    WHILE           reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    BREAK           reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    PRINT           reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    $end            reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    RPAREN          reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    RETURN          reduce using rule 51 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)


state 263

    (65) subArray -> SUBLIST LPAREN values RPAREN SEMICOLON .

    DOT             reduce using rule 65 (subArray -> SUBLIST LPAREN values RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 65 (subArray -> SUBLIST LPAREN values RPAREN SEMICOLON .)


state 264

    (25) funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas . sentenciaReturn CURLYBRACKETRIGHT
    (26) sentenciaReturn -> . RETURN LPAREN retornarValues RPAREN SEMICOLON

    RETURN          shift and go to state 281

    sentenciaReturn                shift and go to state 284

state 265

    (87) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId . RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    RPAREN          shift and go to state 285


state 266

    (107) operadoresArimeticoId -> ID . INCREMENT
    (108) operadoresArimeticoId -> ID . DECREMENT
    (109) operadoresArimeticoId -> ID . PLUSEQUAL values
    (110) operadoresArimeticoId -> ID . MINUSEQUAL values
    (111) operadoresArimeticoId -> ID . MULTIPLUS values
    (112) operadoresArimeticoId -> ID . DIVIDEEQUAL values

    INCREMENT       shift and go to state 286
    DECREMENT       shift and go to state 287
    PLUSEQUAL       shift and go to state 288
    MINUSEQUAL      shift and go to state 289
    MULTIPLUS       shift and go to state 290
    DIVIDEEQUAL     shift and go to state 291


state 267

    (29) sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    ELSE            reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    STATIC          reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 268

    (76) estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    ELSE            reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 76 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)


state 269

    (85) itemsMaps -> values COLON values .
    (86) itemsMaps -> values COLON values . COMMA itemsMaps

    CURLYBRACKETRIGHT reduce using rule 85 (itemsMaps -> values COLON values .)
    COMMA           shift and go to state 292


state 270

    (77) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID . EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    EQUAL           shift and go to state 293


state 271

    (78) estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    ELSE            reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 78 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)


state 272

    (79) estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 294


state 273

    (80) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES . COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON

    COMMA           shift and go to state 295


state 274

    (56) array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    ELSE            reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 56 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)


state 275

    (123) metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .

    STATIC          reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    VOID            reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    FOR             reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    IF              reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    MAP             reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    ID              reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    LIST            reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    SET             reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    ELSE            reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    IMPORT          reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    WHILE           reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    BREAK           reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    PRINT           reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    $end            reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    RPAREN          reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    RETURN          reduce using rule 123 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)


state 276

    (37) declarset -> SET ID EQUAL NEW SET LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 296


state 277

    (38) declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    ELSE            reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 38 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)


state 278

    (88) sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    STATIC          reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ELSE            reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 88 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 279

    (23) funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas . sentenciaReturn CURLYBRACKETRIGHT
    (26) sentenciaReturn -> . RETURN LPAREN retornarValues RPAREN SEMICOLON

    RETURN          shift and go to state 281

    sentenciaReturn                shift and go to state 297

state 280

    (24) funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 298


state 281

    (26) sentenciaReturn -> RETURN . LPAREN retornarValues RPAREN SEMICOLON

    LPAREN          shift and go to state 299


state 282

    (39) declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 300


state 283

    (119) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 301


state 284

    (25) funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 302


state 285

    (87) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 303


state 286

    (107) operadoresArimeticoId -> ID INCREMENT .

    RPAREN          reduce using rule 107 (operadoresArimeticoId -> ID INCREMENT .)


state 287

    (108) operadoresArimeticoId -> ID DECREMENT .

    RPAREN          reduce using rule 108 (operadoresArimeticoId -> ID DECREMENT .)


state 288

    (109) operadoresArimeticoId -> ID PLUSEQUAL . values
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 304

state 289

    (110) operadoresArimeticoId -> ID MINUSEQUAL . values
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 305

state 290

    (111) operadoresArimeticoId -> ID MULTIPLUS . values
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 306

state 291

    (112) operadoresArimeticoId -> ID DIVIDEEQUAL . values
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 307

state 292

    (86) itemsMaps -> values COLON values COMMA . itemsMaps
    (85) itemsMaps -> . values COLON values
    (86) itemsMaps -> . values COLON values COMMA itemsMaps
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    values                         shift and go to state 206
    itemsMaps                      shift and go to state 308

state 293

    (77) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL . CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETLEFT shift and go to state 309


state 294

    (79) estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .

    STATIC          reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    IMPORT          reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 79 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)


state 295

    (80) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA . DATATYPES GREATER LPAREN RPAREN SEMICOLON

    DATATYPES       shift and go to state 310


state 296

    (37) declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .

    STATIC          reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    IMPORT          reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 37 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)


state 297

    (23) funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 311


state 298

    (24) funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .

    STATIC          reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    VOID            reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    FOR             reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    IF              reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    MAP             reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    ID              reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    LIST            reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    SET             reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    ELSE            reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    $end            reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 24 (funcion -> DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)


state 299

    (26) sentenciaReturn -> RETURN LPAREN . retornarValues RPAREN SEMICOLON
    (27) retornarValues -> . values
    (28) retornarValues -> . NULL
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    NULL            shift and go to state 314
    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    retornarValues                 shift and go to state 312
    values                         shift and go to state 313

state 300

    (39) declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 315


state 301

    (119) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .

    STATIC          reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    VOID            reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    FOR             reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    IF              reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    MAP             reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    ID              reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    LIST            reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    SET             reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    ELSE            reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    IMPORT          reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    WHILE           reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    BREAK           reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    PRINT           reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    $end            reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    RPAREN          reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    RETURN          reduce using rule 119 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)


state 302

    (25) funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .

    STATIC          reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    VOID            reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    FOR             reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    IF              reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    MAP             reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    ID              reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    LIST            reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    SET             reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    ELSE            reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    $end            reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 25 (funcion -> VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)


state 303

    (87) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . sentenciaIf
    (6) instruccion -> . asignacionesMas
    (7) instruccion -> . estructuraMap
    (8) instruccion -> . array
    (9) instruccion -> . arrayChanges
    (10) instruccion -> . declarset
    (11) instruccion -> . sentenciaIfElse
    (12) instruccion -> . sentenciaElse
    (13) instruccion -> . foreach
    (14) instruccion -> . listBuscar
    (15) instruccion -> . importsDart
    (16) instruccion -> . listMethods
    (17) instruccion -> . sentenciaWhile
    (18) instruccion -> . palabraBreak
    (19) instruccion -> . funcionPrint
    (23) funcion -> . STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (24) funcion -> . DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (25) funcion -> . VOID ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (87) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (70) asignacionesMas -> . asignacion
    (71) asignacionesMas -> . asignacion asignacionesMas
    (76) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (77) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (78) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (79) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (80) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (81) estructuraMap -> . metodoMapClear
    (82) estructuraMap -> . metodoMapRemoveKey
    (83) estructuraMap -> . metodoMapAddAll
    (84) estructuraMap -> . metodoMapAdd
    (53) array -> . ID EQUAL arrayInicio SEMICOLON
    (54) array -> . arrayFunc SEMICOLON
    (55) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (56) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (64) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (37) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (38) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (40) declarset -> . setadd
    (41) declarset -> . setclear
    (42) declarset -> . setcontains
    (43) declarset -> . setAddAll
    (44) declarset -> . setlengh
    (45) declarset -> . setremove
    (33) sentenciaIfElse -> . sentenciaIf
    (34) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse
    (32) sentenciaElse -> . ELSE sentenciaIf
    (52) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (63) listBuscar -> . ID DOT LENGTH SEMICOLON
    (121) importsDart -> . IMPORT STR SEMICOLON
    (122) listMethods -> . metodoListFilled
    (88) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (92) palabraBreak -> . BREAK SEMICOLON
    (89) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (67) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (68) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (69) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (117) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (118) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (119) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (120) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (62) arrayFunc -> . ID DOT subArray
    (46) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (47) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (48) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (49) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (50) setlengh -> . ID DOT LENGTH SEMICOLON
    (51) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (123) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 20
    DATATYPES       shift and go to state 21
    VOID            shift and go to state 23
    FOR             shift and go to state 24
    IF              shift and go to state 26
    MAP             shift and go to state 27
    VARTYPE         shift and go to state 28
    ID              shift and go to state 22
    LIST            shift and go to state 34
    SET             shift and go to state 35
    ELSE            shift and go to state 42
    IMPORT          shift and go to state 43
    WHILE           shift and go to state 45
    BREAK           shift and go to state 46
    PRINT           shift and go to state 47

    asignacion                     shift and go to state 25
    instruccionesMas               shift and go to state 316
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    sentenciaIf                    shift and go to state 5
    asignacionesMas                shift and go to state 6
    estructuraMap                  shift and go to state 7
    array                          shift and go to state 8
    arrayChanges                   shift and go to state 9
    declarset                      shift and go to state 10
    sentenciaIfElse                shift and go to state 11
    sentenciaElse                  shift and go to state 12
    foreach                        shift and go to state 13
    listBuscar                     shift and go to state 14
    importsDart                    shift and go to state 15
    listMethods                    shift and go to state 16
    sentenciaWhile                 shift and go to state 17
    palabraBreak                   shift and go to state 18
    funcionPrint                   shift and go to state 19
    metodoMapClear                 shift and go to state 29
    metodoMapRemoveKey             shift and go to state 30
    metodoMapAddAll                shift and go to state 31
    metodoMapAdd                   shift and go to state 32
    arrayFunc                      shift and go to state 33
    setadd                         shift and go to state 36
    setclear                       shift and go to state 37
    setcontains                    shift and go to state 38
    setAddAll                      shift and go to state 39
    setlengh                       shift and go to state 40
    setremove                      shift and go to state 41
    metodoListFilled               shift and go to state 44

state 304

    (109) operadoresArimeticoId -> ID PLUSEQUAL values .

    RPAREN          reduce using rule 109 (operadoresArimeticoId -> ID PLUSEQUAL values .)


state 305

    (110) operadoresArimeticoId -> ID MINUSEQUAL values .

    RPAREN          reduce using rule 110 (operadoresArimeticoId -> ID MINUSEQUAL values .)


state 306

    (111) operadoresArimeticoId -> ID MULTIPLUS values .

    RPAREN          reduce using rule 111 (operadoresArimeticoId -> ID MULTIPLUS values .)


state 307

    (112) operadoresArimeticoId -> ID DIVIDEEQUAL values .

    RPAREN          reduce using rule 112 (operadoresArimeticoId -> ID DIVIDEEQUAL values .)


state 308

    (86) itemsMaps -> values COLON values COMMA itemsMaps .

    CURLYBRACKETRIGHT reduce using rule 86 (itemsMaps -> values COLON values COMMA itemsMaps .)


state 309

    (77) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT . itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (85) itemsMaps -> . values COLON values
    (86) itemsMaps -> . values COLON values COMMA itemsMaps
    (72) values -> . INT
    (73) values -> . FLOAT
    (74) values -> . BOOLEAN
    (75) values -> . STR

    INT             shift and go to state 87
    FLOAT           shift and go to state 88
    BOOLEAN         shift and go to state 89
    STR             shift and go to state 90

    itemsMaps                      shift and go to state 317
    values                         shift and go to state 206

state 310

    (80) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES . GREATER LPAREN RPAREN SEMICOLON

    GREATER         shift and go to state 318


state 311

    (23) funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .

    STATIC          reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    VOID            reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    FOR             reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    IF              reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    MAP             reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    ID              reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    LIST            reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    SET             reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    ELSE            reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    $end            reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 23 (funcion -> STATIC DATATYPES ID LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)


state 312

    (26) sentenciaReturn -> RETURN LPAREN retornarValues . RPAREN SEMICOLON

    RPAREN          shift and go to state 319


state 313

    (27) retornarValues -> values .

    RPAREN          reduce using rule 27 (retornarValues -> values .)


state 314

    (28) retornarValues -> NULL .

    RPAREN          reduce using rule 28 (retornarValues -> NULL .)


state 315

    (39) declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    ELSE            reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 39 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)


state 316

    (87) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 320


state 317

    (77) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 321


state 318

    (80) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 322


state 319

    (26) sentenciaReturn -> RETURN LPAREN retornarValues RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 323


state 320

    (87) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    STATIC          reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ELSE            reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 87 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 321

    (77) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 324


state 322

    (80) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 325


state 323

    (26) sentenciaReturn -> RETURN LPAREN retornarValues RPAREN SEMICOLON .

    CURLYBRACKETRIGHT reduce using rule 26 (sentenciaReturn -> RETURN LPAREN retornarValues RPAREN SEMICOLON .)


state 324

    (77) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    ELSE            reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 77 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)


state 325

    (80) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 326


state 326

    (80) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .

    STATIC          reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    IMPORT          reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 80 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 5 resolved as shift
WARNING: shift/reduce conflict for DATATYPES in state 25 resolved as shift
WARNING: shift/reduce conflict for VARTYPE in state 25 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 70 resolved as shift
WARNING: shift/reduce conflict for DOT in state 192 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (instruccion -> sentenciaIf)
WARNING: rejected rule (sentenciaIfElse -> sentenciaIf) in state 5
WARNING: reduce/reduce conflict in state 137 resolved using rule (setlengh -> ID DOT LENGTH SEMICOLON)
WARNING: rejected rule (listBuscar -> ID DOT LENGTH SEMICOLON) in state 137
WARNING: reduce/reduce conflict in state 257 resolved using rule (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON)
WARNING: rejected rule (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON) in state 257
WARNING: Rule (sentenciaIfElse -> sentenciaIf) is never reduced
WARNING: Rule (listBuscar -> ID DOT LENGTH SEMICOLON) is never reduced
WARNING: Rule (metodoMapRemoveKey -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON) is never reduced
