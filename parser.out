Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AS
    ASSERT
    ASYNC
    AWAIT
    BASE
    CASE
    CATCH
    CLASS
    CONST
    CONTINUE
    COVARIANT
    DEFAULT
    DEFERRED
    DIVIDE
    DO
    DOLLAR
    DYNAMIC
    ENUM
    EXPORT
    EXTENDS
    EXTENSION
    EXTERNAL
    FACTORY
    FALSE
    FINAL
    FINALLY
    FUNCTION
    GET
    HIDE
    IMPLEMENTS
    IN
    INTERFACE
    IS
    LATE
    LIBRARY
    LISTEMPTY
    MAPEMPTY
    MAPTYPE
    MINUS
    MIXIN
    MOD
    ON
    OPERATOR
    PART
    PLUS
    QUESTIONMARK
    REQUIRED
    RETHROW
    SEALED
    SHOW
    SUPER
    SWITCH
    SYNC
    THIS
    THROW
    TIMES
    TRY
    TYPEDEF
    UNDERSCORE
    VAR
    WHEN
    WITH
    YIELD

Grammar

Rule 0     S' -> instruccionesMas
Rule 1     instruccionesMas -> instruccion
Rule 2     instruccionesMas -> instruccion instruccionesMas
Rule 3     instruccion -> funcion
Rule 4     instruccion -> sentenciaFor
Rule 5     instruccion -> asignacionesMas
Rule 6     instruccion -> estructuraMap
Rule 7     instruccion -> array
Rule 8     instruccion -> arrayChanges
Rule 9     instruccion -> declarset
Rule 10    instruccion -> sentenciaIfElse
Rule 11    instruccion -> foreach
Rule 12    instruccion -> listBuscar
Rule 13    instruccion -> importsDart
Rule 14    instruccion -> listMethods
Rule 15    instruccion -> sentenciaWhile
Rule 16    instruccion -> palabraBreak
Rule 17    instruccion -> funcionPrint
Rule 18    funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
Rule 19    funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
Rule 20    funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 21    funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 22    funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
Rule 23    parametrosF -> parametro
Rule 24    parametrosF -> parametro COMMA parametrosF
Rule 25    parametro -> DATATYPES ID
Rule 26    sentenciaReturn -> RETURN LPAREN retornarValues RPAREN SEMICOLON
Rule 27    retornarValues -> values
Rule 28    retornarValues -> NULL
Rule 29    sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 30    sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 31    sentenciaElse -> ELSE sentenciaIf sentenciaElse
Rule 32    sentenciaIfElse -> sentenciaIf
Rule 33    sentenciaIfElse -> sentenciaIf sentenciaElse
Rule 34    set -> values
Rule 35    set -> values COMMA set
Rule 36    declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
Rule 37    declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
Rule 38    declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
Rule 39    declarset -> setadd
Rule 40    declarset -> setclear
Rule 41    declarset -> setcontains
Rule 42    declarset -> setAddAll
Rule 43    declarset -> setlengh
Rule 44    declarset -> setremove
Rule 45    condicionesPlus -> comparacion
Rule 46    condicionesPlus -> comparacion operadoresLogicos condicionesPlus
Rule 47    setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON
Rule 48    setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON
Rule 49    setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
Rule 50    setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
Rule 51    setlengh -> ID DOT LENGTH SEMICOLON
Rule 52    setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON
Rule 53    foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
Rule 54    array -> ID EQUAL arrayInicio SEMICOLON
Rule 55    array -> arrayFunc SEMICOLON
Rule 56    array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
Rule 57    array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
Rule 58    arrayInicio -> SQUAREBRACKETLEFT SQUAREBRACKETRIGHT
Rule 59    arrayInicio -> SQUAREBRACKETLEFT set SQUAREBRACKETRIGHT
Rule 60    arrayInicio -> ID DOT subArray
Rule 61    arrayValues -> values
Rule 62    arrayValues -> values COMMA arrayValues
Rule 63    arrayFunc -> ID DOT subArray
Rule 64    listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
Rule 65    arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
Rule 66    subArray -> SUBLIST LPAREN values RPAREN SEMICOLON
Rule 67    subArray -> subArray DOT subArray
Rule 68    asignacion -> DATATYPES ID EQUAL values SEMICOLON
Rule 69    asignacion -> VARTYPE ID EQUAL values SEMICOLON
Rule 70    asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON
Rule 71    asignacion -> ID EQUAL condicionesPlus SEMICOLON
Rule 72    asignacion -> ID EQUAL values SEMICOLON
Rule 73    asignacion -> operadoresArimeticoId
Rule 74    asignacionesMas -> asignacion
Rule 75    asignacionesMas -> asignacion asignacionesMas
Rule 76    values -> INT
Rule 77    values -> FLOAT
Rule 78    values -> BOOLEAN
Rule 79    values -> STR
Rule 80    estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
Rule 81    estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
Rule 82    estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
Rule 83    estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
Rule 84    estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
Rule 85    estructuraMap -> metodoMapClear
Rule 86    estructuraMap -> metodoMapRemoveKey
Rule 87    estructuraMap -> metodoMapAddAll
Rule 88    estructuraMap -> metodoMapAdd
Rule 89    itemsMaps -> values COLON values
Rule 90    itemsMaps -> values COLON values COMMA itemsMaps
Rule 91    sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 92    sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 93    funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON
Rule 94    printValues -> ID
Rule 95    printValues -> values
Rule 96    palabraBreak -> BREAK SEMICOLON
Rule 97    comparacion -> ID comparador values
Rule 98    comparacion -> ID comparador ID
Rule 99    comparacion -> ID operadoresLogicos ID
Rule 100   comparacion -> BOOLEAN operadoresLogicos BOOLEAN
Rule 101   comparador -> GREATER
Rule 102   comparador -> LESS
Rule 103   comparador -> GREATEREQ
Rule 104   comparador -> LESSEQ
Rule 105   comparador -> EQUALC
Rule 106   comparador -> DIFFERENT
Rule 107   operadoresLogicos -> AND
Rule 108   operadoresLogicos -> OR
Rule 109   operadoresLogicos -> NOT
Rule 110   operadoresArimeticoId -> ID INCREMENT SEMICOLON
Rule 111   operadoresArimeticoId -> ID DECREMENT SEMICOLON
Rule 112   operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON
Rule 113   operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON
Rule 114   operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON
Rule 115   operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON
Rule 116   operadoresAsignacion -> PLUSEQUAL
Rule 117   operadoresAsignacion -> MINUSEQUAL
Rule 118   operadoresAsignacion -> MULTIPLUS
Rule 119   operadoresAsignacion -> DIVIDEEQUAL
Rule 120   metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON
Rule 121   metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
Rule 122   metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
Rule 123   metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
Rule 124   importsDart -> IMPORT STR SEMICOLON
Rule 125   listMethods -> metodoListFilled
Rule 126   metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

Terminals, with rules where they appear

ABSTRACT             : 
ADD                  : 47
ADDALL               : 50
AND                  : 107
AS                   : 
ASSERT               : 
ASYNC                : 
AWAIT                : 
BASE                 : 
BOOLEAN              : 78 100 100
BREAK                : 96
CASE                 : 
CATCH                : 
CLASS                : 
CLEAR                : 48 120 121 122
COLON                : 89 90
COMMA                : 24 35 62 81 84 90
CONST                : 
CONTAINS             : 49
CONTINUE             : 
COVARIANT            : 
CURLYBRACKETLEFT     : 18 19 20 21 22 29 30 37 38 80 81 82 91 92 122
CURLYBRACKETRIGHT    : 18 19 20 21 22 29 30 37 38 80 81 82 91 92 122
DATATYPES            : 18 19 25 38 56 68 70 81 81 84 84
DECREMENT            : 111
DEFAULT              : 
DEFERRED             : 
DIFFERENT            : 106
DIVIDE               : 
DIVIDEEQUAL          : 115 119
DO                   : 
DOLLAR               : 
DOT                  : 47 48 49 50 51 52 53 60 63 64 67 120 121 122 126
DYNAMIC              : 
ELSE                 : 30 31
ENUM                 : 
EQUAL                : 36 37 38 54 56 57 65 68 69 71 72 80 81 82 83 84 123
EQUALC               : 105
EXPORT               : 
EXTENDS              : 
EXTENSION            : 
EXTERNAL             : 
FACTORY              : 
FALSE                : 
FILLED               : 126
FINAL                : 
FINALLY              : 
FLOAT                : 77
FOR                  : 91
FOREACH              : 53
FUNCNAME             : 18 19 20 21 22
FUNCTION             : 
GET                  : 
GREATER              : 38 81 84 101
GREATEREQ            : 103
HIDE                 : 
ID                   : 25 36 37 38 47 48 49 50 50 51 52 53 54 56 57 60 63 64 65 68 69 70 71 72 80 81 82 83 84 94 97 98 98 99 99 110 111 112 113 114 115 120 121 122 123
IF                   : 29
IMPLEMENTS           : 
IMPORT               : 124
IN                   : 
INCREMENT            : 110
INT                  : 76
INTERFACE            : 
IS                   : 
LATE                 : 
LENGTH               : 51
LESS                 : 38 81 84 102
LESSEQ               : 104
LIBRARY              : 
LIST                 : 57 126
LISTEMPTY            : 
LPAREN               : 18 19 20 21 22 26 29 36 47 48 49 50 52 53 64 66 83 84 91 92 93 120 121 122 126
MAP                  : 80 81 83 84
MAPEMPTY             : 
MAPTYPE              : 
MINUS                : 
MINUSEQUAL           : 113 117
MIXIN                : 
MOD                  : 
MULTIPLUS            : 114 118
NEW                  : 36 83 84
NOT                  : 109
NULL                 : 28
ON                   : 
OPERATOR             : 
OR                   : 108
PART                 : 
PLUS                 : 
PLUSEQUAL            : 112 116
PRINT                : 93
QUESTIONMARK         : 
REMOVE               : 52
REQUIRED             : 
RETHROW              : 
RETURN               : 26
RPAREN               : 18 19 20 21 22 26 29 36 47 48 49 50 52 53 64 66 83 84 91 92 93 120 121 122 126
SEALED               : 
SEMICOLON            : 26 36 37 38 47 48 49 50 51 52 53 54 55 56 57 64 65 66 68 69 70 71 72 80 81 82 83 84 91 91 93 96 110 111 112 113 114 115 120 121 122 123 124 126
SET                  : 36 36 37
SHOW                 : 
SQUAREBRACKETLEFT    : 56 57 58 59 65 123
SQUAREBRACKETRIGHT   : 56 57 58 59 65 123
STATIC               : 18
STR                  : 79 124
SUBLIST              : 66
SUPER                : 
SWITCH               : 
SYNC                 : 
THIS                 : 
THROW                : 
TIMES                : 
TRY                  : 
TYPEDEF              : 
UNDERSCORE           : 
VAR                  : 
VARTYPE              : 38 69 82 83 84
VOID                 : 20 21 22
WHEN                 : 
WHERE                : 64
WHILE                : 92
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

array                : 7
arrayChanges         : 8
arrayFunc            : 55
arrayInicio          : 54
arrayValues          : 56 57 62 121 126
asignacion           : 74 75 91
asignacionesMas      : 5 75
comparacion          : 29 45 46 91 92
comparador           : 97 98
condicionesPlus      : 46 71
declarset            : 9
estructuraMap        : 6
foreach              : 11
funcion              : 3
funcionPrint         : 17
importsDart          : 13
instruccion          : 1 2
instruccionesMas     : 2 18 19 20 21 29 30 53 64 91 92 0
itemsMaps            : 80 81 82 90 122
listBuscar           : 12
listMethods          : 14
metodoListFilled     : 125
metodoMapAdd         : 88
metodoMapAddAll      : 87
metodoMapClear       : 85
metodoMapRemoveKey   : 86
operadoresArimeticoId : 73 91
operadoresAsignacion : 70
operadoresLogicos    : 46 99 100
palabraBreak         : 16
parametro            : 23 24
parametrosF          : 18 19 20 24
printValues          : 93
retornarValues       : 26
sentenciaElse        : 31 33
sentenciaFor         : 4
sentenciaIf          : 31 32 33
sentenciaIfElse      : 10
sentenciaReturn      : 18 19
sentenciaWhile       : 15
set                  : 35 37 38 59
setAddAll            : 42
setadd               : 39
setclear             : 40
setcontains          : 41
setlengh             : 43
setremove            : 44
subArray             : 60 63 67 67
values               : 27 34 35 47 48 49 52 61 62 65 65 66 68 69 70 72 89 89 90 90 95 97 112 113 114 115 123 123

Parsing method: LALR

state 0

    (0) S' -> . instruccionesMas
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (91) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (74) asignacionesMas -> . asignacion
    (75) asignacionesMas -> . asignacion asignacionesMas
    (80) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (85) estructuraMap -> . metodoMapClear
    (86) estructuraMap -> . metodoMapRemoveKey
    (87) estructuraMap -> . metodoMapAddAll
    (88) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (124) importsDart -> . IMPORT STR SEMICOLON
    (125) listMethods -> . metodoListFilled
    (92) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) palabraBreak -> . BREAK SEMICOLON
    (93) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> . ID EQUAL values SEMICOLON
    (73) asignacion -> . operadoresArimeticoId
    (120) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (123) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (126) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 24
    VARTYPE         shift and go to state 26
    ID              shift and go to state 25
    LIST            shift and go to state 32
    SET             shift and go to state 33
    IMPORT          shift and go to state 41
    WHILE           shift and go to state 43
    BREAK           shift and go to state 44
    PRINT           shift and go to state 45
    IF              shift and go to state 46

    instruccionesMas               shift and go to state 1
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    operadoresArimeticoId          shift and go to state 23
    metodoMapClear                 shift and go to state 27
    metodoMapRemoveKey             shift and go to state 28
    metodoMapAddAll                shift and go to state 29
    metodoMapAdd                   shift and go to state 30
    arrayFunc                      shift and go to state 31
    setadd                         shift and go to state 34
    setclear                       shift and go to state 35
    setcontains                    shift and go to state 36
    setAddAll                      shift and go to state 37
    setlengh                       shift and go to state 38
    setremove                      shift and go to state 39
    sentenciaIf                    shift and go to state 40
    metodoListFilled               shift and go to state 42

state 1

    (0) S' -> instruccionesMas .



state 2

    (1) instruccionesMas -> instruccion .
    (2) instruccionesMas -> instruccion . instruccionesMas
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (91) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (74) asignacionesMas -> . asignacion
    (75) asignacionesMas -> . asignacion asignacionesMas
    (80) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (85) estructuraMap -> . metodoMapClear
    (86) estructuraMap -> . metodoMapRemoveKey
    (87) estructuraMap -> . metodoMapAddAll
    (88) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (124) importsDart -> . IMPORT STR SEMICOLON
    (125) listMethods -> . metodoListFilled
    (92) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) palabraBreak -> . BREAK SEMICOLON
    (93) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> . ID EQUAL values SEMICOLON
    (73) asignacion -> . operadoresArimeticoId
    (120) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (123) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (126) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

    $end            reduce using rule 1 (instruccionesMas -> instruccion .)
    CURLYBRACKETRIGHT reduce using rule 1 (instruccionesMas -> instruccion .)
    RPAREN          reduce using rule 1 (instruccionesMas -> instruccion .)
    RETURN          reduce using rule 1 (instruccionesMas -> instruccion .)
    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 24
    VARTYPE         shift and go to state 26
    ID              shift and go to state 25
    LIST            shift and go to state 32
    SET             shift and go to state 33
    IMPORT          shift and go to state 41
    WHILE           shift and go to state 43
    BREAK           shift and go to state 44
    PRINT           shift and go to state 45
    IF              shift and go to state 46

    instruccion                    shift and go to state 2
    instruccionesMas               shift and go to state 47
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    operadoresArimeticoId          shift and go to state 23
    metodoMapClear                 shift and go to state 27
    metodoMapRemoveKey             shift and go to state 28
    metodoMapAddAll                shift and go to state 29
    metodoMapAdd                   shift and go to state 30
    arrayFunc                      shift and go to state 31
    setadd                         shift and go to state 34
    setclear                       shift and go to state 35
    setcontains                    shift and go to state 36
    setAddAll                      shift and go to state 37
    setlengh                       shift and go to state 38
    setremove                      shift and go to state 39
    sentenciaIf                    shift and go to state 40
    metodoListFilled               shift and go to state 42

state 3

    (3) instruccion -> funcion .

    STATIC          reduce using rule 3 (instruccion -> funcion .)
    DATATYPES       reduce using rule 3 (instruccion -> funcion .)
    VOID            reduce using rule 3 (instruccion -> funcion .)
    FOR             reduce using rule 3 (instruccion -> funcion .)
    MAP             reduce using rule 3 (instruccion -> funcion .)
    VARTYPE         reduce using rule 3 (instruccion -> funcion .)
    ID              reduce using rule 3 (instruccion -> funcion .)
    LIST            reduce using rule 3 (instruccion -> funcion .)
    SET             reduce using rule 3 (instruccion -> funcion .)
    IMPORT          reduce using rule 3 (instruccion -> funcion .)
    WHILE           reduce using rule 3 (instruccion -> funcion .)
    BREAK           reduce using rule 3 (instruccion -> funcion .)
    PRINT           reduce using rule 3 (instruccion -> funcion .)
    IF              reduce using rule 3 (instruccion -> funcion .)
    $end            reduce using rule 3 (instruccion -> funcion .)
    CURLYBRACKETRIGHT reduce using rule 3 (instruccion -> funcion .)
    RPAREN          reduce using rule 3 (instruccion -> funcion .)
    RETURN          reduce using rule 3 (instruccion -> funcion .)


state 4

    (4) instruccion -> sentenciaFor .

    STATIC          reduce using rule 4 (instruccion -> sentenciaFor .)
    DATATYPES       reduce using rule 4 (instruccion -> sentenciaFor .)
    VOID            reduce using rule 4 (instruccion -> sentenciaFor .)
    FOR             reduce using rule 4 (instruccion -> sentenciaFor .)
    MAP             reduce using rule 4 (instruccion -> sentenciaFor .)
    VARTYPE         reduce using rule 4 (instruccion -> sentenciaFor .)
    ID              reduce using rule 4 (instruccion -> sentenciaFor .)
    LIST            reduce using rule 4 (instruccion -> sentenciaFor .)
    SET             reduce using rule 4 (instruccion -> sentenciaFor .)
    IMPORT          reduce using rule 4 (instruccion -> sentenciaFor .)
    WHILE           reduce using rule 4 (instruccion -> sentenciaFor .)
    BREAK           reduce using rule 4 (instruccion -> sentenciaFor .)
    PRINT           reduce using rule 4 (instruccion -> sentenciaFor .)
    IF              reduce using rule 4 (instruccion -> sentenciaFor .)
    $end            reduce using rule 4 (instruccion -> sentenciaFor .)
    CURLYBRACKETRIGHT reduce using rule 4 (instruccion -> sentenciaFor .)
    RPAREN          reduce using rule 4 (instruccion -> sentenciaFor .)
    RETURN          reduce using rule 4 (instruccion -> sentenciaFor .)


state 5

    (5) instruccion -> asignacionesMas .

    STATIC          reduce using rule 5 (instruccion -> asignacionesMas .)
    DATATYPES       reduce using rule 5 (instruccion -> asignacionesMas .)
    VOID            reduce using rule 5 (instruccion -> asignacionesMas .)
    FOR             reduce using rule 5 (instruccion -> asignacionesMas .)
    MAP             reduce using rule 5 (instruccion -> asignacionesMas .)
    VARTYPE         reduce using rule 5 (instruccion -> asignacionesMas .)
    ID              reduce using rule 5 (instruccion -> asignacionesMas .)
    LIST            reduce using rule 5 (instruccion -> asignacionesMas .)
    SET             reduce using rule 5 (instruccion -> asignacionesMas .)
    IMPORT          reduce using rule 5 (instruccion -> asignacionesMas .)
    WHILE           reduce using rule 5 (instruccion -> asignacionesMas .)
    BREAK           reduce using rule 5 (instruccion -> asignacionesMas .)
    PRINT           reduce using rule 5 (instruccion -> asignacionesMas .)
    IF              reduce using rule 5 (instruccion -> asignacionesMas .)
    $end            reduce using rule 5 (instruccion -> asignacionesMas .)
    CURLYBRACKETRIGHT reduce using rule 5 (instruccion -> asignacionesMas .)
    RPAREN          reduce using rule 5 (instruccion -> asignacionesMas .)
    RETURN          reduce using rule 5 (instruccion -> asignacionesMas .)


state 6

    (6) instruccion -> estructuraMap .

    STATIC          reduce using rule 6 (instruccion -> estructuraMap .)
    DATATYPES       reduce using rule 6 (instruccion -> estructuraMap .)
    VOID            reduce using rule 6 (instruccion -> estructuraMap .)
    FOR             reduce using rule 6 (instruccion -> estructuraMap .)
    MAP             reduce using rule 6 (instruccion -> estructuraMap .)
    VARTYPE         reduce using rule 6 (instruccion -> estructuraMap .)
    ID              reduce using rule 6 (instruccion -> estructuraMap .)
    LIST            reduce using rule 6 (instruccion -> estructuraMap .)
    SET             reduce using rule 6 (instruccion -> estructuraMap .)
    IMPORT          reduce using rule 6 (instruccion -> estructuraMap .)
    WHILE           reduce using rule 6 (instruccion -> estructuraMap .)
    BREAK           reduce using rule 6 (instruccion -> estructuraMap .)
    PRINT           reduce using rule 6 (instruccion -> estructuraMap .)
    IF              reduce using rule 6 (instruccion -> estructuraMap .)
    $end            reduce using rule 6 (instruccion -> estructuraMap .)
    CURLYBRACKETRIGHT reduce using rule 6 (instruccion -> estructuraMap .)
    RPAREN          reduce using rule 6 (instruccion -> estructuraMap .)
    RETURN          reduce using rule 6 (instruccion -> estructuraMap .)


state 7

    (7) instruccion -> array .

    STATIC          reduce using rule 7 (instruccion -> array .)
    DATATYPES       reduce using rule 7 (instruccion -> array .)
    VOID            reduce using rule 7 (instruccion -> array .)
    FOR             reduce using rule 7 (instruccion -> array .)
    MAP             reduce using rule 7 (instruccion -> array .)
    VARTYPE         reduce using rule 7 (instruccion -> array .)
    ID              reduce using rule 7 (instruccion -> array .)
    LIST            reduce using rule 7 (instruccion -> array .)
    SET             reduce using rule 7 (instruccion -> array .)
    IMPORT          reduce using rule 7 (instruccion -> array .)
    WHILE           reduce using rule 7 (instruccion -> array .)
    BREAK           reduce using rule 7 (instruccion -> array .)
    PRINT           reduce using rule 7 (instruccion -> array .)
    IF              reduce using rule 7 (instruccion -> array .)
    $end            reduce using rule 7 (instruccion -> array .)
    CURLYBRACKETRIGHT reduce using rule 7 (instruccion -> array .)
    RPAREN          reduce using rule 7 (instruccion -> array .)
    RETURN          reduce using rule 7 (instruccion -> array .)


state 8

    (8) instruccion -> arrayChanges .

    STATIC          reduce using rule 8 (instruccion -> arrayChanges .)
    DATATYPES       reduce using rule 8 (instruccion -> arrayChanges .)
    VOID            reduce using rule 8 (instruccion -> arrayChanges .)
    FOR             reduce using rule 8 (instruccion -> arrayChanges .)
    MAP             reduce using rule 8 (instruccion -> arrayChanges .)
    VARTYPE         reduce using rule 8 (instruccion -> arrayChanges .)
    ID              reduce using rule 8 (instruccion -> arrayChanges .)
    LIST            reduce using rule 8 (instruccion -> arrayChanges .)
    SET             reduce using rule 8 (instruccion -> arrayChanges .)
    IMPORT          reduce using rule 8 (instruccion -> arrayChanges .)
    WHILE           reduce using rule 8 (instruccion -> arrayChanges .)
    BREAK           reduce using rule 8 (instruccion -> arrayChanges .)
    PRINT           reduce using rule 8 (instruccion -> arrayChanges .)
    IF              reduce using rule 8 (instruccion -> arrayChanges .)
    $end            reduce using rule 8 (instruccion -> arrayChanges .)
    CURLYBRACKETRIGHT reduce using rule 8 (instruccion -> arrayChanges .)
    RPAREN          reduce using rule 8 (instruccion -> arrayChanges .)
    RETURN          reduce using rule 8 (instruccion -> arrayChanges .)


state 9

    (9) instruccion -> declarset .

    STATIC          reduce using rule 9 (instruccion -> declarset .)
    DATATYPES       reduce using rule 9 (instruccion -> declarset .)
    VOID            reduce using rule 9 (instruccion -> declarset .)
    FOR             reduce using rule 9 (instruccion -> declarset .)
    MAP             reduce using rule 9 (instruccion -> declarset .)
    VARTYPE         reduce using rule 9 (instruccion -> declarset .)
    ID              reduce using rule 9 (instruccion -> declarset .)
    LIST            reduce using rule 9 (instruccion -> declarset .)
    SET             reduce using rule 9 (instruccion -> declarset .)
    IMPORT          reduce using rule 9 (instruccion -> declarset .)
    WHILE           reduce using rule 9 (instruccion -> declarset .)
    BREAK           reduce using rule 9 (instruccion -> declarset .)
    PRINT           reduce using rule 9 (instruccion -> declarset .)
    IF              reduce using rule 9 (instruccion -> declarset .)
    $end            reduce using rule 9 (instruccion -> declarset .)
    CURLYBRACKETRIGHT reduce using rule 9 (instruccion -> declarset .)
    RPAREN          reduce using rule 9 (instruccion -> declarset .)
    RETURN          reduce using rule 9 (instruccion -> declarset .)


state 10

    (10) instruccion -> sentenciaIfElse .

    STATIC          reduce using rule 10 (instruccion -> sentenciaIfElse .)
    DATATYPES       reduce using rule 10 (instruccion -> sentenciaIfElse .)
    VOID            reduce using rule 10 (instruccion -> sentenciaIfElse .)
    FOR             reduce using rule 10 (instruccion -> sentenciaIfElse .)
    MAP             reduce using rule 10 (instruccion -> sentenciaIfElse .)
    VARTYPE         reduce using rule 10 (instruccion -> sentenciaIfElse .)
    ID              reduce using rule 10 (instruccion -> sentenciaIfElse .)
    LIST            reduce using rule 10 (instruccion -> sentenciaIfElse .)
    SET             reduce using rule 10 (instruccion -> sentenciaIfElse .)
    IMPORT          reduce using rule 10 (instruccion -> sentenciaIfElse .)
    WHILE           reduce using rule 10 (instruccion -> sentenciaIfElse .)
    BREAK           reduce using rule 10 (instruccion -> sentenciaIfElse .)
    PRINT           reduce using rule 10 (instruccion -> sentenciaIfElse .)
    IF              reduce using rule 10 (instruccion -> sentenciaIfElse .)
    $end            reduce using rule 10 (instruccion -> sentenciaIfElse .)
    CURLYBRACKETRIGHT reduce using rule 10 (instruccion -> sentenciaIfElse .)
    RPAREN          reduce using rule 10 (instruccion -> sentenciaIfElse .)
    RETURN          reduce using rule 10 (instruccion -> sentenciaIfElse .)


state 11

    (11) instruccion -> foreach .

    STATIC          reduce using rule 11 (instruccion -> foreach .)
    DATATYPES       reduce using rule 11 (instruccion -> foreach .)
    VOID            reduce using rule 11 (instruccion -> foreach .)
    FOR             reduce using rule 11 (instruccion -> foreach .)
    MAP             reduce using rule 11 (instruccion -> foreach .)
    VARTYPE         reduce using rule 11 (instruccion -> foreach .)
    ID              reduce using rule 11 (instruccion -> foreach .)
    LIST            reduce using rule 11 (instruccion -> foreach .)
    SET             reduce using rule 11 (instruccion -> foreach .)
    IMPORT          reduce using rule 11 (instruccion -> foreach .)
    WHILE           reduce using rule 11 (instruccion -> foreach .)
    BREAK           reduce using rule 11 (instruccion -> foreach .)
    PRINT           reduce using rule 11 (instruccion -> foreach .)
    IF              reduce using rule 11 (instruccion -> foreach .)
    $end            reduce using rule 11 (instruccion -> foreach .)
    CURLYBRACKETRIGHT reduce using rule 11 (instruccion -> foreach .)
    RPAREN          reduce using rule 11 (instruccion -> foreach .)
    RETURN          reduce using rule 11 (instruccion -> foreach .)


state 12

    (12) instruccion -> listBuscar .

    STATIC          reduce using rule 12 (instruccion -> listBuscar .)
    DATATYPES       reduce using rule 12 (instruccion -> listBuscar .)
    VOID            reduce using rule 12 (instruccion -> listBuscar .)
    FOR             reduce using rule 12 (instruccion -> listBuscar .)
    MAP             reduce using rule 12 (instruccion -> listBuscar .)
    VARTYPE         reduce using rule 12 (instruccion -> listBuscar .)
    ID              reduce using rule 12 (instruccion -> listBuscar .)
    LIST            reduce using rule 12 (instruccion -> listBuscar .)
    SET             reduce using rule 12 (instruccion -> listBuscar .)
    IMPORT          reduce using rule 12 (instruccion -> listBuscar .)
    WHILE           reduce using rule 12 (instruccion -> listBuscar .)
    BREAK           reduce using rule 12 (instruccion -> listBuscar .)
    PRINT           reduce using rule 12 (instruccion -> listBuscar .)
    IF              reduce using rule 12 (instruccion -> listBuscar .)
    $end            reduce using rule 12 (instruccion -> listBuscar .)
    CURLYBRACKETRIGHT reduce using rule 12 (instruccion -> listBuscar .)
    RPAREN          reduce using rule 12 (instruccion -> listBuscar .)
    RETURN          reduce using rule 12 (instruccion -> listBuscar .)


state 13

    (13) instruccion -> importsDart .

    STATIC          reduce using rule 13 (instruccion -> importsDart .)
    DATATYPES       reduce using rule 13 (instruccion -> importsDart .)
    VOID            reduce using rule 13 (instruccion -> importsDart .)
    FOR             reduce using rule 13 (instruccion -> importsDart .)
    MAP             reduce using rule 13 (instruccion -> importsDart .)
    VARTYPE         reduce using rule 13 (instruccion -> importsDart .)
    ID              reduce using rule 13 (instruccion -> importsDart .)
    LIST            reduce using rule 13 (instruccion -> importsDart .)
    SET             reduce using rule 13 (instruccion -> importsDart .)
    IMPORT          reduce using rule 13 (instruccion -> importsDart .)
    WHILE           reduce using rule 13 (instruccion -> importsDart .)
    BREAK           reduce using rule 13 (instruccion -> importsDart .)
    PRINT           reduce using rule 13 (instruccion -> importsDart .)
    IF              reduce using rule 13 (instruccion -> importsDart .)
    $end            reduce using rule 13 (instruccion -> importsDart .)
    CURLYBRACKETRIGHT reduce using rule 13 (instruccion -> importsDart .)
    RPAREN          reduce using rule 13 (instruccion -> importsDart .)
    RETURN          reduce using rule 13 (instruccion -> importsDart .)


state 14

    (14) instruccion -> listMethods .

    STATIC          reduce using rule 14 (instruccion -> listMethods .)
    DATATYPES       reduce using rule 14 (instruccion -> listMethods .)
    VOID            reduce using rule 14 (instruccion -> listMethods .)
    FOR             reduce using rule 14 (instruccion -> listMethods .)
    MAP             reduce using rule 14 (instruccion -> listMethods .)
    VARTYPE         reduce using rule 14 (instruccion -> listMethods .)
    ID              reduce using rule 14 (instruccion -> listMethods .)
    LIST            reduce using rule 14 (instruccion -> listMethods .)
    SET             reduce using rule 14 (instruccion -> listMethods .)
    IMPORT          reduce using rule 14 (instruccion -> listMethods .)
    WHILE           reduce using rule 14 (instruccion -> listMethods .)
    BREAK           reduce using rule 14 (instruccion -> listMethods .)
    PRINT           reduce using rule 14 (instruccion -> listMethods .)
    IF              reduce using rule 14 (instruccion -> listMethods .)
    $end            reduce using rule 14 (instruccion -> listMethods .)
    CURLYBRACKETRIGHT reduce using rule 14 (instruccion -> listMethods .)
    RPAREN          reduce using rule 14 (instruccion -> listMethods .)
    RETURN          reduce using rule 14 (instruccion -> listMethods .)


state 15

    (15) instruccion -> sentenciaWhile .

    STATIC          reduce using rule 15 (instruccion -> sentenciaWhile .)
    DATATYPES       reduce using rule 15 (instruccion -> sentenciaWhile .)
    VOID            reduce using rule 15 (instruccion -> sentenciaWhile .)
    FOR             reduce using rule 15 (instruccion -> sentenciaWhile .)
    MAP             reduce using rule 15 (instruccion -> sentenciaWhile .)
    VARTYPE         reduce using rule 15 (instruccion -> sentenciaWhile .)
    ID              reduce using rule 15 (instruccion -> sentenciaWhile .)
    LIST            reduce using rule 15 (instruccion -> sentenciaWhile .)
    SET             reduce using rule 15 (instruccion -> sentenciaWhile .)
    IMPORT          reduce using rule 15 (instruccion -> sentenciaWhile .)
    WHILE           reduce using rule 15 (instruccion -> sentenciaWhile .)
    BREAK           reduce using rule 15 (instruccion -> sentenciaWhile .)
    PRINT           reduce using rule 15 (instruccion -> sentenciaWhile .)
    IF              reduce using rule 15 (instruccion -> sentenciaWhile .)
    $end            reduce using rule 15 (instruccion -> sentenciaWhile .)
    CURLYBRACKETRIGHT reduce using rule 15 (instruccion -> sentenciaWhile .)
    RPAREN          reduce using rule 15 (instruccion -> sentenciaWhile .)
    RETURN          reduce using rule 15 (instruccion -> sentenciaWhile .)


state 16

    (16) instruccion -> palabraBreak .

    STATIC          reduce using rule 16 (instruccion -> palabraBreak .)
    DATATYPES       reduce using rule 16 (instruccion -> palabraBreak .)
    VOID            reduce using rule 16 (instruccion -> palabraBreak .)
    FOR             reduce using rule 16 (instruccion -> palabraBreak .)
    MAP             reduce using rule 16 (instruccion -> palabraBreak .)
    VARTYPE         reduce using rule 16 (instruccion -> palabraBreak .)
    ID              reduce using rule 16 (instruccion -> palabraBreak .)
    LIST            reduce using rule 16 (instruccion -> palabraBreak .)
    SET             reduce using rule 16 (instruccion -> palabraBreak .)
    IMPORT          reduce using rule 16 (instruccion -> palabraBreak .)
    WHILE           reduce using rule 16 (instruccion -> palabraBreak .)
    BREAK           reduce using rule 16 (instruccion -> palabraBreak .)
    PRINT           reduce using rule 16 (instruccion -> palabraBreak .)
    IF              reduce using rule 16 (instruccion -> palabraBreak .)
    $end            reduce using rule 16 (instruccion -> palabraBreak .)
    CURLYBRACKETRIGHT reduce using rule 16 (instruccion -> palabraBreak .)
    RPAREN          reduce using rule 16 (instruccion -> palabraBreak .)
    RETURN          reduce using rule 16 (instruccion -> palabraBreak .)


state 17

    (17) instruccion -> funcionPrint .

    STATIC          reduce using rule 17 (instruccion -> funcionPrint .)
    DATATYPES       reduce using rule 17 (instruccion -> funcionPrint .)
    VOID            reduce using rule 17 (instruccion -> funcionPrint .)
    FOR             reduce using rule 17 (instruccion -> funcionPrint .)
    MAP             reduce using rule 17 (instruccion -> funcionPrint .)
    VARTYPE         reduce using rule 17 (instruccion -> funcionPrint .)
    ID              reduce using rule 17 (instruccion -> funcionPrint .)
    LIST            reduce using rule 17 (instruccion -> funcionPrint .)
    SET             reduce using rule 17 (instruccion -> funcionPrint .)
    IMPORT          reduce using rule 17 (instruccion -> funcionPrint .)
    WHILE           reduce using rule 17 (instruccion -> funcionPrint .)
    BREAK           reduce using rule 17 (instruccion -> funcionPrint .)
    PRINT           reduce using rule 17 (instruccion -> funcionPrint .)
    IF              reduce using rule 17 (instruccion -> funcionPrint .)
    $end            reduce using rule 17 (instruccion -> funcionPrint .)
    CURLYBRACKETRIGHT reduce using rule 17 (instruccion -> funcionPrint .)
    RPAREN          reduce using rule 17 (instruccion -> funcionPrint .)
    RETURN          reduce using rule 17 (instruccion -> funcionPrint .)


state 18

    (18) funcion -> STATIC . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    DATATYPES       shift and go to state 48


state 19

    (19) funcion -> DATATYPES . FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (56) array -> DATATYPES . ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (68) asignacion -> DATATYPES . ID EQUAL values SEMICOLON
    (70) asignacion -> DATATYPES . ID operadoresAsignacion values SEMICOLON

    FUNCNAME        shift and go to state 49
    ID              shift and go to state 50


state 20

    (20) funcion -> VOID . FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> VOID . FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> VOID . FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT

    FUNCNAME        shift and go to state 51


state 21

    (91) sentenciaFor -> FOR . LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    LPAREN          shift and go to state 52


state 22

    (74) asignacionesMas -> asignacion .
    (75) asignacionesMas -> asignacion . asignacionesMas
    (74) asignacionesMas -> . asignacion
    (75) asignacionesMas -> . asignacion asignacionesMas
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> . ID EQUAL values SEMICOLON
    (73) asignacion -> . operadoresArimeticoId
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

  ! shift/reduce conflict for DATATYPES resolved as shift
  ! shift/reduce conflict for VARTYPE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    STATIC          reduce using rule 74 (asignacionesMas -> asignacion .)
    VOID            reduce using rule 74 (asignacionesMas -> asignacion .)
    FOR             reduce using rule 74 (asignacionesMas -> asignacion .)
    MAP             reduce using rule 74 (asignacionesMas -> asignacion .)
    LIST            reduce using rule 74 (asignacionesMas -> asignacion .)
    SET             reduce using rule 74 (asignacionesMas -> asignacion .)
    IMPORT          reduce using rule 74 (asignacionesMas -> asignacion .)
    WHILE           reduce using rule 74 (asignacionesMas -> asignacion .)
    BREAK           reduce using rule 74 (asignacionesMas -> asignacion .)
    PRINT           reduce using rule 74 (asignacionesMas -> asignacion .)
    IF              reduce using rule 74 (asignacionesMas -> asignacion .)
    $end            reduce using rule 74 (asignacionesMas -> asignacion .)
    CURLYBRACKETRIGHT reduce using rule 74 (asignacionesMas -> asignacion .)
    RPAREN          reduce using rule 74 (asignacionesMas -> asignacion .)
    RETURN          reduce using rule 74 (asignacionesMas -> asignacion .)
    DATATYPES       shift and go to state 54
    VARTYPE         shift and go to state 56
    ID              shift and go to state 55

  ! DATATYPES       [ reduce using rule 74 (asignacionesMas -> asignacion .) ]
  ! VARTYPE         [ reduce using rule 74 (asignacionesMas -> asignacion .) ]
  ! ID              [ reduce using rule 74 (asignacionesMas -> asignacion .) ]

    asignacion                     shift and go to state 22
    asignacionesMas                shift and go to state 53
    operadoresArimeticoId          shift and go to state 23

state 23

    (73) asignacion -> operadoresArimeticoId .

    DATATYPES       reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    VARTYPE         reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    ID              reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    STATIC          reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    VOID            reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    FOR             reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    MAP             reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    LIST            reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    SET             reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    IMPORT          reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    WHILE           reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    BREAK           reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    PRINT           reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    IF              reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    $end            reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    CURLYBRACKETRIGHT reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    RPAREN          reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    RETURN          reduce using rule 73 (asignacion -> operadoresArimeticoId .)
    SEMICOLON       reduce using rule 73 (asignacion -> operadoresArimeticoId .)


state 24

    (80) estructuraMap -> MAP . ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> MAP . LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    ID              shift and go to state 57
    LESS            shift and go to state 58


state 25

    (54) array -> ID . EQUAL arrayInicio SEMICOLON
    (65) arrayChanges -> ID . SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (53) foreach -> ID . DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> ID . DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (71) asignacion -> ID . EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> ID . EQUAL values SEMICOLON
    (120) metodoMapClear -> ID . DOT CLEAR LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> ID . DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> ID . DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (123) metodoMapAdd -> ID . SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> ID . DOT subArray
    (47) setadd -> ID . DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> ID . DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> ID . DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> ID . DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> ID . DOT LENGTH SEMICOLON
    (52) setremove -> ID . DOT REMOVE LPAREN values RPAREN SEMICOLON
    (110) operadoresArimeticoId -> ID . INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> ID . DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> ID . PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> ID . MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> ID . MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> ID . DIVIDEEQUAL values SEMICOLON

    EQUAL           shift and go to state 59
    SQUAREBRACKETLEFT shift and go to state 60
    DOT             shift and go to state 62
    SQUAREBRACKETRIGHT shift and go to state 61
    INCREMENT       shift and go to state 63
    DECREMENT       shift and go to state 64
    PLUSEQUAL       shift and go to state 65
    MINUSEQUAL      shift and go to state 66
    MULTIPLUS       shift and go to state 67
    DIVIDEEQUAL     shift and go to state 68


state 26

    (82) estructuraMap -> VARTYPE . ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> VARTYPE . ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> VARTYPE . ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (38) declarset -> VARTYPE . ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (69) asignacion -> VARTYPE . ID EQUAL values SEMICOLON

    ID              shift and go to state 69


state 27

    (85) estructuraMap -> metodoMapClear .

    STATIC          reduce using rule 85 (estructuraMap -> metodoMapClear .)
    DATATYPES       reduce using rule 85 (estructuraMap -> metodoMapClear .)
    VOID            reduce using rule 85 (estructuraMap -> metodoMapClear .)
    FOR             reduce using rule 85 (estructuraMap -> metodoMapClear .)
    MAP             reduce using rule 85 (estructuraMap -> metodoMapClear .)
    VARTYPE         reduce using rule 85 (estructuraMap -> metodoMapClear .)
    ID              reduce using rule 85 (estructuraMap -> metodoMapClear .)
    LIST            reduce using rule 85 (estructuraMap -> metodoMapClear .)
    SET             reduce using rule 85 (estructuraMap -> metodoMapClear .)
    IMPORT          reduce using rule 85 (estructuraMap -> metodoMapClear .)
    WHILE           reduce using rule 85 (estructuraMap -> metodoMapClear .)
    BREAK           reduce using rule 85 (estructuraMap -> metodoMapClear .)
    PRINT           reduce using rule 85 (estructuraMap -> metodoMapClear .)
    IF              reduce using rule 85 (estructuraMap -> metodoMapClear .)
    $end            reduce using rule 85 (estructuraMap -> metodoMapClear .)
    CURLYBRACKETRIGHT reduce using rule 85 (estructuraMap -> metodoMapClear .)
    RPAREN          reduce using rule 85 (estructuraMap -> metodoMapClear .)
    RETURN          reduce using rule 85 (estructuraMap -> metodoMapClear .)


state 28

    (86) estructuraMap -> metodoMapRemoveKey .

    STATIC          reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    DATATYPES       reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    VOID            reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    FOR             reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    MAP             reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    VARTYPE         reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    ID              reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    LIST            reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    SET             reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    IMPORT          reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    WHILE           reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    BREAK           reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    PRINT           reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    IF              reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    $end            reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    CURLYBRACKETRIGHT reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    RPAREN          reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)
    RETURN          reduce using rule 86 (estructuraMap -> metodoMapRemoveKey .)


state 29

    (87) estructuraMap -> metodoMapAddAll .

    STATIC          reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    DATATYPES       reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    VOID            reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    FOR             reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    MAP             reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    VARTYPE         reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    ID              reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    LIST            reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    SET             reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    IMPORT          reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    WHILE           reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    BREAK           reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    PRINT           reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    IF              reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    $end            reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    CURLYBRACKETRIGHT reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    RPAREN          reduce using rule 87 (estructuraMap -> metodoMapAddAll .)
    RETURN          reduce using rule 87 (estructuraMap -> metodoMapAddAll .)


state 30

    (88) estructuraMap -> metodoMapAdd .

    STATIC          reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    DATATYPES       reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    VOID            reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    FOR             reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    MAP             reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    VARTYPE         reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    ID              reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    LIST            reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    SET             reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    IMPORT          reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    WHILE           reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    BREAK           reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    PRINT           reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    IF              reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    $end            reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    CURLYBRACKETRIGHT reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    RPAREN          reduce using rule 88 (estructuraMap -> metodoMapAdd .)
    RETURN          reduce using rule 88 (estructuraMap -> metodoMapAdd .)


state 31

    (55) array -> arrayFunc . SEMICOLON

    SEMICOLON       shift and go to state 70


state 32

    (57) array -> LIST . ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (126) metodoListFilled -> LIST . DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    ID              shift and go to state 71
    DOT             shift and go to state 72


state 33

    (36) declarset -> SET . ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> SET . ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    ID              shift and go to state 73


state 34

    (39) declarset -> setadd .

    STATIC          reduce using rule 39 (declarset -> setadd .)
    DATATYPES       reduce using rule 39 (declarset -> setadd .)
    VOID            reduce using rule 39 (declarset -> setadd .)
    FOR             reduce using rule 39 (declarset -> setadd .)
    MAP             reduce using rule 39 (declarset -> setadd .)
    VARTYPE         reduce using rule 39 (declarset -> setadd .)
    ID              reduce using rule 39 (declarset -> setadd .)
    LIST            reduce using rule 39 (declarset -> setadd .)
    SET             reduce using rule 39 (declarset -> setadd .)
    IMPORT          reduce using rule 39 (declarset -> setadd .)
    WHILE           reduce using rule 39 (declarset -> setadd .)
    BREAK           reduce using rule 39 (declarset -> setadd .)
    PRINT           reduce using rule 39 (declarset -> setadd .)
    IF              reduce using rule 39 (declarset -> setadd .)
    $end            reduce using rule 39 (declarset -> setadd .)
    CURLYBRACKETRIGHT reduce using rule 39 (declarset -> setadd .)
    RPAREN          reduce using rule 39 (declarset -> setadd .)
    RETURN          reduce using rule 39 (declarset -> setadd .)


state 35

    (40) declarset -> setclear .

    STATIC          reduce using rule 40 (declarset -> setclear .)
    DATATYPES       reduce using rule 40 (declarset -> setclear .)
    VOID            reduce using rule 40 (declarset -> setclear .)
    FOR             reduce using rule 40 (declarset -> setclear .)
    MAP             reduce using rule 40 (declarset -> setclear .)
    VARTYPE         reduce using rule 40 (declarset -> setclear .)
    ID              reduce using rule 40 (declarset -> setclear .)
    LIST            reduce using rule 40 (declarset -> setclear .)
    SET             reduce using rule 40 (declarset -> setclear .)
    IMPORT          reduce using rule 40 (declarset -> setclear .)
    WHILE           reduce using rule 40 (declarset -> setclear .)
    BREAK           reduce using rule 40 (declarset -> setclear .)
    PRINT           reduce using rule 40 (declarset -> setclear .)
    IF              reduce using rule 40 (declarset -> setclear .)
    $end            reduce using rule 40 (declarset -> setclear .)
    CURLYBRACKETRIGHT reduce using rule 40 (declarset -> setclear .)
    RPAREN          reduce using rule 40 (declarset -> setclear .)
    RETURN          reduce using rule 40 (declarset -> setclear .)


state 36

    (41) declarset -> setcontains .

    STATIC          reduce using rule 41 (declarset -> setcontains .)
    DATATYPES       reduce using rule 41 (declarset -> setcontains .)
    VOID            reduce using rule 41 (declarset -> setcontains .)
    FOR             reduce using rule 41 (declarset -> setcontains .)
    MAP             reduce using rule 41 (declarset -> setcontains .)
    VARTYPE         reduce using rule 41 (declarset -> setcontains .)
    ID              reduce using rule 41 (declarset -> setcontains .)
    LIST            reduce using rule 41 (declarset -> setcontains .)
    SET             reduce using rule 41 (declarset -> setcontains .)
    IMPORT          reduce using rule 41 (declarset -> setcontains .)
    WHILE           reduce using rule 41 (declarset -> setcontains .)
    BREAK           reduce using rule 41 (declarset -> setcontains .)
    PRINT           reduce using rule 41 (declarset -> setcontains .)
    IF              reduce using rule 41 (declarset -> setcontains .)
    $end            reduce using rule 41 (declarset -> setcontains .)
    CURLYBRACKETRIGHT reduce using rule 41 (declarset -> setcontains .)
    RPAREN          reduce using rule 41 (declarset -> setcontains .)
    RETURN          reduce using rule 41 (declarset -> setcontains .)


state 37

    (42) declarset -> setAddAll .

    STATIC          reduce using rule 42 (declarset -> setAddAll .)
    DATATYPES       reduce using rule 42 (declarset -> setAddAll .)
    VOID            reduce using rule 42 (declarset -> setAddAll .)
    FOR             reduce using rule 42 (declarset -> setAddAll .)
    MAP             reduce using rule 42 (declarset -> setAddAll .)
    VARTYPE         reduce using rule 42 (declarset -> setAddAll .)
    ID              reduce using rule 42 (declarset -> setAddAll .)
    LIST            reduce using rule 42 (declarset -> setAddAll .)
    SET             reduce using rule 42 (declarset -> setAddAll .)
    IMPORT          reduce using rule 42 (declarset -> setAddAll .)
    WHILE           reduce using rule 42 (declarset -> setAddAll .)
    BREAK           reduce using rule 42 (declarset -> setAddAll .)
    PRINT           reduce using rule 42 (declarset -> setAddAll .)
    IF              reduce using rule 42 (declarset -> setAddAll .)
    $end            reduce using rule 42 (declarset -> setAddAll .)
    CURLYBRACKETRIGHT reduce using rule 42 (declarset -> setAddAll .)
    RPAREN          reduce using rule 42 (declarset -> setAddAll .)
    RETURN          reduce using rule 42 (declarset -> setAddAll .)


state 38

    (43) declarset -> setlengh .

    STATIC          reduce using rule 43 (declarset -> setlengh .)
    DATATYPES       reduce using rule 43 (declarset -> setlengh .)
    VOID            reduce using rule 43 (declarset -> setlengh .)
    FOR             reduce using rule 43 (declarset -> setlengh .)
    MAP             reduce using rule 43 (declarset -> setlengh .)
    VARTYPE         reduce using rule 43 (declarset -> setlengh .)
    ID              reduce using rule 43 (declarset -> setlengh .)
    LIST            reduce using rule 43 (declarset -> setlengh .)
    SET             reduce using rule 43 (declarset -> setlengh .)
    IMPORT          reduce using rule 43 (declarset -> setlengh .)
    WHILE           reduce using rule 43 (declarset -> setlengh .)
    BREAK           reduce using rule 43 (declarset -> setlengh .)
    PRINT           reduce using rule 43 (declarset -> setlengh .)
    IF              reduce using rule 43 (declarset -> setlengh .)
    $end            reduce using rule 43 (declarset -> setlengh .)
    CURLYBRACKETRIGHT reduce using rule 43 (declarset -> setlengh .)
    RPAREN          reduce using rule 43 (declarset -> setlengh .)
    RETURN          reduce using rule 43 (declarset -> setlengh .)


state 39

    (44) declarset -> setremove .

    STATIC          reduce using rule 44 (declarset -> setremove .)
    DATATYPES       reduce using rule 44 (declarset -> setremove .)
    VOID            reduce using rule 44 (declarset -> setremove .)
    FOR             reduce using rule 44 (declarset -> setremove .)
    MAP             reduce using rule 44 (declarset -> setremove .)
    VARTYPE         reduce using rule 44 (declarset -> setremove .)
    ID              reduce using rule 44 (declarset -> setremove .)
    LIST            reduce using rule 44 (declarset -> setremove .)
    SET             reduce using rule 44 (declarset -> setremove .)
    IMPORT          reduce using rule 44 (declarset -> setremove .)
    WHILE           reduce using rule 44 (declarset -> setremove .)
    BREAK           reduce using rule 44 (declarset -> setremove .)
    PRINT           reduce using rule 44 (declarset -> setremove .)
    IF              reduce using rule 44 (declarset -> setremove .)
    $end            reduce using rule 44 (declarset -> setremove .)
    CURLYBRACKETRIGHT reduce using rule 44 (declarset -> setremove .)
    RPAREN          reduce using rule 44 (declarset -> setremove .)
    RETURN          reduce using rule 44 (declarset -> setremove .)


state 40

    (32) sentenciaIfElse -> sentenciaIf .
    (33) sentenciaIfElse -> sentenciaIf . sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse

    STATIC          reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    DATATYPES       reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    VOID            reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    FOR             reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    MAP             reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    VARTYPE         reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    ID              reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    LIST            reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    SET             reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    IMPORT          reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    WHILE           reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    BREAK           reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    PRINT           reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    IF              reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    $end            reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    CURLYBRACKETRIGHT reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    RPAREN          reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    RETURN          reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    ELSE            shift and go to state 75

    sentenciaElse                  shift and go to state 74

state 41

    (124) importsDart -> IMPORT . STR SEMICOLON

    STR             shift and go to state 76


state 42

    (125) listMethods -> metodoListFilled .

    STATIC          reduce using rule 125 (listMethods -> metodoListFilled .)
    DATATYPES       reduce using rule 125 (listMethods -> metodoListFilled .)
    VOID            reduce using rule 125 (listMethods -> metodoListFilled .)
    FOR             reduce using rule 125 (listMethods -> metodoListFilled .)
    MAP             reduce using rule 125 (listMethods -> metodoListFilled .)
    VARTYPE         reduce using rule 125 (listMethods -> metodoListFilled .)
    ID              reduce using rule 125 (listMethods -> metodoListFilled .)
    LIST            reduce using rule 125 (listMethods -> metodoListFilled .)
    SET             reduce using rule 125 (listMethods -> metodoListFilled .)
    IMPORT          reduce using rule 125 (listMethods -> metodoListFilled .)
    WHILE           reduce using rule 125 (listMethods -> metodoListFilled .)
    BREAK           reduce using rule 125 (listMethods -> metodoListFilled .)
    PRINT           reduce using rule 125 (listMethods -> metodoListFilled .)
    IF              reduce using rule 125 (listMethods -> metodoListFilled .)
    $end            reduce using rule 125 (listMethods -> metodoListFilled .)
    CURLYBRACKETRIGHT reduce using rule 125 (listMethods -> metodoListFilled .)
    RPAREN          reduce using rule 125 (listMethods -> metodoListFilled .)
    RETURN          reduce using rule 125 (listMethods -> metodoListFilled .)


state 43

    (92) sentenciaWhile -> WHILE . LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    LPAREN          shift and go to state 77


state 44

    (96) palabraBreak -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 78


state 45

    (93) funcionPrint -> PRINT . LPAREN printValues RPAREN SEMICOLON

    LPAREN          shift and go to state 79


state 46

    (29) sentenciaIf -> IF . LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    LPAREN          shift and go to state 80


state 47

    (2) instruccionesMas -> instruccion instruccionesMas .

    $end            reduce using rule 2 (instruccionesMas -> instruccion instruccionesMas .)
    CURLYBRACKETRIGHT reduce using rule 2 (instruccionesMas -> instruccion instruccionesMas .)
    RPAREN          reduce using rule 2 (instruccionesMas -> instruccion instruccionesMas .)
    RETURN          reduce using rule 2 (instruccionesMas -> instruccion instruccionesMas .)


state 48

    (18) funcion -> STATIC DATATYPES . FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    FUNCNAME        shift and go to state 81


state 49

    (19) funcion -> DATATYPES FUNCNAME . LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    LPAREN          shift and go to state 82


state 50

    (56) array -> DATATYPES ID . EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (68) asignacion -> DATATYPES ID . EQUAL values SEMICOLON
    (70) asignacion -> DATATYPES ID . operadoresAsignacion values SEMICOLON
    (116) operadoresAsignacion -> . PLUSEQUAL
    (117) operadoresAsignacion -> . MINUSEQUAL
    (118) operadoresAsignacion -> . MULTIPLUS
    (119) operadoresAsignacion -> . DIVIDEEQUAL

    EQUAL           shift and go to state 83
    PLUSEQUAL       shift and go to state 85
    MINUSEQUAL      shift and go to state 86
    MULTIPLUS       shift and go to state 87
    DIVIDEEQUAL     shift and go to state 88

    operadoresAsignacion           shift and go to state 84

state 51

    (20) funcion -> VOID FUNCNAME . LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> VOID FUNCNAME . LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> VOID FUNCNAME . LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT

    LPAREN          shift and go to state 89


state 52

    (91) sentenciaFor -> FOR LPAREN . asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> . ID EQUAL values SEMICOLON
    (73) asignacion -> . operadoresArimeticoId
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

    DATATYPES       shift and go to state 54
    VARTYPE         shift and go to state 56
    ID              shift and go to state 55

    asignacion                     shift and go to state 90
    operadoresArimeticoId          shift and go to state 23

state 53

    (75) asignacionesMas -> asignacion asignacionesMas .

    STATIC          reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    DATATYPES       reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    VOID            reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    FOR             reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    MAP             reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    VARTYPE         reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    ID              reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    LIST            reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    SET             reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    IMPORT          reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    WHILE           reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    BREAK           reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    PRINT           reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    IF              reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    $end            reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    CURLYBRACKETRIGHT reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    RPAREN          reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)
    RETURN          reduce using rule 75 (asignacionesMas -> asignacion asignacionesMas .)


state 54

    (68) asignacion -> DATATYPES . ID EQUAL values SEMICOLON
    (70) asignacion -> DATATYPES . ID operadoresAsignacion values SEMICOLON

    ID              shift and go to state 91


state 55

    (71) asignacion -> ID . EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> ID . EQUAL values SEMICOLON
    (110) operadoresArimeticoId -> ID . INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> ID . DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> ID . PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> ID . MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> ID . MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> ID . DIVIDEEQUAL values SEMICOLON

    EQUAL           shift and go to state 92
    INCREMENT       shift and go to state 63
    DECREMENT       shift and go to state 64
    PLUSEQUAL       shift and go to state 65
    MINUSEQUAL      shift and go to state 66
    MULTIPLUS       shift and go to state 67
    DIVIDEEQUAL     shift and go to state 68


state 56

    (69) asignacion -> VARTYPE . ID EQUAL values SEMICOLON

    ID              shift and go to state 93


state 57

    (80) estructuraMap -> MAP ID . EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    EQUAL           shift and go to state 94


state 58

    (81) estructuraMap -> MAP LESS . DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    DATATYPES       shift and go to state 95


state 59

    (54) array -> ID EQUAL . arrayInicio SEMICOLON
    (71) asignacion -> ID EQUAL . condicionesPlus SEMICOLON
    (72) asignacion -> ID EQUAL . values SEMICOLON
    (58) arrayInicio -> . SQUAREBRACKETLEFT SQUAREBRACKETRIGHT
    (59) arrayInicio -> . SQUAREBRACKETLEFT set SQUAREBRACKETRIGHT
    (60) arrayInicio -> . ID DOT subArray
    (45) condicionesPlus -> . comparacion
    (46) condicionesPlus -> . comparacion operadoresLogicos condicionesPlus
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR
    (97) comparacion -> . ID comparador values
    (98) comparacion -> . ID comparador ID
    (99) comparacion -> . ID operadoresLogicos ID
    (100) comparacion -> . BOOLEAN operadoresLogicos BOOLEAN

    SQUAREBRACKETLEFT shift and go to state 100
    ID              shift and go to state 96
    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 104
    STR             shift and go to state 105

    arrayInicio                    shift and go to state 97
    condicionesPlus                shift and go to state 98
    values                         shift and go to state 99
    comparacion                    shift and go to state 101

state 60

    (65) arrayChanges -> ID SQUAREBRACKETLEFT . values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 106

state 61

    (123) metodoMapAdd -> ID SQUAREBRACKETRIGHT . values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 108

state 62

    (53) foreach -> ID DOT . FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> ID DOT . WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (120) metodoMapClear -> ID DOT . CLEAR LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> ID DOT . CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> ID DOT . CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (63) arrayFunc -> ID DOT . subArray
    (47) setadd -> ID DOT . ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> ID DOT . CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> ID DOT . CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> ID DOT . ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> ID DOT . LENGTH SEMICOLON
    (52) setremove -> ID DOT . REMOVE LPAREN values RPAREN SEMICOLON
    (66) subArray -> . SUBLIST LPAREN values RPAREN SEMICOLON
    (67) subArray -> . subArray DOT subArray

    FOREACH         shift and go to state 109
    WHERE           shift and go to state 110
    CLEAR           shift and go to state 111
    ADD             shift and go to state 113
    CONTAINS        shift and go to state 114
    ADDALL          shift and go to state 115
    LENGTH          shift and go to state 116
    REMOVE          shift and go to state 117
    SUBLIST         shift and go to state 118

    subArray                       shift and go to state 112

state 63

    (110) operadoresArimeticoId -> ID INCREMENT . SEMICOLON

    SEMICOLON       shift and go to state 119


state 64

    (111) operadoresArimeticoId -> ID DECREMENT . SEMICOLON

    SEMICOLON       shift and go to state 120


state 65

    (112) operadoresArimeticoId -> ID PLUSEQUAL . values SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 121

state 66

    (113) operadoresArimeticoId -> ID MINUSEQUAL . values SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 122

state 67

    (114) operadoresArimeticoId -> ID MULTIPLUS . values SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 123

state 68

    (115) operadoresArimeticoId -> ID DIVIDEEQUAL . values SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 124

state 69

    (82) estructuraMap -> VARTYPE ID . EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> VARTYPE ID . EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> VARTYPE ID . EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (38) declarset -> VARTYPE ID . EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (69) asignacion -> VARTYPE ID . EQUAL values SEMICOLON

    EQUAL           shift and go to state 125


state 70

    (55) array -> arrayFunc SEMICOLON .

    STATIC          reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    DATATYPES       reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    VOID            reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    FOR             reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    MAP             reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    VARTYPE         reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    ID              reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    LIST            reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    SET             reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    IMPORT          reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    WHILE           reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    BREAK           reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    PRINT           reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    IF              reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    $end            reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    RPAREN          reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    RETURN          reduce using rule 55 (array -> arrayFunc SEMICOLON .)


state 71

    (57) array -> LIST ID . EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON

    EQUAL           shift and go to state 126


state 72

    (126) metodoListFilled -> LIST DOT . FILLED LPAREN arrayValues RPAREN SEMICOLON

    FILLED          shift and go to state 127


state 73

    (36) declarset -> SET ID . EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> SET ID . EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    EQUAL           shift and go to state 128


state 74

    (33) sentenciaIfElse -> sentenciaIf sentenciaElse .

    STATIC          reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    DATATYPES       reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    VOID            reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    FOR             reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    MAP             reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    VARTYPE         reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    ID              reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    LIST            reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    SET             reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    IMPORT          reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    WHILE           reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    BREAK           reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    PRINT           reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    IF              reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    $end            reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    CURLYBRACKETRIGHT reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    RPAREN          reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    RETURN          reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)


state 75

    (30) sentenciaElse -> ELSE . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> ELSE . sentenciaIf sentenciaElse
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 129
    IF              shift and go to state 46

    sentenciaIf                    shift and go to state 130

state 76

    (124) importsDart -> IMPORT STR . SEMICOLON

    SEMICOLON       shift and go to state 131


state 77

    (92) sentenciaWhile -> WHILE LPAREN . comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (97) comparacion -> . ID comparador values
    (98) comparacion -> . ID comparador ID
    (99) comparacion -> . ID operadoresLogicos ID
    (100) comparacion -> . BOOLEAN operadoresLogicos BOOLEAN

    ID              shift and go to state 133
    BOOLEAN         shift and go to state 134

    comparacion                    shift and go to state 132

state 78

    (96) palabraBreak -> BREAK SEMICOLON .

    STATIC          reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    DATATYPES       reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    VOID            reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    FOR             reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    MAP             reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    VARTYPE         reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    ID              reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    LIST            reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    SET             reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    IMPORT          reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    WHILE           reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    BREAK           reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    PRINT           reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    IF              reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    $end            reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    RPAREN          reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)
    RETURN          reduce using rule 96 (palabraBreak -> BREAK SEMICOLON .)


state 79

    (93) funcionPrint -> PRINT LPAREN . printValues RPAREN SEMICOLON
    (94) printValues -> . ID
    (95) printValues -> . values
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    ID              shift and go to state 136
    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    printValues                    shift and go to state 135
    values                         shift and go to state 137

state 80

    (29) sentenciaIf -> IF LPAREN . comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (97) comparacion -> . ID comparador values
    (98) comparacion -> . ID comparador ID
    (99) comparacion -> . ID operadoresLogicos ID
    (100) comparacion -> . BOOLEAN operadoresLogicos BOOLEAN

    ID              shift and go to state 133
    BOOLEAN         shift and go to state 134

    comparacion                    shift and go to state 138

state 81

    (18) funcion -> STATIC DATATYPES FUNCNAME . LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    LPAREN          shift and go to state 139


state 82

    (19) funcion -> DATATYPES FUNCNAME LPAREN . parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (23) parametrosF -> . parametro
    (24) parametrosF -> . parametro COMMA parametrosF
    (25) parametro -> . DATATYPES ID

    DATATYPES       shift and go to state 140

    parametrosF                    shift and go to state 141
    parametro                      shift and go to state 142

state 83

    (56) array -> DATATYPES ID EQUAL . SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (68) asignacion -> DATATYPES ID EQUAL . values SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    SQUAREBRACKETLEFT shift and go to state 143
    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 144

state 84

    (70) asignacion -> DATATYPES ID operadoresAsignacion . values SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 145

state 85

    (116) operadoresAsignacion -> PLUSEQUAL .

    INT             reduce using rule 116 (operadoresAsignacion -> PLUSEQUAL .)
    FLOAT           reduce using rule 116 (operadoresAsignacion -> PLUSEQUAL .)
    BOOLEAN         reduce using rule 116 (operadoresAsignacion -> PLUSEQUAL .)
    STR             reduce using rule 116 (operadoresAsignacion -> PLUSEQUAL .)


state 86

    (117) operadoresAsignacion -> MINUSEQUAL .

    INT             reduce using rule 117 (operadoresAsignacion -> MINUSEQUAL .)
    FLOAT           reduce using rule 117 (operadoresAsignacion -> MINUSEQUAL .)
    BOOLEAN         reduce using rule 117 (operadoresAsignacion -> MINUSEQUAL .)
    STR             reduce using rule 117 (operadoresAsignacion -> MINUSEQUAL .)


state 87

    (118) operadoresAsignacion -> MULTIPLUS .

    INT             reduce using rule 118 (operadoresAsignacion -> MULTIPLUS .)
    FLOAT           reduce using rule 118 (operadoresAsignacion -> MULTIPLUS .)
    BOOLEAN         reduce using rule 118 (operadoresAsignacion -> MULTIPLUS .)
    STR             reduce using rule 118 (operadoresAsignacion -> MULTIPLUS .)


state 88

    (119) operadoresAsignacion -> DIVIDEEQUAL .

    INT             reduce using rule 119 (operadoresAsignacion -> DIVIDEEQUAL .)
    FLOAT           reduce using rule 119 (operadoresAsignacion -> DIVIDEEQUAL .)
    BOOLEAN         reduce using rule 119 (operadoresAsignacion -> DIVIDEEQUAL .)
    STR             reduce using rule 119 (operadoresAsignacion -> DIVIDEEQUAL .)


state 89

    (20) funcion -> VOID FUNCNAME LPAREN . parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> VOID FUNCNAME LPAREN . RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> VOID FUNCNAME LPAREN . RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (23) parametrosF -> . parametro
    (24) parametrosF -> . parametro COMMA parametrosF
    (25) parametro -> . DATATYPES ID

    RPAREN          shift and go to state 147
    DATATYPES       shift and go to state 140

    parametrosF                    shift and go to state 146
    parametro                      shift and go to state 142

state 90

    (91) sentenciaFor -> FOR LPAREN asignacion . SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    SEMICOLON       shift and go to state 148


state 91

    (68) asignacion -> DATATYPES ID . EQUAL values SEMICOLON
    (70) asignacion -> DATATYPES ID . operadoresAsignacion values SEMICOLON
    (116) operadoresAsignacion -> . PLUSEQUAL
    (117) operadoresAsignacion -> . MINUSEQUAL
    (118) operadoresAsignacion -> . MULTIPLUS
    (119) operadoresAsignacion -> . DIVIDEEQUAL

    EQUAL           shift and go to state 149
    PLUSEQUAL       shift and go to state 85
    MINUSEQUAL      shift and go to state 86
    MULTIPLUS       shift and go to state 87
    DIVIDEEQUAL     shift and go to state 88

    operadoresAsignacion           shift and go to state 84

state 92

    (71) asignacion -> ID EQUAL . condicionesPlus SEMICOLON
    (72) asignacion -> ID EQUAL . values SEMICOLON
    (45) condicionesPlus -> . comparacion
    (46) condicionesPlus -> . comparacion operadoresLogicos condicionesPlus
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR
    (97) comparacion -> . ID comparador values
    (98) comparacion -> . ID comparador ID
    (99) comparacion -> . ID operadoresLogicos ID
    (100) comparacion -> . BOOLEAN operadoresLogicos BOOLEAN

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 104
    STR             shift and go to state 105
    ID              shift and go to state 133

    condicionesPlus                shift and go to state 98
    values                         shift and go to state 99
    comparacion                    shift and go to state 101

state 93

    (69) asignacion -> VARTYPE ID . EQUAL values SEMICOLON

    EQUAL           shift and go to state 150


state 94

    (80) estructuraMap -> MAP ID EQUAL . CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETLEFT shift and go to state 151


state 95

    (81) estructuraMap -> MAP LESS DATATYPES . COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    COMMA           shift and go to state 152


state 96

    (60) arrayInicio -> ID . DOT subArray
    (97) comparacion -> ID . comparador values
    (98) comparacion -> ID . comparador ID
    (99) comparacion -> ID . operadoresLogicos ID
    (101) comparador -> . GREATER
    (102) comparador -> . LESS
    (103) comparador -> . GREATEREQ
    (104) comparador -> . LESSEQ
    (105) comparador -> . EQUALC
    (106) comparador -> . DIFFERENT
    (107) operadoresLogicos -> . AND
    (108) operadoresLogicos -> . OR
    (109) operadoresLogicos -> . NOT

    DOT             shift and go to state 153
    GREATER         shift and go to state 156
    LESS            shift and go to state 157
    GREATEREQ       shift and go to state 158
    LESSEQ          shift and go to state 159
    EQUALC          shift and go to state 160
    DIFFERENT       shift and go to state 161
    AND             shift and go to state 162
    OR              shift and go to state 163
    NOT             shift and go to state 164

    comparador                     shift and go to state 154
    operadoresLogicos              shift and go to state 155

state 97

    (54) array -> ID EQUAL arrayInicio . SEMICOLON

    SEMICOLON       shift and go to state 165


state 98

    (71) asignacion -> ID EQUAL condicionesPlus . SEMICOLON

    SEMICOLON       shift and go to state 166


state 99

    (72) asignacion -> ID EQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 167


state 100

    (58) arrayInicio -> SQUAREBRACKETLEFT . SQUAREBRACKETRIGHT
    (59) arrayInicio -> SQUAREBRACKETLEFT . set SQUAREBRACKETRIGHT
    (34) set -> . values
    (35) set -> . values COMMA set
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    SQUAREBRACKETRIGHT shift and go to state 168
    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    set                            shift and go to state 169
    values                         shift and go to state 170

state 101

    (45) condicionesPlus -> comparacion .
    (46) condicionesPlus -> comparacion . operadoresLogicos condicionesPlus
    (107) operadoresLogicos -> . AND
    (108) operadoresLogicos -> . OR
    (109) operadoresLogicos -> . NOT

    SEMICOLON       reduce using rule 45 (condicionesPlus -> comparacion .)
    AND             shift and go to state 162
    OR              shift and go to state 163
    NOT             shift and go to state 164

    operadoresLogicos              shift and go to state 171

state 102

    (76) values -> INT .

    SEMICOLON       reduce using rule 76 (values -> INT .)
    SQUAREBRACKETRIGHT reduce using rule 76 (values -> INT .)
    SQUAREBRACKETLEFT reduce using rule 76 (values -> INT .)
    RPAREN          reduce using rule 76 (values -> INT .)
    COMMA           reduce using rule 76 (values -> INT .)
    COLON           reduce using rule 76 (values -> INT .)
    AND             reduce using rule 76 (values -> INT .)
    OR              reduce using rule 76 (values -> INT .)
    NOT             reduce using rule 76 (values -> INT .)
    CURLYBRACKETRIGHT reduce using rule 76 (values -> INT .)


state 103

    (77) values -> FLOAT .

    SEMICOLON       reduce using rule 77 (values -> FLOAT .)
    SQUAREBRACKETRIGHT reduce using rule 77 (values -> FLOAT .)
    SQUAREBRACKETLEFT reduce using rule 77 (values -> FLOAT .)
    RPAREN          reduce using rule 77 (values -> FLOAT .)
    COMMA           reduce using rule 77 (values -> FLOAT .)
    COLON           reduce using rule 77 (values -> FLOAT .)
    AND             reduce using rule 77 (values -> FLOAT .)
    OR              reduce using rule 77 (values -> FLOAT .)
    NOT             reduce using rule 77 (values -> FLOAT .)
    CURLYBRACKETRIGHT reduce using rule 77 (values -> FLOAT .)


state 104

    (78) values -> BOOLEAN .
    (100) comparacion -> BOOLEAN . operadoresLogicos BOOLEAN
    (107) operadoresLogicos -> . AND
    (108) operadoresLogicos -> . OR
    (109) operadoresLogicos -> . NOT

    SEMICOLON       reduce using rule 78 (values -> BOOLEAN .)
    AND             shift and go to state 162
    OR              shift and go to state 163
    NOT             shift and go to state 164

    operadoresLogicos              shift and go to state 172

state 105

    (79) values -> STR .

    SEMICOLON       reduce using rule 79 (values -> STR .)
    SQUAREBRACKETRIGHT reduce using rule 79 (values -> STR .)
    SQUAREBRACKETLEFT reduce using rule 79 (values -> STR .)
    RPAREN          reduce using rule 79 (values -> STR .)
    COMMA           reduce using rule 79 (values -> STR .)
    COLON           reduce using rule 79 (values -> STR .)
    AND             reduce using rule 79 (values -> STR .)
    OR              reduce using rule 79 (values -> STR .)
    NOT             reduce using rule 79 (values -> STR .)
    CURLYBRACKETRIGHT reduce using rule 79 (values -> STR .)


state 106

    (65) arrayChanges -> ID SQUAREBRACKETLEFT values . SQUAREBRACKETRIGHT EQUAL values SEMICOLON

    SQUAREBRACKETRIGHT shift and go to state 173


state 107

    (78) values -> BOOLEAN .

    SQUAREBRACKETRIGHT reduce using rule 78 (values -> BOOLEAN .)
    SQUAREBRACKETLEFT reduce using rule 78 (values -> BOOLEAN .)
    SEMICOLON       reduce using rule 78 (values -> BOOLEAN .)
    RPAREN          reduce using rule 78 (values -> BOOLEAN .)
    COMMA           reduce using rule 78 (values -> BOOLEAN .)
    COLON           reduce using rule 78 (values -> BOOLEAN .)
    AND             reduce using rule 78 (values -> BOOLEAN .)
    OR              reduce using rule 78 (values -> BOOLEAN .)
    NOT             reduce using rule 78 (values -> BOOLEAN .)
    CURLYBRACKETRIGHT reduce using rule 78 (values -> BOOLEAN .)


state 108

    (123) metodoMapAdd -> ID SQUAREBRACKETRIGHT values . SQUAREBRACKETLEFT EQUAL values SEMICOLON

    SQUAREBRACKETLEFT shift and go to state 174


state 109

    (53) foreach -> ID DOT FOREACH . LPAREN instruccionesMas RPAREN SEMICOLON

    LPAREN          shift and go to state 175


state 110

    (64) listBuscar -> ID DOT WHERE . LPAREN instruccionesMas RPAREN SEMICOLON

    LPAREN          shift and go to state 176


state 111

    (120) metodoMapClear -> ID DOT CLEAR . LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> ID DOT CLEAR . LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> ID DOT CLEAR . LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (48) setclear -> ID DOT CLEAR . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 177


state 112

    (63) arrayFunc -> ID DOT subArray .
    (67) subArray -> subArray . DOT subArray

    SEMICOLON       reduce using rule 63 (arrayFunc -> ID DOT subArray .)
    DOT             shift and go to state 178


state 113

    (47) setadd -> ID DOT ADD . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 179


state 114

    (49) setcontains -> ID DOT CONTAINS . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 180


state 115

    (50) setAddAll -> ID DOT ADDALL . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 181


state 116

    (51) setlengh -> ID DOT LENGTH . SEMICOLON

    SEMICOLON       shift and go to state 182


state 117

    (52) setremove -> ID DOT REMOVE . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 183


state 118

    (66) subArray -> SUBLIST . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 184


state 119

    (110) operadoresArimeticoId -> ID INCREMENT SEMICOLON .

    DATATYPES       reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    VARTYPE         reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    ID              reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    STATIC          reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    VOID            reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    FOR             reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    MAP             reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    LIST            reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    SET             reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    IMPORT          reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    WHILE           reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    BREAK           reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    PRINT           reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    IF              reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    $end            reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    RPAREN          reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    RETURN          reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)
    SEMICOLON       reduce using rule 110 (operadoresArimeticoId -> ID INCREMENT SEMICOLON .)


state 120

    (111) operadoresArimeticoId -> ID DECREMENT SEMICOLON .

    DATATYPES       reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    VARTYPE         reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    ID              reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    STATIC          reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    VOID            reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    FOR             reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    MAP             reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    LIST            reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    SET             reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    IMPORT          reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    WHILE           reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    BREAK           reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    PRINT           reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    IF              reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    $end            reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    RPAREN          reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    RETURN          reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)
    SEMICOLON       reduce using rule 111 (operadoresArimeticoId -> ID DECREMENT SEMICOLON .)


state 121

    (112) operadoresArimeticoId -> ID PLUSEQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 185


state 122

    (113) operadoresArimeticoId -> ID MINUSEQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 186


state 123

    (114) operadoresArimeticoId -> ID MULTIPLUS values . SEMICOLON

    SEMICOLON       shift and go to state 187


state 124

    (115) operadoresArimeticoId -> ID DIVIDEEQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 188


state 125

    (82) estructuraMap -> VARTYPE ID EQUAL . CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> VARTYPE ID EQUAL . NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> VARTYPE ID EQUAL . NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (38) declarset -> VARTYPE ID EQUAL . LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (69) asignacion -> VARTYPE ID EQUAL . values SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    CURLYBRACKETLEFT shift and go to state 189
    NEW             shift and go to state 190
    LESS            shift and go to state 191
    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 192

state 126

    (57) array -> LIST ID EQUAL . SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON

    SQUAREBRACKETLEFT shift and go to state 193


state 127

    (126) metodoListFilled -> LIST DOT FILLED . LPAREN arrayValues RPAREN SEMICOLON

    LPAREN          shift and go to state 194


state 128

    (36) declarset -> SET ID EQUAL . NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> SET ID EQUAL . CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    NEW             shift and go to state 195
    CURLYBRACKETLEFT shift and go to state 196


state 129

    (30) sentenciaElse -> ELSE CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (91) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (74) asignacionesMas -> . asignacion
    (75) asignacionesMas -> . asignacion asignacionesMas
    (80) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (85) estructuraMap -> . metodoMapClear
    (86) estructuraMap -> . metodoMapRemoveKey
    (87) estructuraMap -> . metodoMapAddAll
    (88) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (124) importsDart -> . IMPORT STR SEMICOLON
    (125) listMethods -> . metodoListFilled
    (92) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) palabraBreak -> . BREAK SEMICOLON
    (93) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> . ID EQUAL values SEMICOLON
    (73) asignacion -> . operadoresArimeticoId
    (120) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (123) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (126) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 24
    VARTYPE         shift and go to state 26
    ID              shift and go to state 25
    LIST            shift and go to state 32
    SET             shift and go to state 33
    IMPORT          shift and go to state 41
    WHILE           shift and go to state 43
    BREAK           shift and go to state 44
    PRINT           shift and go to state 45
    IF              shift and go to state 46

    instruccionesMas               shift and go to state 197
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    operadoresArimeticoId          shift and go to state 23
    metodoMapClear                 shift and go to state 27
    metodoMapRemoveKey             shift and go to state 28
    metodoMapAddAll                shift and go to state 29
    metodoMapAdd                   shift and go to state 30
    arrayFunc                      shift and go to state 31
    setadd                         shift and go to state 34
    setclear                       shift and go to state 35
    setcontains                    shift and go to state 36
    setAddAll                      shift and go to state 37
    setlengh                       shift and go to state 38
    setremove                      shift and go to state 39
    sentenciaIf                    shift and go to state 40
    metodoListFilled               shift and go to state 42

state 130

    (31) sentenciaElse -> ELSE sentenciaIf . sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse

    ELSE            shift and go to state 75

    sentenciaElse                  shift and go to state 198

state 131

    (124) importsDart -> IMPORT STR SEMICOLON .

    STATIC          reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    DATATYPES       reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    VOID            reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    FOR             reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    MAP             reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    VARTYPE         reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    ID              reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    LIST            reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    SET             reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    IMPORT          reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    WHILE           reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    BREAK           reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    PRINT           reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    IF              reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    $end            reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    RPAREN          reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)
    RETURN          reduce using rule 124 (importsDart -> IMPORT STR SEMICOLON .)


state 132

    (92) sentenciaWhile -> WHILE LPAREN comparacion . RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    RPAREN          shift and go to state 199


state 133

    (97) comparacion -> ID . comparador values
    (98) comparacion -> ID . comparador ID
    (99) comparacion -> ID . operadoresLogicos ID
    (101) comparador -> . GREATER
    (102) comparador -> . LESS
    (103) comparador -> . GREATEREQ
    (104) comparador -> . LESSEQ
    (105) comparador -> . EQUALC
    (106) comparador -> . DIFFERENT
    (107) operadoresLogicos -> . AND
    (108) operadoresLogicos -> . OR
    (109) operadoresLogicos -> . NOT

    GREATER         shift and go to state 156
    LESS            shift and go to state 157
    GREATEREQ       shift and go to state 158
    LESSEQ          shift and go to state 159
    EQUALC          shift and go to state 160
    DIFFERENT       shift and go to state 161
    AND             shift and go to state 162
    OR              shift and go to state 163
    NOT             shift and go to state 164

    comparador                     shift and go to state 154
    operadoresLogicos              shift and go to state 155

state 134

    (100) comparacion -> BOOLEAN . operadoresLogicos BOOLEAN
    (107) operadoresLogicos -> . AND
    (108) operadoresLogicos -> . OR
    (109) operadoresLogicos -> . NOT

    AND             shift and go to state 162
    OR              shift and go to state 163
    NOT             shift and go to state 164

    operadoresLogicos              shift and go to state 172

state 135

    (93) funcionPrint -> PRINT LPAREN printValues . RPAREN SEMICOLON

    RPAREN          shift and go to state 200


state 136

    (94) printValues -> ID .

    RPAREN          reduce using rule 94 (printValues -> ID .)


state 137

    (95) printValues -> values .

    RPAREN          reduce using rule 95 (printValues -> values .)


state 138

    (29) sentenciaIf -> IF LPAREN comparacion . RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    RPAREN          shift and go to state 201


state 139

    (18) funcion -> STATIC DATATYPES FUNCNAME LPAREN . parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (23) parametrosF -> . parametro
    (24) parametrosF -> . parametro COMMA parametrosF
    (25) parametro -> . DATATYPES ID

    DATATYPES       shift and go to state 140

    parametrosF                    shift and go to state 202
    parametro                      shift and go to state 142

state 140

    (25) parametro -> DATATYPES . ID

    ID              shift and go to state 203


state 141

    (19) funcion -> DATATYPES FUNCNAME LPAREN parametrosF . RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    RPAREN          shift and go to state 204


state 142

    (23) parametrosF -> parametro .
    (24) parametrosF -> parametro . COMMA parametrosF

    RPAREN          reduce using rule 23 (parametrosF -> parametro .)
    COMMA           shift and go to state 205


state 143

    (56) array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT . arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (61) arrayValues -> . values
    (62) arrayValues -> . values COMMA arrayValues
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    arrayValues                    shift and go to state 206
    values                         shift and go to state 207

state 144

    (68) asignacion -> DATATYPES ID EQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 208


state 145

    (70) asignacion -> DATATYPES ID operadoresAsignacion values . SEMICOLON

    SEMICOLON       shift and go to state 209


state 146

    (20) funcion -> VOID FUNCNAME LPAREN parametrosF . RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    RPAREN          shift and go to state 210


state 147

    (21) funcion -> VOID FUNCNAME LPAREN RPAREN . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> VOID FUNCNAME LPAREN RPAREN . CURLYBRACKETLEFT CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 211


state 148

    (91) sentenciaFor -> FOR LPAREN asignacion SEMICOLON . comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (97) comparacion -> . ID comparador values
    (98) comparacion -> . ID comparador ID
    (99) comparacion -> . ID operadoresLogicos ID
    (100) comparacion -> . BOOLEAN operadoresLogicos BOOLEAN

    ID              shift and go to state 133
    BOOLEAN         shift and go to state 134

    comparacion                    shift and go to state 212

state 149

    (68) asignacion -> DATATYPES ID EQUAL . values SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 144

state 150

    (69) asignacion -> VARTYPE ID EQUAL . values SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 192

state 151

    (80) estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT . itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (89) itemsMaps -> . values COLON values
    (90) itemsMaps -> . values COLON values COMMA itemsMaps
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    itemsMaps                      shift and go to state 213
    values                         shift and go to state 214

state 152

    (81) estructuraMap -> MAP LESS DATATYPES COMMA . DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    DATATYPES       shift and go to state 215


state 153

    (60) arrayInicio -> ID DOT . subArray
    (66) subArray -> . SUBLIST LPAREN values RPAREN SEMICOLON
    (67) subArray -> . subArray DOT subArray

    SUBLIST         shift and go to state 118

    subArray                       shift and go to state 216

state 154

    (97) comparacion -> ID comparador . values
    (98) comparacion -> ID comparador . ID
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    ID              shift and go to state 217
    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 218

state 155

    (99) comparacion -> ID operadoresLogicos . ID

    ID              shift and go to state 219


state 156

    (101) comparador -> GREATER .

    ID              reduce using rule 101 (comparador -> GREATER .)
    INT             reduce using rule 101 (comparador -> GREATER .)
    FLOAT           reduce using rule 101 (comparador -> GREATER .)
    BOOLEAN         reduce using rule 101 (comparador -> GREATER .)
    STR             reduce using rule 101 (comparador -> GREATER .)


state 157

    (102) comparador -> LESS .

    ID              reduce using rule 102 (comparador -> LESS .)
    INT             reduce using rule 102 (comparador -> LESS .)
    FLOAT           reduce using rule 102 (comparador -> LESS .)
    BOOLEAN         reduce using rule 102 (comparador -> LESS .)
    STR             reduce using rule 102 (comparador -> LESS .)


state 158

    (103) comparador -> GREATEREQ .

    ID              reduce using rule 103 (comparador -> GREATEREQ .)
    INT             reduce using rule 103 (comparador -> GREATEREQ .)
    FLOAT           reduce using rule 103 (comparador -> GREATEREQ .)
    BOOLEAN         reduce using rule 103 (comparador -> GREATEREQ .)
    STR             reduce using rule 103 (comparador -> GREATEREQ .)


state 159

    (104) comparador -> LESSEQ .

    ID              reduce using rule 104 (comparador -> LESSEQ .)
    INT             reduce using rule 104 (comparador -> LESSEQ .)
    FLOAT           reduce using rule 104 (comparador -> LESSEQ .)
    BOOLEAN         reduce using rule 104 (comparador -> LESSEQ .)
    STR             reduce using rule 104 (comparador -> LESSEQ .)


state 160

    (105) comparador -> EQUALC .

    ID              reduce using rule 105 (comparador -> EQUALC .)
    INT             reduce using rule 105 (comparador -> EQUALC .)
    FLOAT           reduce using rule 105 (comparador -> EQUALC .)
    BOOLEAN         reduce using rule 105 (comparador -> EQUALC .)
    STR             reduce using rule 105 (comparador -> EQUALC .)


state 161

    (106) comparador -> DIFFERENT .

    ID              reduce using rule 106 (comparador -> DIFFERENT .)
    INT             reduce using rule 106 (comparador -> DIFFERENT .)
    FLOAT           reduce using rule 106 (comparador -> DIFFERENT .)
    BOOLEAN         reduce using rule 106 (comparador -> DIFFERENT .)
    STR             reduce using rule 106 (comparador -> DIFFERENT .)


state 162

    (107) operadoresLogicos -> AND .

    ID              reduce using rule 107 (operadoresLogicos -> AND .)
    BOOLEAN         reduce using rule 107 (operadoresLogicos -> AND .)


state 163

    (108) operadoresLogicos -> OR .

    ID              reduce using rule 108 (operadoresLogicos -> OR .)
    BOOLEAN         reduce using rule 108 (operadoresLogicos -> OR .)


state 164

    (109) operadoresLogicos -> NOT .

    ID              reduce using rule 109 (operadoresLogicos -> NOT .)
    BOOLEAN         reduce using rule 109 (operadoresLogicos -> NOT .)


state 165

    (54) array -> ID EQUAL arrayInicio SEMICOLON .

    STATIC          reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    DATATYPES       reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    VOID            reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    FOR             reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    MAP             reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    VARTYPE         reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    ID              reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    LIST            reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    SET             reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    IMPORT          reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    WHILE           reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    BREAK           reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    PRINT           reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    IF              reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    $end            reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    RPAREN          reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    RETURN          reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)


state 166

    (71) asignacion -> ID EQUAL condicionesPlus SEMICOLON .

    DATATYPES       reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    VARTYPE         reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    ID              reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    STATIC          reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    VOID            reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    FOR             reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    MAP             reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    LIST            reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    SET             reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    IMPORT          reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    WHILE           reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    BREAK           reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    PRINT           reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    IF              reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    $end            reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    RPAREN          reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    RETURN          reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)
    SEMICOLON       reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus SEMICOLON .)


state 167

    (72) asignacion -> ID EQUAL values SEMICOLON .

    DATATYPES       reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    ID              reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    STATIC          reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    VOID            reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    FOR             reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    MAP             reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    LIST            reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    SET             reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    IMPORT          reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    WHILE           reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    BREAK           reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    PRINT           reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    IF              reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    $end            reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    RPAREN          reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    RETURN          reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)
    SEMICOLON       reduce using rule 72 (asignacion -> ID EQUAL values SEMICOLON .)


state 168

    (58) arrayInicio -> SQUAREBRACKETLEFT SQUAREBRACKETRIGHT .

    SEMICOLON       reduce using rule 58 (arrayInicio -> SQUAREBRACKETLEFT SQUAREBRACKETRIGHT .)


state 169

    (59) arrayInicio -> SQUAREBRACKETLEFT set . SQUAREBRACKETRIGHT

    SQUAREBRACKETRIGHT shift and go to state 220


state 170

    (34) set -> values .
    (35) set -> values . COMMA set

    SQUAREBRACKETRIGHT reduce using rule 34 (set -> values .)
    CURLYBRACKETRIGHT reduce using rule 34 (set -> values .)
    COMMA           shift and go to state 221


state 171

    (46) condicionesPlus -> comparacion operadoresLogicos . condicionesPlus
    (45) condicionesPlus -> . comparacion
    (46) condicionesPlus -> . comparacion operadoresLogicos condicionesPlus
    (97) comparacion -> . ID comparador values
    (98) comparacion -> . ID comparador ID
    (99) comparacion -> . ID operadoresLogicos ID
    (100) comparacion -> . BOOLEAN operadoresLogicos BOOLEAN

    ID              shift and go to state 133
    BOOLEAN         shift and go to state 134

    comparacion                    shift and go to state 101
    condicionesPlus                shift and go to state 222

state 172

    (100) comparacion -> BOOLEAN operadoresLogicos . BOOLEAN

    BOOLEAN         shift and go to state 223


state 173

    (65) arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT . EQUAL values SEMICOLON

    EQUAL           shift and go to state 224


state 174

    (123) metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT . EQUAL values SEMICOLON

    EQUAL           shift and go to state 225


state 175

    (53) foreach -> ID DOT FOREACH LPAREN . instruccionesMas RPAREN SEMICOLON
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (91) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (74) asignacionesMas -> . asignacion
    (75) asignacionesMas -> . asignacion asignacionesMas
    (80) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (85) estructuraMap -> . metodoMapClear
    (86) estructuraMap -> . metodoMapRemoveKey
    (87) estructuraMap -> . metodoMapAddAll
    (88) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (124) importsDart -> . IMPORT STR SEMICOLON
    (125) listMethods -> . metodoListFilled
    (92) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) palabraBreak -> . BREAK SEMICOLON
    (93) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> . ID EQUAL values SEMICOLON
    (73) asignacion -> . operadoresArimeticoId
    (120) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (123) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (126) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 24
    VARTYPE         shift and go to state 26
    ID              shift and go to state 25
    LIST            shift and go to state 32
    SET             shift and go to state 33
    IMPORT          shift and go to state 41
    WHILE           shift and go to state 43
    BREAK           shift and go to state 44
    PRINT           shift and go to state 45
    IF              shift and go to state 46

    instruccionesMas               shift and go to state 226
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    operadoresArimeticoId          shift and go to state 23
    metodoMapClear                 shift and go to state 27
    metodoMapRemoveKey             shift and go to state 28
    metodoMapAddAll                shift and go to state 29
    metodoMapAdd                   shift and go to state 30
    arrayFunc                      shift and go to state 31
    setadd                         shift and go to state 34
    setclear                       shift and go to state 35
    setcontains                    shift and go to state 36
    setAddAll                      shift and go to state 37
    setlengh                       shift and go to state 38
    setremove                      shift and go to state 39
    sentenciaIf                    shift and go to state 40
    metodoListFilled               shift and go to state 42

state 176

    (64) listBuscar -> ID DOT WHERE LPAREN . instruccionesMas RPAREN SEMICOLON
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (91) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (74) asignacionesMas -> . asignacion
    (75) asignacionesMas -> . asignacion asignacionesMas
    (80) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (85) estructuraMap -> . metodoMapClear
    (86) estructuraMap -> . metodoMapRemoveKey
    (87) estructuraMap -> . metodoMapAddAll
    (88) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (124) importsDart -> . IMPORT STR SEMICOLON
    (125) listMethods -> . metodoListFilled
    (92) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) palabraBreak -> . BREAK SEMICOLON
    (93) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> . ID EQUAL values SEMICOLON
    (73) asignacion -> . operadoresArimeticoId
    (120) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (123) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (126) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 24
    VARTYPE         shift and go to state 26
    ID              shift and go to state 25
    LIST            shift and go to state 32
    SET             shift and go to state 33
    IMPORT          shift and go to state 41
    WHILE           shift and go to state 43
    BREAK           shift and go to state 44
    PRINT           shift and go to state 45
    IF              shift and go to state 46

    instruccionesMas               shift and go to state 227
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    operadoresArimeticoId          shift and go to state 23
    metodoMapClear                 shift and go to state 27
    metodoMapRemoveKey             shift and go to state 28
    metodoMapAddAll                shift and go to state 29
    metodoMapAdd                   shift and go to state 30
    arrayFunc                      shift and go to state 31
    setadd                         shift and go to state 34
    setclear                       shift and go to state 35
    setcontains                    shift and go to state 36
    setAddAll                      shift and go to state 37
    setlengh                       shift and go to state 38
    setremove                      shift and go to state 39
    sentenciaIf                    shift and go to state 40
    metodoListFilled               shift and go to state 42

state 177

    (120) metodoMapClear -> ID DOT CLEAR LPAREN . RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> ID DOT CLEAR LPAREN . arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> ID DOT CLEAR LPAREN . CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (48) setclear -> ID DOT CLEAR LPAREN . values RPAREN SEMICOLON
    (61) arrayValues -> . values
    (62) arrayValues -> . values COMMA arrayValues
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    RPAREN          shift and go to state 228
    CURLYBRACKETLEFT shift and go to state 230
    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    arrayValues                    shift and go to state 229
    values                         shift and go to state 231

state 178

    (67) subArray -> subArray DOT . subArray
    (66) subArray -> . SUBLIST LPAREN values RPAREN SEMICOLON
    (67) subArray -> . subArray DOT subArray

    SUBLIST         shift and go to state 118

    subArray                       shift and go to state 232

state 179

    (47) setadd -> ID DOT ADD LPAREN . values RPAREN SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 233

state 180

    (49) setcontains -> ID DOT CONTAINS LPAREN . values RPAREN SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 234

state 181

    (50) setAddAll -> ID DOT ADDALL LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 235


state 182

    (51) setlengh -> ID DOT LENGTH SEMICOLON .

    STATIC          reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    DATATYPES       reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    VOID            reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    FOR             reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    MAP             reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    VARTYPE         reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    ID              reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    LIST            reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    SET             reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    IMPORT          reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    WHILE           reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    BREAK           reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    PRINT           reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    IF              reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    $end            reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    RPAREN          reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    RETURN          reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)


state 183

    (52) setremove -> ID DOT REMOVE LPAREN . values RPAREN SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 236

state 184

    (66) subArray -> SUBLIST LPAREN . values RPAREN SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 237

state 185

    (112) operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .

    DATATYPES       reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    ID              reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    STATIC          reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    VOID            reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    FOR             reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    MAP             reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    LIST            reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    SET             reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    IMPORT          reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    WHILE           reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    BREAK           reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    PRINT           reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    IF              reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    $end            reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    RPAREN          reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    RETURN          reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)
    SEMICOLON       reduce using rule 112 (operadoresArimeticoId -> ID PLUSEQUAL values SEMICOLON .)


state 186

    (113) operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .

    DATATYPES       reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    ID              reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    STATIC          reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    VOID            reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    FOR             reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    MAP             reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    LIST            reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    SET             reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    IMPORT          reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    WHILE           reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    BREAK           reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    PRINT           reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    IF              reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    $end            reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    RPAREN          reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    RETURN          reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)
    SEMICOLON       reduce using rule 113 (operadoresArimeticoId -> ID MINUSEQUAL values SEMICOLON .)


state 187

    (114) operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .

    DATATYPES       reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    VARTYPE         reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    ID              reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    STATIC          reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    VOID            reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    FOR             reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    MAP             reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    LIST            reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    SET             reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    IMPORT          reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    WHILE           reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    BREAK           reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    PRINT           reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    IF              reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    $end            reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    RPAREN          reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    RETURN          reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)
    SEMICOLON       reduce using rule 114 (operadoresArimeticoId -> ID MULTIPLUS values SEMICOLON .)


state 188

    (115) operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .

    DATATYPES       reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    ID              reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    STATIC          reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    VOID            reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    FOR             reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    MAP             reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    LIST            reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    SET             reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    IMPORT          reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    WHILE           reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    BREAK           reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    PRINT           reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    IF              reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    $end            reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    RPAREN          reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    RETURN          reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)
    SEMICOLON       reduce using rule 115 (operadoresArimeticoId -> ID DIVIDEEQUAL values SEMICOLON .)


state 189

    (82) estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT . itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (89) itemsMaps -> . values COLON values
    (90) itemsMaps -> . values COLON values COMMA itemsMaps
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    itemsMaps                      shift and go to state 238
    values                         shift and go to state 214

state 190

    (83) estructuraMap -> VARTYPE ID EQUAL NEW . MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> VARTYPE ID EQUAL NEW . MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON

    MAP             shift and go to state 239


state 191

    (38) declarset -> VARTYPE ID EQUAL LESS . DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    DATATYPES       shift and go to state 240


state 192

    (69) asignacion -> VARTYPE ID EQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 241


state 193

    (57) array -> LIST ID EQUAL SQUAREBRACKETLEFT . arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (61) arrayValues -> . values
    (62) arrayValues -> . values COMMA arrayValues
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    arrayValues                    shift and go to state 242
    values                         shift and go to state 207

state 194

    (126) metodoListFilled -> LIST DOT FILLED LPAREN . arrayValues RPAREN SEMICOLON
    (61) arrayValues -> . values
    (62) arrayValues -> . values COMMA arrayValues
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    arrayValues                    shift and go to state 243
    values                         shift and go to state 207

state 195

    (36) declarset -> SET ID EQUAL NEW . SET LPAREN RPAREN SEMICOLON

    SET             shift and go to state 244


state 196

    (37) declarset -> SET ID EQUAL CURLYBRACKETLEFT . set CURLYBRACKETRIGHT SEMICOLON
    (34) set -> . values
    (35) set -> . values COMMA set
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    set                            shift and go to state 245
    values                         shift and go to state 170

state 197

    (30) sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 246


state 198

    (31) sentenciaElse -> ELSE sentenciaIf sentenciaElse .

    STATIC          reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    DATATYPES       reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    VOID            reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    FOR             reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    MAP             reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    VARTYPE         reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    ID              reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    LIST            reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    SET             reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    IMPORT          reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    WHILE           reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    BREAK           reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    PRINT           reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    IF              reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    $end            reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    CURLYBRACKETRIGHT reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    RPAREN          reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    RETURN          reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)


state 199

    (92) sentenciaWhile -> WHILE LPAREN comparacion RPAREN . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 247


state 200

    (93) funcionPrint -> PRINT LPAREN printValues RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 248


state 201

    (29) sentenciaIf -> IF LPAREN comparacion RPAREN . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 249


state 202

    (18) funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF . RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    RPAREN          shift and go to state 250


state 203

    (25) parametro -> DATATYPES ID .

    COMMA           reduce using rule 25 (parametro -> DATATYPES ID .)
    RPAREN          reduce using rule 25 (parametro -> DATATYPES ID .)


state 204

    (19) funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN . CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 251


state 205

    (24) parametrosF -> parametro COMMA . parametrosF
    (23) parametrosF -> . parametro
    (24) parametrosF -> . parametro COMMA parametrosF
    (25) parametro -> . DATATYPES ID

    DATATYPES       shift and go to state 140

    parametro                      shift and go to state 142
    parametrosF                    shift and go to state 252

state 206

    (56) array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues . SQUAREBRACKETRIGHT SEMICOLON

    SQUAREBRACKETRIGHT shift and go to state 253


state 207

    (61) arrayValues -> values .
    (62) arrayValues -> values . COMMA arrayValues

    SQUAREBRACKETRIGHT reduce using rule 61 (arrayValues -> values .)
    RPAREN          reduce using rule 61 (arrayValues -> values .)
    COMMA           shift and go to state 254


state 208

    (68) asignacion -> DATATYPES ID EQUAL values SEMICOLON .

    DATATYPES       reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    ID              reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    STATIC          reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    VOID            reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    FOR             reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    MAP             reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    LIST            reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    SET             reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    IMPORT          reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    WHILE           reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    BREAK           reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    PRINT           reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    IF              reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    $end            reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    RPAREN          reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    RETURN          reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    SEMICOLON       reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)


state 209

    (70) asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .

    DATATYPES       reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    VARTYPE         reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    ID              reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    STATIC          reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    VOID            reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    FOR             reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    MAP             reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    LIST            reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    SET             reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    IMPORT          reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    WHILE           reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    BREAK           reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    PRINT           reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    IF              reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    $end            reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    RPAREN          reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    RETURN          reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    SEMICOLON       reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)


state 210

    (20) funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 255


state 211

    (21) funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT . CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (91) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (74) asignacionesMas -> . asignacion
    (75) asignacionesMas -> . asignacion asignacionesMas
    (80) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (85) estructuraMap -> . metodoMapClear
    (86) estructuraMap -> . metodoMapRemoveKey
    (87) estructuraMap -> . metodoMapAddAll
    (88) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (124) importsDart -> . IMPORT STR SEMICOLON
    (125) listMethods -> . metodoListFilled
    (92) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) palabraBreak -> . BREAK SEMICOLON
    (93) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> . ID EQUAL values SEMICOLON
    (73) asignacion -> . operadoresArimeticoId
    (120) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (123) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (126) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 257
    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 24
    VARTYPE         shift and go to state 26
    ID              shift and go to state 25
    LIST            shift and go to state 32
    SET             shift and go to state 33
    IMPORT          shift and go to state 41
    WHILE           shift and go to state 43
    BREAK           shift and go to state 44
    PRINT           shift and go to state 45
    IF              shift and go to state 46

    instruccionesMas               shift and go to state 256
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    operadoresArimeticoId          shift and go to state 23
    metodoMapClear                 shift and go to state 27
    metodoMapRemoveKey             shift and go to state 28
    metodoMapAddAll                shift and go to state 29
    metodoMapAdd                   shift and go to state 30
    arrayFunc                      shift and go to state 31
    setadd                         shift and go to state 34
    setclear                       shift and go to state 35
    setcontains                    shift and go to state 36
    setAddAll                      shift and go to state 37
    setlengh                       shift and go to state 38
    setremove                      shift and go to state 39
    sentenciaIf                    shift and go to state 40
    metodoListFilled               shift and go to state 42

state 212

    (91) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion . SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    SEMICOLON       shift and go to state 258


state 213

    (80) estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 259


state 214

    (89) itemsMaps -> values . COLON values
    (90) itemsMaps -> values . COLON values COMMA itemsMaps

    COLON           shift and go to state 260


state 215

    (81) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES . GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    GREATER         shift and go to state 261


state 216

    (60) arrayInicio -> ID DOT subArray .
    (67) subArray -> subArray . DOT subArray

    SEMICOLON       reduce using rule 60 (arrayInicio -> ID DOT subArray .)
    DOT             shift and go to state 178


state 217

    (98) comparacion -> ID comparador ID .

    AND             reduce using rule 98 (comparacion -> ID comparador ID .)
    OR              reduce using rule 98 (comparacion -> ID comparador ID .)
    NOT             reduce using rule 98 (comparacion -> ID comparador ID .)
    SEMICOLON       reduce using rule 98 (comparacion -> ID comparador ID .)
    RPAREN          reduce using rule 98 (comparacion -> ID comparador ID .)


state 218

    (97) comparacion -> ID comparador values .

    AND             reduce using rule 97 (comparacion -> ID comparador values .)
    OR              reduce using rule 97 (comparacion -> ID comparador values .)
    NOT             reduce using rule 97 (comparacion -> ID comparador values .)
    SEMICOLON       reduce using rule 97 (comparacion -> ID comparador values .)
    RPAREN          reduce using rule 97 (comparacion -> ID comparador values .)


state 219

    (99) comparacion -> ID operadoresLogicos ID .

    AND             reduce using rule 99 (comparacion -> ID operadoresLogicos ID .)
    OR              reduce using rule 99 (comparacion -> ID operadoresLogicos ID .)
    NOT             reduce using rule 99 (comparacion -> ID operadoresLogicos ID .)
    SEMICOLON       reduce using rule 99 (comparacion -> ID operadoresLogicos ID .)
    RPAREN          reduce using rule 99 (comparacion -> ID operadoresLogicos ID .)


state 220

    (59) arrayInicio -> SQUAREBRACKETLEFT set SQUAREBRACKETRIGHT .

    SEMICOLON       reduce using rule 59 (arrayInicio -> SQUAREBRACKETLEFT set SQUAREBRACKETRIGHT .)


state 221

    (35) set -> values COMMA . set
    (34) set -> . values
    (35) set -> . values COMMA set
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 170
    set                            shift and go to state 262

state 222

    (46) condicionesPlus -> comparacion operadoresLogicos condicionesPlus .

    SEMICOLON       reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)


state 223

    (100) comparacion -> BOOLEAN operadoresLogicos BOOLEAN .

    AND             reduce using rule 100 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    OR              reduce using rule 100 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    NOT             reduce using rule 100 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    SEMICOLON       reduce using rule 100 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    RPAREN          reduce using rule 100 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)


state 224

    (65) arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL . values SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 263

state 225

    (123) metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL . values SEMICOLON
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 264

state 226

    (53) foreach -> ID DOT FOREACH LPAREN instruccionesMas . RPAREN SEMICOLON

    RPAREN          shift and go to state 265


state 227

    (64) listBuscar -> ID DOT WHERE LPAREN instruccionesMas . RPAREN SEMICOLON

    RPAREN          shift and go to state 266


state 228

    (120) metodoMapClear -> ID DOT CLEAR LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 267


state 229

    (121) metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues . RPAREN SEMICOLON

    RPAREN          shift and go to state 268


state 230

    (122) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT . itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (89) itemsMaps -> . values COLON values
    (90) itemsMaps -> . values COLON values COMMA itemsMaps
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    itemsMaps                      shift and go to state 269
    values                         shift and go to state 214

state 231

    (48) setclear -> ID DOT CLEAR LPAREN values . RPAREN SEMICOLON
    (61) arrayValues -> values .
    (62) arrayValues -> values . COMMA arrayValues

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 270
    COMMA           shift and go to state 254

  ! RPAREN          [ reduce using rule 61 (arrayValues -> values .) ]


state 232

    (67) subArray -> subArray DOT subArray .
    (67) subArray -> subArray . DOT subArray

  ! shift/reduce conflict for DOT resolved as shift
    SEMICOLON       reduce using rule 67 (subArray -> subArray DOT subArray .)
    DOT             shift and go to state 178

  ! DOT             [ reduce using rule 67 (subArray -> subArray DOT subArray .) ]


state 233

    (47) setadd -> ID DOT ADD LPAREN values . RPAREN SEMICOLON

    RPAREN          shift and go to state 271


state 234

    (49) setcontains -> ID DOT CONTAINS LPAREN values . RPAREN SEMICOLON

    RPAREN          shift and go to state 272


state 235

    (50) setAddAll -> ID DOT ADDALL LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 273


state 236

    (52) setremove -> ID DOT REMOVE LPAREN values . RPAREN SEMICOLON

    RPAREN          shift and go to state 274


state 237

    (66) subArray -> SUBLIST LPAREN values . RPAREN SEMICOLON

    RPAREN          shift and go to state 275


state 238

    (82) estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 276


state 239

    (83) estructuraMap -> VARTYPE ID EQUAL NEW MAP . LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> VARTYPE ID EQUAL NEW MAP . LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 277
    LESS            shift and go to state 278


state 240

    (38) declarset -> VARTYPE ID EQUAL LESS DATATYPES . GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    GREATER         shift and go to state 279


state 241

    (69) asignacion -> VARTYPE ID EQUAL values SEMICOLON .

    DATATYPES       reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    ID              reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    STATIC          reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    VOID            reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    FOR             reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    MAP             reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    LIST            reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    SET             reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    IMPORT          reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    WHILE           reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    BREAK           reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    PRINT           reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    IF              reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    $end            reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    RPAREN          reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    RETURN          reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    SEMICOLON       reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)


state 242

    (57) array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues . SQUAREBRACKETRIGHT SEMICOLON

    SQUAREBRACKETRIGHT shift and go to state 280


state 243

    (126) metodoListFilled -> LIST DOT FILLED LPAREN arrayValues . RPAREN SEMICOLON

    RPAREN          shift and go to state 281


state 244

    (36) declarset -> SET ID EQUAL NEW SET . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 282


state 245

    (37) declarset -> SET ID EQUAL CURLYBRACKETLEFT set . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 283


state 246

    (30) sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    STATIC          reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 247

    (92) sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (91) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (74) asignacionesMas -> . asignacion
    (75) asignacionesMas -> . asignacion asignacionesMas
    (80) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (85) estructuraMap -> . metodoMapClear
    (86) estructuraMap -> . metodoMapRemoveKey
    (87) estructuraMap -> . metodoMapAddAll
    (88) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (124) importsDart -> . IMPORT STR SEMICOLON
    (125) listMethods -> . metodoListFilled
    (92) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) palabraBreak -> . BREAK SEMICOLON
    (93) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> . ID EQUAL values SEMICOLON
    (73) asignacion -> . operadoresArimeticoId
    (120) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (123) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (126) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 24
    VARTYPE         shift and go to state 26
    ID              shift and go to state 25
    LIST            shift and go to state 32
    SET             shift and go to state 33
    IMPORT          shift and go to state 41
    WHILE           shift and go to state 43
    BREAK           shift and go to state 44
    PRINT           shift and go to state 45
    IF              shift and go to state 46

    instruccionesMas               shift and go to state 284
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    operadoresArimeticoId          shift and go to state 23
    metodoMapClear                 shift and go to state 27
    metodoMapRemoveKey             shift and go to state 28
    metodoMapAddAll                shift and go to state 29
    metodoMapAdd                   shift and go to state 30
    arrayFunc                      shift and go to state 31
    setadd                         shift and go to state 34
    setclear                       shift and go to state 35
    setcontains                    shift and go to state 36
    setAddAll                      shift and go to state 37
    setlengh                       shift and go to state 38
    setremove                      shift and go to state 39
    sentenciaIf                    shift and go to state 40
    metodoListFilled               shift and go to state 42

state 248

    (93) funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .

    STATIC          reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    VOID            reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    FOR             reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    MAP             reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    ID              reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    LIST            reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    SET             reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    IMPORT          reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    WHILE           reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    BREAK           reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    PRINT           reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    IF              reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    $end            reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    RPAREN          reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    RETURN          reduce using rule 93 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)


state 249

    (29) sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (91) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (74) asignacionesMas -> . asignacion
    (75) asignacionesMas -> . asignacion asignacionesMas
    (80) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (85) estructuraMap -> . metodoMapClear
    (86) estructuraMap -> . metodoMapRemoveKey
    (87) estructuraMap -> . metodoMapAddAll
    (88) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (124) importsDart -> . IMPORT STR SEMICOLON
    (125) listMethods -> . metodoListFilled
    (92) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) palabraBreak -> . BREAK SEMICOLON
    (93) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> . ID EQUAL values SEMICOLON
    (73) asignacion -> . operadoresArimeticoId
    (120) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (123) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (126) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 24
    VARTYPE         shift and go to state 26
    ID              shift and go to state 25
    LIST            shift and go to state 32
    SET             shift and go to state 33
    IMPORT          shift and go to state 41
    WHILE           shift and go to state 43
    BREAK           shift and go to state 44
    PRINT           shift and go to state 45
    IF              shift and go to state 46

    instruccionesMas               shift and go to state 285
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    operadoresArimeticoId          shift and go to state 23
    metodoMapClear                 shift and go to state 27
    metodoMapRemoveKey             shift and go to state 28
    metodoMapAddAll                shift and go to state 29
    metodoMapAdd                   shift and go to state 30
    arrayFunc                      shift and go to state 31
    setadd                         shift and go to state 34
    setclear                       shift and go to state 35
    setcontains                    shift and go to state 36
    setAddAll                      shift and go to state 37
    setlengh                       shift and go to state 38
    setremove                      shift and go to state 39
    sentenciaIf                    shift and go to state 40
    metodoListFilled               shift and go to state 42

state 250

    (18) funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN . CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 286


state 251

    (19) funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT . instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (91) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (74) asignacionesMas -> . asignacion
    (75) asignacionesMas -> . asignacion asignacionesMas
    (80) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (85) estructuraMap -> . metodoMapClear
    (86) estructuraMap -> . metodoMapRemoveKey
    (87) estructuraMap -> . metodoMapAddAll
    (88) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (124) importsDart -> . IMPORT STR SEMICOLON
    (125) listMethods -> . metodoListFilled
    (92) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) palabraBreak -> . BREAK SEMICOLON
    (93) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> . ID EQUAL values SEMICOLON
    (73) asignacion -> . operadoresArimeticoId
    (120) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (123) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (126) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 24
    VARTYPE         shift and go to state 26
    ID              shift and go to state 25
    LIST            shift and go to state 32
    SET             shift and go to state 33
    IMPORT          shift and go to state 41
    WHILE           shift and go to state 43
    BREAK           shift and go to state 44
    PRINT           shift and go to state 45
    IF              shift and go to state 46

    instruccionesMas               shift and go to state 287
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    operadoresArimeticoId          shift and go to state 23
    metodoMapClear                 shift and go to state 27
    metodoMapRemoveKey             shift and go to state 28
    metodoMapAddAll                shift and go to state 29
    metodoMapAdd                   shift and go to state 30
    arrayFunc                      shift and go to state 31
    setadd                         shift and go to state 34
    setclear                       shift and go to state 35
    setcontains                    shift and go to state 36
    setAddAll                      shift and go to state 37
    setlengh                       shift and go to state 38
    setremove                      shift and go to state 39
    sentenciaIf                    shift and go to state 40
    metodoListFilled               shift and go to state 42

state 252

    (24) parametrosF -> parametro COMMA parametrosF .

    RPAREN          reduce using rule 24 (parametrosF -> parametro COMMA parametrosF .)


state 253

    (56) array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 288


state 254

    (62) arrayValues -> values COMMA . arrayValues
    (61) arrayValues -> . values
    (62) arrayValues -> . values COMMA arrayValues
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 207
    arrayValues                    shift and go to state 289

state 255

    (20) funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (91) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (74) asignacionesMas -> . asignacion
    (75) asignacionesMas -> . asignacion asignacionesMas
    (80) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (85) estructuraMap -> . metodoMapClear
    (86) estructuraMap -> . metodoMapRemoveKey
    (87) estructuraMap -> . metodoMapAddAll
    (88) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (124) importsDart -> . IMPORT STR SEMICOLON
    (125) listMethods -> . metodoListFilled
    (92) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) palabraBreak -> . BREAK SEMICOLON
    (93) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> . ID EQUAL values SEMICOLON
    (73) asignacion -> . operadoresArimeticoId
    (120) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (123) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (126) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 24
    VARTYPE         shift and go to state 26
    ID              shift and go to state 25
    LIST            shift and go to state 32
    SET             shift and go to state 33
    IMPORT          shift and go to state 41
    WHILE           shift and go to state 43
    BREAK           shift and go to state 44
    PRINT           shift and go to state 45
    IF              shift and go to state 46

    instruccionesMas               shift and go to state 290
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    operadoresArimeticoId          shift and go to state 23
    metodoMapClear                 shift and go to state 27
    metodoMapRemoveKey             shift and go to state 28
    metodoMapAddAll                shift and go to state 29
    metodoMapAdd                   shift and go to state 30
    arrayFunc                      shift and go to state 31
    setadd                         shift and go to state 34
    setclear                       shift and go to state 35
    setcontains                    shift and go to state 36
    setAddAll                      shift and go to state 37
    setlengh                       shift and go to state 38
    setremove                      shift and go to state 39
    sentenciaIf                    shift and go to state 40
    metodoListFilled               shift and go to state 42

state 256

    (21) funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 291


state 257

    (22) funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .

    STATIC          reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    VOID            reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    FOR             reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    MAP             reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    ID              reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    LIST            reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    SET             reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    IF              reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    $end            reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)


state 258

    (91) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON . operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

    ID              shift and go to state 293

    operadoresArimeticoId          shift and go to state 292

state 259

    (80) estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 294


state 260

    (89) itemsMaps -> values COLON . values
    (90) itemsMaps -> values COLON . values COMMA itemsMaps
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 295

state 261

    (81) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER . ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    ID              shift and go to state 296


state 262

    (35) set -> values COMMA set .

    SQUAREBRACKETRIGHT reduce using rule 35 (set -> values COMMA set .)
    CURLYBRACKETRIGHT reduce using rule 35 (set -> values COMMA set .)


state 263

    (65) arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 297


state 264

    (123) metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 298


state 265

    (53) foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 299


state 266

    (64) listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 300


state 267

    (120) metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .

    STATIC          reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    IMPORT          reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 120 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)


state 268

    (121) metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 301


state 269

    (122) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps . CURLYBRACKETRIGHT RPAREN SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 302


state 270

    (48) setclear -> ID DOT CLEAR LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 303


state 271

    (47) setadd -> ID DOT ADD LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 304


state 272

    (49) setcontains -> ID DOT CONTAINS LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 305


state 273

    (50) setAddAll -> ID DOT ADDALL LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 306


state 274

    (52) setremove -> ID DOT REMOVE LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 307


state 275

    (66) subArray -> SUBLIST LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 308


state 276

    (82) estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 309


state 277

    (83) estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 310


state 278

    (84) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS . DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON

    DATATYPES       shift and go to state 311


state 279

    (38) declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER . CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETLEFT shift and go to state 312


state 280

    (57) array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 313


state 281

    (126) metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 314


state 282

    (36) declarset -> SET ID EQUAL NEW SET LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 315


state 283

    (37) declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 316


state 284

    (92) sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 317


state 285

    (29) sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 318


state 286

    (18) funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT . instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (91) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (74) asignacionesMas -> . asignacion
    (75) asignacionesMas -> . asignacion asignacionesMas
    (80) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (85) estructuraMap -> . metodoMapClear
    (86) estructuraMap -> . metodoMapRemoveKey
    (87) estructuraMap -> . metodoMapAddAll
    (88) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (124) importsDart -> . IMPORT STR SEMICOLON
    (125) listMethods -> . metodoListFilled
    (92) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) palabraBreak -> . BREAK SEMICOLON
    (93) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> . ID EQUAL values SEMICOLON
    (73) asignacion -> . operadoresArimeticoId
    (120) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (123) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (126) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 24
    VARTYPE         shift and go to state 26
    ID              shift and go to state 25
    LIST            shift and go to state 32
    SET             shift and go to state 33
    IMPORT          shift and go to state 41
    WHILE           shift and go to state 43
    BREAK           shift and go to state 44
    PRINT           shift and go to state 45
    IF              shift and go to state 46

    instruccionesMas               shift and go to state 319
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    operadoresArimeticoId          shift and go to state 23
    metodoMapClear                 shift and go to state 27
    metodoMapRemoveKey             shift and go to state 28
    metodoMapAddAll                shift and go to state 29
    metodoMapAdd                   shift and go to state 30
    arrayFunc                      shift and go to state 31
    setadd                         shift and go to state 34
    setclear                       shift and go to state 35
    setcontains                    shift and go to state 36
    setAddAll                      shift and go to state 37
    setlengh                       shift and go to state 38
    setremove                      shift and go to state 39
    sentenciaIf                    shift and go to state 40
    metodoListFilled               shift and go to state 42

state 287

    (19) funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas . sentenciaReturn CURLYBRACKETRIGHT
    (26) sentenciaReturn -> . RETURN LPAREN retornarValues RPAREN SEMICOLON

    RETURN          shift and go to state 321

    sentenciaReturn                shift and go to state 320

state 288

    (56) array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)


state 289

    (62) arrayValues -> values COMMA arrayValues .

    SQUAREBRACKETRIGHT reduce using rule 62 (arrayValues -> values COMMA arrayValues .)
    RPAREN          reduce using rule 62 (arrayValues -> values COMMA arrayValues .)


state 290

    (20) funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 322


state 291

    (21) funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    STATIC          reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 292

    (91) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId . RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    RPAREN          shift and go to state 323


state 293

    (110) operadoresArimeticoId -> ID . INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> ID . DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> ID . PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> ID . MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> ID . MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> ID . DIVIDEEQUAL values SEMICOLON

    INCREMENT       shift and go to state 63
    DECREMENT       shift and go to state 64
    PLUSEQUAL       shift and go to state 65
    MINUSEQUAL      shift and go to state 66
    MULTIPLUS       shift and go to state 67
    DIVIDEEQUAL     shift and go to state 68


state 294

    (80) estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 80 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)


state 295

    (89) itemsMaps -> values COLON values .
    (90) itemsMaps -> values COLON values . COMMA itemsMaps

    CURLYBRACKETRIGHT reduce using rule 89 (itemsMaps -> values COLON values .)
    COMMA           shift and go to state 324


state 296

    (81) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID . EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    EQUAL           shift and go to state 325


state 297

    (65) arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .

    STATIC          reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    DATATYPES       reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    VOID            reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    FOR             reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    MAP             reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    ID              reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    LIST            reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    SET             reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    IMPORT          reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    WHILE           reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    BREAK           reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    PRINT           reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    IF              reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    $end            reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    RPAREN          reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    RETURN          reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)


state 298

    (123) metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .

    STATIC          reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    DATATYPES       reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    VOID            reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    FOR             reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    MAP             reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    ID              reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    LIST            reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    SET             reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    IMPORT          reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    WHILE           reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    BREAK           reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    PRINT           reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    IF              reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    $end            reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    RPAREN          reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    RETURN          reduce using rule 123 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)


state 299

    (53) foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .

    STATIC          reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    VOID            reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    FOR             reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    MAP             reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    ID              reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    LIST            reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    SET             reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    IMPORT          reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    WHILE           reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    BREAK           reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    PRINT           reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    IF              reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    $end            reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    RPAREN          reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    RETURN          reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)


state 300

    (64) listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .

    STATIC          reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    VOID            reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    FOR             reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    MAP             reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    ID              reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    LIST            reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    SET             reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    IMPORT          reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    WHILE           reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    BREAK           reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    PRINT           reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    IF              reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    $end            reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    RPAREN          reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    RETURN          reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)


state 301

    (121) metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .

    STATIC          reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    VOID            reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    FOR             reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    MAP             reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    ID              reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    LIST            reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    SET             reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    IMPORT          reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    WHILE           reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    BREAK           reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    PRINT           reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    IF              reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    $end            reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    RPAREN          reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    RETURN          reduce using rule 121 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)


state 302

    (122) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT . RPAREN SEMICOLON

    RPAREN          shift and go to state 326


state 303

    (48) setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .

    STATIC          reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    VOID            reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    FOR             reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    MAP             reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    ID              reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    LIST            reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    SET             reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    IMPORT          reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    WHILE           reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    BREAK           reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    PRINT           reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    IF              reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    $end            reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    RPAREN          reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    RETURN          reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)


state 304

    (47) setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .

    STATIC          reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    VOID            reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    FOR             reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    MAP             reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    ID              reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    LIST            reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    SET             reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    IMPORT          reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    WHILE           reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    BREAK           reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    PRINT           reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    IF              reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    $end            reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    RPAREN          reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    RETURN          reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)


state 305

    (49) setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .

    STATIC          reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    VOID            reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    FOR             reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    MAP             reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    ID              reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    LIST            reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    SET             reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    IMPORT          reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    WHILE           reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    BREAK           reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    PRINT           reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    IF              reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    $end            reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    RPAREN          reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    RETURN          reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)


state 306

    (50) setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .

    STATIC          reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    VOID            reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    FOR             reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    MAP             reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    ID              reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    LIST            reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    SET             reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    IMPORT          reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    BREAK           reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    $end            reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    RPAREN          reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)


state 307

    (52) setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .

    STATIC          reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    VOID            reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    FOR             reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    MAP             reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    ID              reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    LIST            reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    SET             reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    IMPORT          reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    WHILE           reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    BREAK           reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    PRINT           reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    IF              reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    $end            reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    RPAREN          reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    RETURN          reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)


state 308

    (66) subArray -> SUBLIST LPAREN values RPAREN SEMICOLON .

    DOT             reduce using rule 66 (subArray -> SUBLIST LPAREN values RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 66 (subArray -> SUBLIST LPAREN values RPAREN SEMICOLON .)


state 309

    (82) estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)


state 310

    (83) estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 327


state 311

    (84) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES . COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON

    COMMA           shift and go to state 328


state 312

    (38) declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT . set CURLYBRACKETRIGHT SEMICOLON
    (34) set -> . values
    (35) set -> . values COMMA set
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    set                            shift and go to state 329
    values                         shift and go to state 170

state 313

    (57) array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)


state 314

    (126) metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .

    STATIC          reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    VOID            reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    FOR             reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    MAP             reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    ID              reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    LIST            reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    SET             reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    IMPORT          reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    WHILE           reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    BREAK           reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    PRINT           reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    IF              reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    $end            reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    RPAREN          reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    RETURN          reduce using rule 126 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)


state 315

    (36) declarset -> SET ID EQUAL NEW SET LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 330


state 316

    (37) declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)


state 317

    (92) sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    STATIC          reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 92 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 318

    (29) sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    ELSE            reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    STATIC          reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 319

    (18) funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas . sentenciaReturn CURLYBRACKETRIGHT
    (26) sentenciaReturn -> . RETURN LPAREN retornarValues RPAREN SEMICOLON

    RETURN          shift and go to state 321

    sentenciaReturn                shift and go to state 331

state 320

    (19) funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 332


state 321

    (26) sentenciaReturn -> RETURN . LPAREN retornarValues RPAREN SEMICOLON

    LPAREN          shift and go to state 333


state 322

    (20) funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    STATIC          reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 323

    (91) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 334


state 324

    (90) itemsMaps -> values COLON values COMMA . itemsMaps
    (89) itemsMaps -> . values COLON values
    (90) itemsMaps -> . values COLON values COMMA itemsMaps
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    values                         shift and go to state 214
    itemsMaps                      shift and go to state 335

state 325

    (81) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL . CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETLEFT shift and go to state 336


state 326

    (122) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 337


state 327

    (83) estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .

    STATIC          reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    IMPORT          reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)


state 328

    (84) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA . DATATYPES GREATER LPAREN RPAREN SEMICOLON

    DATATYPES       shift and go to state 338


state 329

    (38) declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 339


state 330

    (36) declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .

    STATIC          reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    IMPORT          reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)


state 331

    (18) funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 340


state 332

    (19) funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .

    STATIC          reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    VOID            reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    FOR             reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    MAP             reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    ID              reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    LIST            reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    SET             reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    IF              reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    $end            reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)


state 333

    (26) sentenciaReturn -> RETURN LPAREN . retornarValues RPAREN SEMICOLON
    (27) retornarValues -> . values
    (28) retornarValues -> . NULL
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    NULL            shift and go to state 343
    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    retornarValues                 shift and go to state 341
    values                         shift and go to state 342

state 334

    (91) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (91) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (74) asignacionesMas -> . asignacion
    (75) asignacionesMas -> . asignacion asignacionesMas
    (80) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (85) estructuraMap -> . metodoMapClear
    (86) estructuraMap -> . metodoMapRemoveKey
    (87) estructuraMap -> . metodoMapAddAll
    (88) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (124) importsDart -> . IMPORT STR SEMICOLON
    (125) listMethods -> . metodoListFilled
    (92) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) palabraBreak -> . BREAK SEMICOLON
    (93) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus SEMICOLON
    (72) asignacion -> . ID EQUAL values SEMICOLON
    (73) asignacion -> . operadoresArimeticoId
    (120) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (121) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (122) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (123) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (126) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON
    (110) operadoresArimeticoId -> . ID INCREMENT SEMICOLON
    (111) operadoresArimeticoId -> . ID DECREMENT SEMICOLON
    (112) operadoresArimeticoId -> . ID PLUSEQUAL values SEMICOLON
    (113) operadoresArimeticoId -> . ID MINUSEQUAL values SEMICOLON
    (114) operadoresArimeticoId -> . ID MULTIPLUS values SEMICOLON
    (115) operadoresArimeticoId -> . ID DIVIDEEQUAL values SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 24
    VARTYPE         shift and go to state 26
    ID              shift and go to state 25
    LIST            shift and go to state 32
    SET             shift and go to state 33
    IMPORT          shift and go to state 41
    WHILE           shift and go to state 43
    BREAK           shift and go to state 44
    PRINT           shift and go to state 45
    IF              shift and go to state 46

    asignacion                     shift and go to state 22
    operadoresArimeticoId          shift and go to state 23
    instruccionesMas               shift and go to state 344
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    metodoMapClear                 shift and go to state 27
    metodoMapRemoveKey             shift and go to state 28
    metodoMapAddAll                shift and go to state 29
    metodoMapAdd                   shift and go to state 30
    arrayFunc                      shift and go to state 31
    setadd                         shift and go to state 34
    setclear                       shift and go to state 35
    setcontains                    shift and go to state 36
    setAddAll                      shift and go to state 37
    setlengh                       shift and go to state 38
    setremove                      shift and go to state 39
    sentenciaIf                    shift and go to state 40
    metodoListFilled               shift and go to state 42

state 335

    (90) itemsMaps -> values COLON values COMMA itemsMaps .

    CURLYBRACKETRIGHT reduce using rule 90 (itemsMaps -> values COLON values COMMA itemsMaps .)


state 336

    (81) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT . itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (89) itemsMaps -> . values COLON values
    (90) itemsMaps -> . values COLON values COMMA itemsMaps
    (76) values -> . INT
    (77) values -> . FLOAT
    (78) values -> . BOOLEAN
    (79) values -> . STR

    INT             shift and go to state 102
    FLOAT           shift and go to state 103
    BOOLEAN         shift and go to state 107
    STR             shift and go to state 105

    itemsMaps                      shift and go to state 345
    values                         shift and go to state 214

state 337

    (122) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .

    STATIC          reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    VOID            reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    FOR             reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    MAP             reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    ID              reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    LIST            reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    SET             reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    IMPORT          reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    WHILE           reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    BREAK           reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    PRINT           reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    IF              reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    $end            reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    RPAREN          reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    RETURN          reduce using rule 122 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)


state 338

    (84) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES . GREATER LPAREN RPAREN SEMICOLON

    GREATER         shift and go to state 346


state 339

    (38) declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 347


state 340

    (18) funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .

    STATIC          reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    VOID            reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    FOR             reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    MAP             reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    ID              reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    LIST            reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    SET             reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    IF              reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    $end            reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)


state 341

    (26) sentenciaReturn -> RETURN LPAREN retornarValues . RPAREN SEMICOLON

    RPAREN          shift and go to state 348


state 342

    (27) retornarValues -> values .

    RPAREN          reduce using rule 27 (retornarValues -> values .)


state 343

    (28) retornarValues -> NULL .

    RPAREN          reduce using rule 28 (retornarValues -> NULL .)


state 344

    (91) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 349


state 345

    (81) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 350


state 346

    (84) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 351


state 347

    (38) declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 38 (declarset -> VARTYPE ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)


state 348

    (26) sentenciaReturn -> RETURN LPAREN retornarValues RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 352


state 349

    (91) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    STATIC          reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 91 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 350

    (81) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 353


state 351

    (84) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 354


state 352

    (26) sentenciaReturn -> RETURN LPAREN retornarValues RPAREN SEMICOLON .

    CURLYBRACKETRIGHT reduce using rule 26 (sentenciaReturn -> RETURN LPAREN retornarValues RPAREN SEMICOLON .)


state 353

    (81) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 81 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)


state 354

    (84) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 355


state 355

    (84) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .

    STATIC          reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    IMPORT          reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 84 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DATATYPES in state 22 resolved as shift
WARNING: shift/reduce conflict for VARTYPE in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 231 resolved as shift
WARNING: shift/reduce conflict for DOT in state 232 resolved as shift
