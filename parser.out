Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AS
    ASSERT
    ASYNC
    AWAIT
    BASE
    CASE
    CATCH
    CLASS
    CONST
    CONTINUE
    COVARIANT
    DEFAULT
    DEFERRED
    DIVIDE
    DO
    DOLLAR
    DYNAMIC
    ENUM
    EXPORT
    EXTENDS
    EXTENSION
    EXTERNAL
    FACTORY
    FALSE
    FINAL
    FINALLY
    FUNCTION
    GET
    HIDE
    IMPLEMENTS
    IN
    INTERFACE
    IS
    LATE
    LIBRARY
    LISTEMPTY
    MAPEMPTY
    MAPTYPE
    MINUS
    MIXIN
    MOD
    ON
    OPERATOR
    PART
    PLUS
    QUESTIONMARK
    REQUIRED
    RETHROW
    SEALED
    SHOW
    SUPER
    SWITCH
    SYNC
    THIS
    THROW
    TIMES
    TRUE
    TRY
    TYPEDEF
    UNDERSCORE
    VAR
    WHEN
    WITH
    YIELD

Grammar

Rule 0     S' -> instruccionesMas
Rule 1     instruccionesMas -> instruccion
Rule 2     instruccionesMas -> instruccion instruccionesMas
Rule 3     instruccion -> funcion
Rule 4     instruccion -> sentenciaFor
Rule 5     instruccion -> asignacionesMas
Rule 6     instruccion -> estructuraMap
Rule 7     instruccion -> array
Rule 8     instruccion -> arrayChanges
Rule 9     instruccion -> declarset
Rule 10    instruccion -> sentenciaIfElse
Rule 11    instruccion -> foreach
Rule 12    instruccion -> listBuscar
Rule 13    instruccion -> importsDart
Rule 14    instruccion -> listMethods
Rule 15    instruccion -> sentenciaWhile
Rule 16    instruccion -> palabraBreak
Rule 17    instruccion -> funcionPrint
Rule 18    funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
Rule 19    funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
Rule 20    funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 21    funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 22    funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
Rule 23    parametrosF -> parametro
Rule 24    parametrosF -> parametro COMMA parametrosF
Rule 25    parametro -> DATATYPES ID
Rule 26    sentenciaReturn -> RETURN LPAREN retornarValues RPAREN SEMICOLON
Rule 27    retornarValues -> values
Rule 28    retornarValues -> NULL
Rule 29    sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 30    sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 31    sentenciaElse -> ELSE sentenciaIf sentenciaElse
Rule 32    sentenciaIfElse -> sentenciaIf
Rule 33    sentenciaIfElse -> sentenciaIf sentenciaElse
Rule 34    set -> values
Rule 35    set -> values COMMA set
Rule 36    declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
Rule 37    declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
Rule 38    declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
Rule 39    declarset -> setadd
Rule 40    declarset -> setclear
Rule 41    declarset -> setcontains
Rule 42    declarset -> setAddAll
Rule 43    declarset -> setlengh
Rule 44    declarset -> setremove
Rule 45    condicionesPlus -> comparacion
Rule 46    condicionesPlus -> comparacion operadoresLogicos condicionesPlus
Rule 47    setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON
Rule 48    setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON
Rule 49    setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
Rule 50    setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
Rule 51    setlengh -> ID DOT LENGTH SEMICOLON
Rule 52    setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON
Rule 53    foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
Rule 54    array -> ID EQUAL arrayInicio SEMICOLON
Rule 55    array -> arrayFunc SEMICOLON
Rule 56    array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
Rule 57    array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
Rule 58    arrayInicio -> SQUAREBRACKETLEFT SQUAREBRACKETRIGHT
Rule 59    arrayInicio -> SQUAREBRACKETLEFT set SQUAREBRACKETRIGHT
Rule 60    arrayInicio -> ID DOT subArray
Rule 61    arrayValues -> values
Rule 62    arrayValues -> values COMMA arrayValues
Rule 63    arrayFunc -> ID DOT subArray
Rule 64    listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
Rule 65    arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
Rule 66    subArray -> SUBLIST LPAREN values RPAREN SEMICOLON
Rule 67    subArray -> subArray DOT subArray
Rule 68    asignacion -> DATATYPES ID EQUAL values SEMICOLON
Rule 69    asignacion -> VARTYPE ID EQUAL values SEMICOLON
Rule 70    asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON
Rule 71    asignacion -> ID EQUAL condicionesPlus
Rule 72    asignacion -> ID EQUAL values
Rule 73    asignacionesMas -> asignacion
Rule 74    asignacionesMas -> asignacion asignacionesMas
Rule 75    values -> INT
Rule 76    values -> FLOAT
Rule 77    values -> BOOLEAN
Rule 78    values -> STR
Rule 79    estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
Rule 80    estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
Rule 81    estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
Rule 82    estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
Rule 83    estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
Rule 84    estructuraMap -> metodoMapClear
Rule 85    estructuraMap -> metodoMapRemoveKey
Rule 86    estructuraMap -> metodoMapAddAll
Rule 87    estructuraMap -> metodoMapAdd
Rule 88    itemsMaps -> values COLON values
Rule 89    itemsMaps -> values COLON values COMMA itemsMaps
Rule 90    sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 91    sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
Rule 92    funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON
Rule 93    printValues -> ID
Rule 94    printValues -> values
Rule 95    palabraBreak -> BREAK SEMICOLON
Rule 96    comparacion -> ID comparador values
Rule 97    comparacion -> ID comparador ID
Rule 98    comparacion -> ID operadoresLogicos ID
Rule 99    comparacion -> BOOLEAN operadoresLogicos BOOLEAN
Rule 100   comparador -> GREATER
Rule 101   comparador -> LESS
Rule 102   comparador -> GREATEREQ
Rule 103   comparador -> LESSEQ
Rule 104   comparador -> EQUALC
Rule 105   comparador -> DIFFERENT
Rule 106   operadoresLogicos -> AND
Rule 107   operadoresLogicos -> OR
Rule 108   operadoresLogicos -> NOT
Rule 109   operadoresArimeticoId -> ID INCREMENT
Rule 110   operadoresArimeticoId -> ID DECREMENT
Rule 111   operadoresArimeticoId -> ID PLUSEQUAL values
Rule 112   operadoresArimeticoId -> ID MINUSEQUAL values
Rule 113   operadoresArimeticoId -> ID MULTIPLUS values
Rule 114   operadoresArimeticoId -> ID DIVIDEEQUAL values
Rule 115   operadoresAsignacion -> PLUSEQUAL
Rule 116   operadoresAsignacion -> MINUSEQUAL
Rule 117   operadoresAsignacion -> MULTIPLUS
Rule 118   operadoresAsignacion -> DIVIDEEQUAL
Rule 119   metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON
Rule 120   metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
Rule 121   metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
Rule 122   metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
Rule 123   importsDart -> IMPORT STR SEMICOLON
Rule 124   listMethods -> metodoListFilled
Rule 125   metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

Terminals, with rules where they appear

ABSTRACT             : 
ADD                  : 47
ADDALL               : 50
AND                  : 106
AS                   : 
ASSERT               : 
ASYNC                : 
AWAIT                : 
BASE                 : 
BOOLEAN              : 77 99 99
BREAK                : 95
CASE                 : 
CATCH                : 
CLASS                : 
CLEAR                : 48 119 120 121
COLON                : 88 89
COMMA                : 24 35 62 80 83 89
CONST                : 
CONTAINS             : 49
CONTINUE             : 
COVARIANT            : 
CURLYBRACKETLEFT     : 18 19 20 21 22 29 30 37 38 79 80 81 90 91 121
CURLYBRACKETRIGHT    : 18 19 20 21 22 29 30 37 38 79 80 81 90 91 121
DATATYPES            : 18 19 25 38 38 56 68 70 80 80 83 83
DECREMENT            : 110
DEFAULT              : 
DEFERRED             : 
DIFFERENT            : 105
DIVIDE               : 
DIVIDEEQUAL          : 114 118
DO                   : 
DOLLAR               : 
DOT                  : 47 48 49 50 51 52 53 60 63 64 67 119 120 121 125
DYNAMIC              : 
ELSE                 : 30 31
ENUM                 : 
EQUAL                : 36 37 38 54 56 57 65 68 69 71 72 79 80 81 82 83 122
EQUALC               : 104
EXPORT               : 
EXTENDS              : 
EXTENSION            : 
EXTERNAL             : 
FACTORY              : 
FALSE                : 
FILLED               : 125
FINAL                : 
FINALLY              : 
FLOAT                : 76
FOR                  : 90
FOREACH              : 53
FUNCNAME             : 18 19 20 21 22
FUNCTION             : 
GET                  : 
GREATER              : 38 80 83 100
GREATEREQ            : 102
HIDE                 : 
ID                   : 25 36 37 38 47 48 49 50 50 51 52 53 54 56 57 60 63 64 65 68 69 70 71 72 79 80 81 82 83 93 96 97 97 98 98 109 110 111 112 113 114 119 120 121 122
IF                   : 29
IMPLEMENTS           : 
IMPORT               : 123
IN                   : 
INCREMENT            : 109
INT                  : 75
INTERFACE            : 
IS                   : 
LATE                 : 
LENGTH               : 51
LESS                 : 38 80 83 101
LESSEQ               : 103
LIBRARY              : 
LIST                 : 57 125
LISTEMPTY            : 
LPAREN               : 18 19 20 21 22 26 29 36 47 48 49 50 52 53 64 66 82 83 90 91 92 119 120 121 125
MAP                  : 79 80 82 83
MAPEMPTY             : 
MAPTYPE              : 
MINUS                : 
MINUSEQUAL           : 112 116
MIXIN                : 
MOD                  : 
MULTIPLUS            : 113 117
NEW                  : 36 82 83
NOT                  : 108
NULL                 : 28
ON                   : 
OPERATOR             : 
OR                   : 107
PART                 : 
PLUS                 : 
PLUSEQUAL            : 111 115
PRINT                : 92
QUESTIONMARK         : 
REMOVE               : 52
REQUIRED             : 
RETHROW              : 
RETURN               : 26
RPAREN               : 18 19 20 21 22 26 29 36 47 48 49 50 52 53 64 66 82 83 90 91 92 119 120 121 125
SEALED               : 
SEMICOLON            : 26 36 37 38 47 48 49 50 51 52 53 54 55 56 57 64 65 66 68 69 70 79 80 81 82 83 90 90 92 95 119 120 121 122 123 125
SET                  : 36 36 37
SHOW                 : 
SQUAREBRACKETLEFT    : 56 57 58 59 65 122
SQUAREBRACKETRIGHT   : 56 57 58 59 65 122
STATIC               : 18
STR                  : 78 123
SUBLIST              : 66
SUPER                : 
SWITCH               : 
SYNC                 : 
THIS                 : 
THROW                : 
TIMES                : 
TRUE                 : 
TRY                  : 
TYPEDEF              : 
UNDERSCORE           : 
VAR                  : 
VARTYPE              : 69 81 82 83
VOID                 : 20 21 22
WHEN                 : 
WHERE                : 64
WHILE                : 91
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

array                : 7
arrayChanges         : 8
arrayFunc            : 55
arrayInicio          : 54
arrayValues          : 56 57 62 120 125
asignacion           : 73 74 90
asignacionesMas      : 5 74
comparacion          : 29 45 46 90 91
comparador           : 96 97
condicionesPlus      : 46 71
declarset            : 9
estructuraMap        : 6
foreach              : 11
funcion              : 3
funcionPrint         : 17
importsDart          : 13
instruccion          : 1 2
instruccionesMas     : 2 18 19 20 21 29 30 53 64 90 91 0
itemsMaps            : 79 80 81 89 121
listBuscar           : 12
listMethods          : 14
metodoListFilled     : 124
metodoMapAdd         : 87
metodoMapAddAll      : 86
metodoMapClear       : 84
metodoMapRemoveKey   : 85
operadoresArimeticoId : 90
operadoresAsignacion : 70
operadoresLogicos    : 46 98 99
palabraBreak         : 16
parametro            : 23 24
parametrosF          : 18 19 20 24
printValues          : 92
retornarValues       : 26
sentenciaElse        : 31 33
sentenciaFor         : 4
sentenciaIf          : 31 32 33
sentenciaIfElse      : 10
sentenciaReturn      : 18 19
sentenciaWhile       : 15
set                  : 35 37 38 59
setAddAll            : 42
setadd               : 39
setclear             : 40
setcontains          : 41
setlengh             : 43
setremove            : 44
subArray             : 60 63 67 67
values               : 27 34 35 47 48 49 52 61 62 65 65 66 68 69 70 72 88 88 89 89 94 96 111 112 113 114 122 122

Parsing method: LALR

state 0

    (0) S' -> . instruccionesMas
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (90) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (73) asignacionesMas -> . asignacion
    (74) asignacionesMas -> . asignacion asignacionesMas
    (79) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (80) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . metodoMapClear
    (85) estructuraMap -> . metodoMapRemoveKey
    (86) estructuraMap -> . metodoMapAddAll
    (87) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (123) importsDart -> . IMPORT STR SEMICOLON
    (124) listMethods -> . metodoListFilled
    (91) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (95) palabraBreak -> . BREAK SEMICOLON
    (92) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus
    (72) asignacion -> . ID EQUAL values
    (119) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (122) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (125) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 23
    VARTYPE         shift and go to state 25
    ID              shift and go to state 24
    LIST            shift and go to state 31
    SET             shift and go to state 32
    IMPORT          shift and go to state 40
    WHILE           shift and go to state 42
    BREAK           shift and go to state 43
    PRINT           shift and go to state 44
    IF              shift and go to state 45

    instruccionesMas               shift and go to state 1
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    metodoMapClear                 shift and go to state 26
    metodoMapRemoveKey             shift and go to state 27
    metodoMapAddAll                shift and go to state 28
    metodoMapAdd                   shift and go to state 29
    arrayFunc                      shift and go to state 30
    setadd                         shift and go to state 33
    setclear                       shift and go to state 34
    setcontains                    shift and go to state 35
    setAddAll                      shift and go to state 36
    setlengh                       shift and go to state 37
    setremove                      shift and go to state 38
    sentenciaIf                    shift and go to state 39
    metodoListFilled               shift and go to state 41

state 1

    (0) S' -> instruccionesMas .



state 2

    (1) instruccionesMas -> instruccion .
    (2) instruccionesMas -> instruccion . instruccionesMas
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (90) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (73) asignacionesMas -> . asignacion
    (74) asignacionesMas -> . asignacion asignacionesMas
    (79) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (80) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . metodoMapClear
    (85) estructuraMap -> . metodoMapRemoveKey
    (86) estructuraMap -> . metodoMapAddAll
    (87) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (123) importsDart -> . IMPORT STR SEMICOLON
    (124) listMethods -> . metodoListFilled
    (91) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (95) palabraBreak -> . BREAK SEMICOLON
    (92) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus
    (72) asignacion -> . ID EQUAL values
    (119) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (122) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (125) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    $end            reduce using rule 1 (instruccionesMas -> instruccion .)
    CURLYBRACKETRIGHT reduce using rule 1 (instruccionesMas -> instruccion .)
    RPAREN          reduce using rule 1 (instruccionesMas -> instruccion .)
    RETURN          reduce using rule 1 (instruccionesMas -> instruccion .)
    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 23
    VARTYPE         shift and go to state 25
    ID              shift and go to state 24
    LIST            shift and go to state 31
    SET             shift and go to state 32
    IMPORT          shift and go to state 40
    WHILE           shift and go to state 42
    BREAK           shift and go to state 43
    PRINT           shift and go to state 44
    IF              shift and go to state 45

    instruccion                    shift and go to state 2
    instruccionesMas               shift and go to state 46
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    metodoMapClear                 shift and go to state 26
    metodoMapRemoveKey             shift and go to state 27
    metodoMapAddAll                shift and go to state 28
    metodoMapAdd                   shift and go to state 29
    arrayFunc                      shift and go to state 30
    setadd                         shift and go to state 33
    setclear                       shift and go to state 34
    setcontains                    shift and go to state 35
    setAddAll                      shift and go to state 36
    setlengh                       shift and go to state 37
    setremove                      shift and go to state 38
    sentenciaIf                    shift and go to state 39
    metodoListFilled               shift and go to state 41

state 3

    (3) instruccion -> funcion .

    STATIC          reduce using rule 3 (instruccion -> funcion .)
    DATATYPES       reduce using rule 3 (instruccion -> funcion .)
    VOID            reduce using rule 3 (instruccion -> funcion .)
    FOR             reduce using rule 3 (instruccion -> funcion .)
    MAP             reduce using rule 3 (instruccion -> funcion .)
    VARTYPE         reduce using rule 3 (instruccion -> funcion .)
    ID              reduce using rule 3 (instruccion -> funcion .)
    LIST            reduce using rule 3 (instruccion -> funcion .)
    SET             reduce using rule 3 (instruccion -> funcion .)
    IMPORT          reduce using rule 3 (instruccion -> funcion .)
    WHILE           reduce using rule 3 (instruccion -> funcion .)
    BREAK           reduce using rule 3 (instruccion -> funcion .)
    PRINT           reduce using rule 3 (instruccion -> funcion .)
    IF              reduce using rule 3 (instruccion -> funcion .)
    $end            reduce using rule 3 (instruccion -> funcion .)
    CURLYBRACKETRIGHT reduce using rule 3 (instruccion -> funcion .)
    RPAREN          reduce using rule 3 (instruccion -> funcion .)
    RETURN          reduce using rule 3 (instruccion -> funcion .)


state 4

    (4) instruccion -> sentenciaFor .

    STATIC          reduce using rule 4 (instruccion -> sentenciaFor .)
    DATATYPES       reduce using rule 4 (instruccion -> sentenciaFor .)
    VOID            reduce using rule 4 (instruccion -> sentenciaFor .)
    FOR             reduce using rule 4 (instruccion -> sentenciaFor .)
    MAP             reduce using rule 4 (instruccion -> sentenciaFor .)
    VARTYPE         reduce using rule 4 (instruccion -> sentenciaFor .)
    ID              reduce using rule 4 (instruccion -> sentenciaFor .)
    LIST            reduce using rule 4 (instruccion -> sentenciaFor .)
    SET             reduce using rule 4 (instruccion -> sentenciaFor .)
    IMPORT          reduce using rule 4 (instruccion -> sentenciaFor .)
    WHILE           reduce using rule 4 (instruccion -> sentenciaFor .)
    BREAK           reduce using rule 4 (instruccion -> sentenciaFor .)
    PRINT           reduce using rule 4 (instruccion -> sentenciaFor .)
    IF              reduce using rule 4 (instruccion -> sentenciaFor .)
    $end            reduce using rule 4 (instruccion -> sentenciaFor .)
    CURLYBRACKETRIGHT reduce using rule 4 (instruccion -> sentenciaFor .)
    RPAREN          reduce using rule 4 (instruccion -> sentenciaFor .)
    RETURN          reduce using rule 4 (instruccion -> sentenciaFor .)


state 5

    (5) instruccion -> asignacionesMas .

    STATIC          reduce using rule 5 (instruccion -> asignacionesMas .)
    DATATYPES       reduce using rule 5 (instruccion -> asignacionesMas .)
    VOID            reduce using rule 5 (instruccion -> asignacionesMas .)
    FOR             reduce using rule 5 (instruccion -> asignacionesMas .)
    MAP             reduce using rule 5 (instruccion -> asignacionesMas .)
    VARTYPE         reduce using rule 5 (instruccion -> asignacionesMas .)
    ID              reduce using rule 5 (instruccion -> asignacionesMas .)
    LIST            reduce using rule 5 (instruccion -> asignacionesMas .)
    SET             reduce using rule 5 (instruccion -> asignacionesMas .)
    IMPORT          reduce using rule 5 (instruccion -> asignacionesMas .)
    WHILE           reduce using rule 5 (instruccion -> asignacionesMas .)
    BREAK           reduce using rule 5 (instruccion -> asignacionesMas .)
    PRINT           reduce using rule 5 (instruccion -> asignacionesMas .)
    IF              reduce using rule 5 (instruccion -> asignacionesMas .)
    $end            reduce using rule 5 (instruccion -> asignacionesMas .)
    CURLYBRACKETRIGHT reduce using rule 5 (instruccion -> asignacionesMas .)
    RPAREN          reduce using rule 5 (instruccion -> asignacionesMas .)
    RETURN          reduce using rule 5 (instruccion -> asignacionesMas .)


state 6

    (6) instruccion -> estructuraMap .

    STATIC          reduce using rule 6 (instruccion -> estructuraMap .)
    DATATYPES       reduce using rule 6 (instruccion -> estructuraMap .)
    VOID            reduce using rule 6 (instruccion -> estructuraMap .)
    FOR             reduce using rule 6 (instruccion -> estructuraMap .)
    MAP             reduce using rule 6 (instruccion -> estructuraMap .)
    VARTYPE         reduce using rule 6 (instruccion -> estructuraMap .)
    ID              reduce using rule 6 (instruccion -> estructuraMap .)
    LIST            reduce using rule 6 (instruccion -> estructuraMap .)
    SET             reduce using rule 6 (instruccion -> estructuraMap .)
    IMPORT          reduce using rule 6 (instruccion -> estructuraMap .)
    WHILE           reduce using rule 6 (instruccion -> estructuraMap .)
    BREAK           reduce using rule 6 (instruccion -> estructuraMap .)
    PRINT           reduce using rule 6 (instruccion -> estructuraMap .)
    IF              reduce using rule 6 (instruccion -> estructuraMap .)
    $end            reduce using rule 6 (instruccion -> estructuraMap .)
    CURLYBRACKETRIGHT reduce using rule 6 (instruccion -> estructuraMap .)
    RPAREN          reduce using rule 6 (instruccion -> estructuraMap .)
    RETURN          reduce using rule 6 (instruccion -> estructuraMap .)


state 7

    (7) instruccion -> array .

    STATIC          reduce using rule 7 (instruccion -> array .)
    DATATYPES       reduce using rule 7 (instruccion -> array .)
    VOID            reduce using rule 7 (instruccion -> array .)
    FOR             reduce using rule 7 (instruccion -> array .)
    MAP             reduce using rule 7 (instruccion -> array .)
    VARTYPE         reduce using rule 7 (instruccion -> array .)
    ID              reduce using rule 7 (instruccion -> array .)
    LIST            reduce using rule 7 (instruccion -> array .)
    SET             reduce using rule 7 (instruccion -> array .)
    IMPORT          reduce using rule 7 (instruccion -> array .)
    WHILE           reduce using rule 7 (instruccion -> array .)
    BREAK           reduce using rule 7 (instruccion -> array .)
    PRINT           reduce using rule 7 (instruccion -> array .)
    IF              reduce using rule 7 (instruccion -> array .)
    $end            reduce using rule 7 (instruccion -> array .)
    CURLYBRACKETRIGHT reduce using rule 7 (instruccion -> array .)
    RPAREN          reduce using rule 7 (instruccion -> array .)
    RETURN          reduce using rule 7 (instruccion -> array .)


state 8

    (8) instruccion -> arrayChanges .

    STATIC          reduce using rule 8 (instruccion -> arrayChanges .)
    DATATYPES       reduce using rule 8 (instruccion -> arrayChanges .)
    VOID            reduce using rule 8 (instruccion -> arrayChanges .)
    FOR             reduce using rule 8 (instruccion -> arrayChanges .)
    MAP             reduce using rule 8 (instruccion -> arrayChanges .)
    VARTYPE         reduce using rule 8 (instruccion -> arrayChanges .)
    ID              reduce using rule 8 (instruccion -> arrayChanges .)
    LIST            reduce using rule 8 (instruccion -> arrayChanges .)
    SET             reduce using rule 8 (instruccion -> arrayChanges .)
    IMPORT          reduce using rule 8 (instruccion -> arrayChanges .)
    WHILE           reduce using rule 8 (instruccion -> arrayChanges .)
    BREAK           reduce using rule 8 (instruccion -> arrayChanges .)
    PRINT           reduce using rule 8 (instruccion -> arrayChanges .)
    IF              reduce using rule 8 (instruccion -> arrayChanges .)
    $end            reduce using rule 8 (instruccion -> arrayChanges .)
    CURLYBRACKETRIGHT reduce using rule 8 (instruccion -> arrayChanges .)
    RPAREN          reduce using rule 8 (instruccion -> arrayChanges .)
    RETURN          reduce using rule 8 (instruccion -> arrayChanges .)


state 9

    (9) instruccion -> declarset .

    STATIC          reduce using rule 9 (instruccion -> declarset .)
    DATATYPES       reduce using rule 9 (instruccion -> declarset .)
    VOID            reduce using rule 9 (instruccion -> declarset .)
    FOR             reduce using rule 9 (instruccion -> declarset .)
    MAP             reduce using rule 9 (instruccion -> declarset .)
    VARTYPE         reduce using rule 9 (instruccion -> declarset .)
    ID              reduce using rule 9 (instruccion -> declarset .)
    LIST            reduce using rule 9 (instruccion -> declarset .)
    SET             reduce using rule 9 (instruccion -> declarset .)
    IMPORT          reduce using rule 9 (instruccion -> declarset .)
    WHILE           reduce using rule 9 (instruccion -> declarset .)
    BREAK           reduce using rule 9 (instruccion -> declarset .)
    PRINT           reduce using rule 9 (instruccion -> declarset .)
    IF              reduce using rule 9 (instruccion -> declarset .)
    $end            reduce using rule 9 (instruccion -> declarset .)
    CURLYBRACKETRIGHT reduce using rule 9 (instruccion -> declarset .)
    RPAREN          reduce using rule 9 (instruccion -> declarset .)
    RETURN          reduce using rule 9 (instruccion -> declarset .)


state 10

    (10) instruccion -> sentenciaIfElse .

    STATIC          reduce using rule 10 (instruccion -> sentenciaIfElse .)
    DATATYPES       reduce using rule 10 (instruccion -> sentenciaIfElse .)
    VOID            reduce using rule 10 (instruccion -> sentenciaIfElse .)
    FOR             reduce using rule 10 (instruccion -> sentenciaIfElse .)
    MAP             reduce using rule 10 (instruccion -> sentenciaIfElse .)
    VARTYPE         reduce using rule 10 (instruccion -> sentenciaIfElse .)
    ID              reduce using rule 10 (instruccion -> sentenciaIfElse .)
    LIST            reduce using rule 10 (instruccion -> sentenciaIfElse .)
    SET             reduce using rule 10 (instruccion -> sentenciaIfElse .)
    IMPORT          reduce using rule 10 (instruccion -> sentenciaIfElse .)
    WHILE           reduce using rule 10 (instruccion -> sentenciaIfElse .)
    BREAK           reduce using rule 10 (instruccion -> sentenciaIfElse .)
    PRINT           reduce using rule 10 (instruccion -> sentenciaIfElse .)
    IF              reduce using rule 10 (instruccion -> sentenciaIfElse .)
    $end            reduce using rule 10 (instruccion -> sentenciaIfElse .)
    CURLYBRACKETRIGHT reduce using rule 10 (instruccion -> sentenciaIfElse .)
    RPAREN          reduce using rule 10 (instruccion -> sentenciaIfElse .)
    RETURN          reduce using rule 10 (instruccion -> sentenciaIfElse .)


state 11

    (11) instruccion -> foreach .

    STATIC          reduce using rule 11 (instruccion -> foreach .)
    DATATYPES       reduce using rule 11 (instruccion -> foreach .)
    VOID            reduce using rule 11 (instruccion -> foreach .)
    FOR             reduce using rule 11 (instruccion -> foreach .)
    MAP             reduce using rule 11 (instruccion -> foreach .)
    VARTYPE         reduce using rule 11 (instruccion -> foreach .)
    ID              reduce using rule 11 (instruccion -> foreach .)
    LIST            reduce using rule 11 (instruccion -> foreach .)
    SET             reduce using rule 11 (instruccion -> foreach .)
    IMPORT          reduce using rule 11 (instruccion -> foreach .)
    WHILE           reduce using rule 11 (instruccion -> foreach .)
    BREAK           reduce using rule 11 (instruccion -> foreach .)
    PRINT           reduce using rule 11 (instruccion -> foreach .)
    IF              reduce using rule 11 (instruccion -> foreach .)
    $end            reduce using rule 11 (instruccion -> foreach .)
    CURLYBRACKETRIGHT reduce using rule 11 (instruccion -> foreach .)
    RPAREN          reduce using rule 11 (instruccion -> foreach .)
    RETURN          reduce using rule 11 (instruccion -> foreach .)


state 12

    (12) instruccion -> listBuscar .

    STATIC          reduce using rule 12 (instruccion -> listBuscar .)
    DATATYPES       reduce using rule 12 (instruccion -> listBuscar .)
    VOID            reduce using rule 12 (instruccion -> listBuscar .)
    FOR             reduce using rule 12 (instruccion -> listBuscar .)
    MAP             reduce using rule 12 (instruccion -> listBuscar .)
    VARTYPE         reduce using rule 12 (instruccion -> listBuscar .)
    ID              reduce using rule 12 (instruccion -> listBuscar .)
    LIST            reduce using rule 12 (instruccion -> listBuscar .)
    SET             reduce using rule 12 (instruccion -> listBuscar .)
    IMPORT          reduce using rule 12 (instruccion -> listBuscar .)
    WHILE           reduce using rule 12 (instruccion -> listBuscar .)
    BREAK           reduce using rule 12 (instruccion -> listBuscar .)
    PRINT           reduce using rule 12 (instruccion -> listBuscar .)
    IF              reduce using rule 12 (instruccion -> listBuscar .)
    $end            reduce using rule 12 (instruccion -> listBuscar .)
    CURLYBRACKETRIGHT reduce using rule 12 (instruccion -> listBuscar .)
    RPAREN          reduce using rule 12 (instruccion -> listBuscar .)
    RETURN          reduce using rule 12 (instruccion -> listBuscar .)


state 13

    (13) instruccion -> importsDart .

    STATIC          reduce using rule 13 (instruccion -> importsDart .)
    DATATYPES       reduce using rule 13 (instruccion -> importsDart .)
    VOID            reduce using rule 13 (instruccion -> importsDart .)
    FOR             reduce using rule 13 (instruccion -> importsDart .)
    MAP             reduce using rule 13 (instruccion -> importsDart .)
    VARTYPE         reduce using rule 13 (instruccion -> importsDart .)
    ID              reduce using rule 13 (instruccion -> importsDart .)
    LIST            reduce using rule 13 (instruccion -> importsDart .)
    SET             reduce using rule 13 (instruccion -> importsDart .)
    IMPORT          reduce using rule 13 (instruccion -> importsDart .)
    WHILE           reduce using rule 13 (instruccion -> importsDart .)
    BREAK           reduce using rule 13 (instruccion -> importsDart .)
    PRINT           reduce using rule 13 (instruccion -> importsDart .)
    IF              reduce using rule 13 (instruccion -> importsDart .)
    $end            reduce using rule 13 (instruccion -> importsDart .)
    CURLYBRACKETRIGHT reduce using rule 13 (instruccion -> importsDart .)
    RPAREN          reduce using rule 13 (instruccion -> importsDart .)
    RETURN          reduce using rule 13 (instruccion -> importsDart .)


state 14

    (14) instruccion -> listMethods .

    STATIC          reduce using rule 14 (instruccion -> listMethods .)
    DATATYPES       reduce using rule 14 (instruccion -> listMethods .)
    VOID            reduce using rule 14 (instruccion -> listMethods .)
    FOR             reduce using rule 14 (instruccion -> listMethods .)
    MAP             reduce using rule 14 (instruccion -> listMethods .)
    VARTYPE         reduce using rule 14 (instruccion -> listMethods .)
    ID              reduce using rule 14 (instruccion -> listMethods .)
    LIST            reduce using rule 14 (instruccion -> listMethods .)
    SET             reduce using rule 14 (instruccion -> listMethods .)
    IMPORT          reduce using rule 14 (instruccion -> listMethods .)
    WHILE           reduce using rule 14 (instruccion -> listMethods .)
    BREAK           reduce using rule 14 (instruccion -> listMethods .)
    PRINT           reduce using rule 14 (instruccion -> listMethods .)
    IF              reduce using rule 14 (instruccion -> listMethods .)
    $end            reduce using rule 14 (instruccion -> listMethods .)
    CURLYBRACKETRIGHT reduce using rule 14 (instruccion -> listMethods .)
    RPAREN          reduce using rule 14 (instruccion -> listMethods .)
    RETURN          reduce using rule 14 (instruccion -> listMethods .)


state 15

    (15) instruccion -> sentenciaWhile .

    STATIC          reduce using rule 15 (instruccion -> sentenciaWhile .)
    DATATYPES       reduce using rule 15 (instruccion -> sentenciaWhile .)
    VOID            reduce using rule 15 (instruccion -> sentenciaWhile .)
    FOR             reduce using rule 15 (instruccion -> sentenciaWhile .)
    MAP             reduce using rule 15 (instruccion -> sentenciaWhile .)
    VARTYPE         reduce using rule 15 (instruccion -> sentenciaWhile .)
    ID              reduce using rule 15 (instruccion -> sentenciaWhile .)
    LIST            reduce using rule 15 (instruccion -> sentenciaWhile .)
    SET             reduce using rule 15 (instruccion -> sentenciaWhile .)
    IMPORT          reduce using rule 15 (instruccion -> sentenciaWhile .)
    WHILE           reduce using rule 15 (instruccion -> sentenciaWhile .)
    BREAK           reduce using rule 15 (instruccion -> sentenciaWhile .)
    PRINT           reduce using rule 15 (instruccion -> sentenciaWhile .)
    IF              reduce using rule 15 (instruccion -> sentenciaWhile .)
    $end            reduce using rule 15 (instruccion -> sentenciaWhile .)
    CURLYBRACKETRIGHT reduce using rule 15 (instruccion -> sentenciaWhile .)
    RPAREN          reduce using rule 15 (instruccion -> sentenciaWhile .)
    RETURN          reduce using rule 15 (instruccion -> sentenciaWhile .)


state 16

    (16) instruccion -> palabraBreak .

    STATIC          reduce using rule 16 (instruccion -> palabraBreak .)
    DATATYPES       reduce using rule 16 (instruccion -> palabraBreak .)
    VOID            reduce using rule 16 (instruccion -> palabraBreak .)
    FOR             reduce using rule 16 (instruccion -> palabraBreak .)
    MAP             reduce using rule 16 (instruccion -> palabraBreak .)
    VARTYPE         reduce using rule 16 (instruccion -> palabraBreak .)
    ID              reduce using rule 16 (instruccion -> palabraBreak .)
    LIST            reduce using rule 16 (instruccion -> palabraBreak .)
    SET             reduce using rule 16 (instruccion -> palabraBreak .)
    IMPORT          reduce using rule 16 (instruccion -> palabraBreak .)
    WHILE           reduce using rule 16 (instruccion -> palabraBreak .)
    BREAK           reduce using rule 16 (instruccion -> palabraBreak .)
    PRINT           reduce using rule 16 (instruccion -> palabraBreak .)
    IF              reduce using rule 16 (instruccion -> palabraBreak .)
    $end            reduce using rule 16 (instruccion -> palabraBreak .)
    CURLYBRACKETRIGHT reduce using rule 16 (instruccion -> palabraBreak .)
    RPAREN          reduce using rule 16 (instruccion -> palabraBreak .)
    RETURN          reduce using rule 16 (instruccion -> palabraBreak .)


state 17

    (17) instruccion -> funcionPrint .

    STATIC          reduce using rule 17 (instruccion -> funcionPrint .)
    DATATYPES       reduce using rule 17 (instruccion -> funcionPrint .)
    VOID            reduce using rule 17 (instruccion -> funcionPrint .)
    FOR             reduce using rule 17 (instruccion -> funcionPrint .)
    MAP             reduce using rule 17 (instruccion -> funcionPrint .)
    VARTYPE         reduce using rule 17 (instruccion -> funcionPrint .)
    ID              reduce using rule 17 (instruccion -> funcionPrint .)
    LIST            reduce using rule 17 (instruccion -> funcionPrint .)
    SET             reduce using rule 17 (instruccion -> funcionPrint .)
    IMPORT          reduce using rule 17 (instruccion -> funcionPrint .)
    WHILE           reduce using rule 17 (instruccion -> funcionPrint .)
    BREAK           reduce using rule 17 (instruccion -> funcionPrint .)
    PRINT           reduce using rule 17 (instruccion -> funcionPrint .)
    IF              reduce using rule 17 (instruccion -> funcionPrint .)
    $end            reduce using rule 17 (instruccion -> funcionPrint .)
    CURLYBRACKETRIGHT reduce using rule 17 (instruccion -> funcionPrint .)
    RPAREN          reduce using rule 17 (instruccion -> funcionPrint .)
    RETURN          reduce using rule 17 (instruccion -> funcionPrint .)


state 18

    (18) funcion -> STATIC . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    DATATYPES       shift and go to state 47


state 19

    (19) funcion -> DATATYPES . FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (56) array -> DATATYPES . ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (38) declarset -> DATATYPES . ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (68) asignacion -> DATATYPES . ID EQUAL values SEMICOLON
    (70) asignacion -> DATATYPES . ID operadoresAsignacion values SEMICOLON

    FUNCNAME        shift and go to state 48
    ID              shift and go to state 49


state 20

    (20) funcion -> VOID . FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> VOID . FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> VOID . FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT

    FUNCNAME        shift and go to state 50


state 21

    (90) sentenciaFor -> FOR . LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    LPAREN          shift and go to state 51


state 22

    (73) asignacionesMas -> asignacion .
    (74) asignacionesMas -> asignacion . asignacionesMas
    (73) asignacionesMas -> . asignacion
    (74) asignacionesMas -> . asignacion asignacionesMas
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus
    (72) asignacion -> . ID EQUAL values

  ! shift/reduce conflict for DATATYPES resolved as shift
  ! shift/reduce conflict for VARTYPE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    STATIC          reduce using rule 73 (asignacionesMas -> asignacion .)
    VOID            reduce using rule 73 (asignacionesMas -> asignacion .)
    FOR             reduce using rule 73 (asignacionesMas -> asignacion .)
    MAP             reduce using rule 73 (asignacionesMas -> asignacion .)
    LIST            reduce using rule 73 (asignacionesMas -> asignacion .)
    SET             reduce using rule 73 (asignacionesMas -> asignacion .)
    IMPORT          reduce using rule 73 (asignacionesMas -> asignacion .)
    WHILE           reduce using rule 73 (asignacionesMas -> asignacion .)
    BREAK           reduce using rule 73 (asignacionesMas -> asignacion .)
    PRINT           reduce using rule 73 (asignacionesMas -> asignacion .)
    IF              reduce using rule 73 (asignacionesMas -> asignacion .)
    $end            reduce using rule 73 (asignacionesMas -> asignacion .)
    CURLYBRACKETRIGHT reduce using rule 73 (asignacionesMas -> asignacion .)
    RPAREN          reduce using rule 73 (asignacionesMas -> asignacion .)
    RETURN          reduce using rule 73 (asignacionesMas -> asignacion .)
    DATATYPES       shift and go to state 53
    VARTYPE         shift and go to state 55
    ID              shift and go to state 54

  ! DATATYPES       [ reduce using rule 73 (asignacionesMas -> asignacion .) ]
  ! VARTYPE         [ reduce using rule 73 (asignacionesMas -> asignacion .) ]
  ! ID              [ reduce using rule 73 (asignacionesMas -> asignacion .) ]

    asignacion                     shift and go to state 22
    asignacionesMas                shift and go to state 52

state 23

    (79) estructuraMap -> MAP . ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (80) estructuraMap -> MAP . LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    ID              shift and go to state 56
    LESS            shift and go to state 57


state 24

    (54) array -> ID . EQUAL arrayInicio SEMICOLON
    (65) arrayChanges -> ID . SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (53) foreach -> ID . DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> ID . DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (71) asignacion -> ID . EQUAL condicionesPlus
    (72) asignacion -> ID . EQUAL values
    (119) metodoMapClear -> ID . DOT CLEAR LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> ID . DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> ID . DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (122) metodoMapAdd -> ID . SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> ID . DOT subArray
    (47) setadd -> ID . DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> ID . DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> ID . DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> ID . DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> ID . DOT LENGTH SEMICOLON
    (52) setremove -> ID . DOT REMOVE LPAREN values RPAREN SEMICOLON

    EQUAL           shift and go to state 58
    SQUAREBRACKETLEFT shift and go to state 59
    DOT             shift and go to state 61
    SQUAREBRACKETRIGHT shift and go to state 60


state 25

    (81) estructuraMap -> VARTYPE . ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> VARTYPE . ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> VARTYPE . ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (69) asignacion -> VARTYPE . ID EQUAL values SEMICOLON

    ID              shift and go to state 62


state 26

    (84) estructuraMap -> metodoMapClear .

    STATIC          reduce using rule 84 (estructuraMap -> metodoMapClear .)
    DATATYPES       reduce using rule 84 (estructuraMap -> metodoMapClear .)
    VOID            reduce using rule 84 (estructuraMap -> metodoMapClear .)
    FOR             reduce using rule 84 (estructuraMap -> metodoMapClear .)
    MAP             reduce using rule 84 (estructuraMap -> metodoMapClear .)
    VARTYPE         reduce using rule 84 (estructuraMap -> metodoMapClear .)
    ID              reduce using rule 84 (estructuraMap -> metodoMapClear .)
    LIST            reduce using rule 84 (estructuraMap -> metodoMapClear .)
    SET             reduce using rule 84 (estructuraMap -> metodoMapClear .)
    IMPORT          reduce using rule 84 (estructuraMap -> metodoMapClear .)
    WHILE           reduce using rule 84 (estructuraMap -> metodoMapClear .)
    BREAK           reduce using rule 84 (estructuraMap -> metodoMapClear .)
    PRINT           reduce using rule 84 (estructuraMap -> metodoMapClear .)
    IF              reduce using rule 84 (estructuraMap -> metodoMapClear .)
    $end            reduce using rule 84 (estructuraMap -> metodoMapClear .)
    CURLYBRACKETRIGHT reduce using rule 84 (estructuraMap -> metodoMapClear .)
    RPAREN          reduce using rule 84 (estructuraMap -> metodoMapClear .)
    RETURN          reduce using rule 84 (estructuraMap -> metodoMapClear .)


state 27

    (85) estructuraMap -> metodoMapRemoveKey .

    STATIC          reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    DATATYPES       reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    VOID            reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    FOR             reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    MAP             reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    VARTYPE         reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    ID              reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    LIST            reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    SET             reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    IMPORT          reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    WHILE           reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    BREAK           reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    PRINT           reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    IF              reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    $end            reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    CURLYBRACKETRIGHT reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    RPAREN          reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)
    RETURN          reduce using rule 85 (estructuraMap -> metodoMapRemoveKey .)


state 28

    (86) estructuraMap -> metodoMapAddAll .

    STATIC          reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    DATATYPES       reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    VOID            reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    FOR             reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    MAP             reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    VARTYPE         reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    ID              reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    LIST            reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    SET             reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    IMPORT          reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    WHILE           reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    BREAK           reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    PRINT           reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    IF              reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    $end            reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    CURLYBRACKETRIGHT reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    RPAREN          reduce using rule 86 (estructuraMap -> metodoMapAddAll .)
    RETURN          reduce using rule 86 (estructuraMap -> metodoMapAddAll .)


state 29

    (87) estructuraMap -> metodoMapAdd .

    STATIC          reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    DATATYPES       reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    VOID            reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    FOR             reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    MAP             reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    VARTYPE         reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    ID              reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    LIST            reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    SET             reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    IMPORT          reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    WHILE           reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    BREAK           reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    PRINT           reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    IF              reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    $end            reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    CURLYBRACKETRIGHT reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    RPAREN          reduce using rule 87 (estructuraMap -> metodoMapAdd .)
    RETURN          reduce using rule 87 (estructuraMap -> metodoMapAdd .)


state 30

    (55) array -> arrayFunc . SEMICOLON

    SEMICOLON       shift and go to state 63


state 31

    (57) array -> LIST . ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (125) metodoListFilled -> LIST . DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    ID              shift and go to state 64
    DOT             shift and go to state 65


state 32

    (36) declarset -> SET . ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> SET . ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    ID              shift and go to state 66


state 33

    (39) declarset -> setadd .

    STATIC          reduce using rule 39 (declarset -> setadd .)
    DATATYPES       reduce using rule 39 (declarset -> setadd .)
    VOID            reduce using rule 39 (declarset -> setadd .)
    FOR             reduce using rule 39 (declarset -> setadd .)
    MAP             reduce using rule 39 (declarset -> setadd .)
    VARTYPE         reduce using rule 39 (declarset -> setadd .)
    ID              reduce using rule 39 (declarset -> setadd .)
    LIST            reduce using rule 39 (declarset -> setadd .)
    SET             reduce using rule 39 (declarset -> setadd .)
    IMPORT          reduce using rule 39 (declarset -> setadd .)
    WHILE           reduce using rule 39 (declarset -> setadd .)
    BREAK           reduce using rule 39 (declarset -> setadd .)
    PRINT           reduce using rule 39 (declarset -> setadd .)
    IF              reduce using rule 39 (declarset -> setadd .)
    $end            reduce using rule 39 (declarset -> setadd .)
    CURLYBRACKETRIGHT reduce using rule 39 (declarset -> setadd .)
    RPAREN          reduce using rule 39 (declarset -> setadd .)
    RETURN          reduce using rule 39 (declarset -> setadd .)


state 34

    (40) declarset -> setclear .

    STATIC          reduce using rule 40 (declarset -> setclear .)
    DATATYPES       reduce using rule 40 (declarset -> setclear .)
    VOID            reduce using rule 40 (declarset -> setclear .)
    FOR             reduce using rule 40 (declarset -> setclear .)
    MAP             reduce using rule 40 (declarset -> setclear .)
    VARTYPE         reduce using rule 40 (declarset -> setclear .)
    ID              reduce using rule 40 (declarset -> setclear .)
    LIST            reduce using rule 40 (declarset -> setclear .)
    SET             reduce using rule 40 (declarset -> setclear .)
    IMPORT          reduce using rule 40 (declarset -> setclear .)
    WHILE           reduce using rule 40 (declarset -> setclear .)
    BREAK           reduce using rule 40 (declarset -> setclear .)
    PRINT           reduce using rule 40 (declarset -> setclear .)
    IF              reduce using rule 40 (declarset -> setclear .)
    $end            reduce using rule 40 (declarset -> setclear .)
    CURLYBRACKETRIGHT reduce using rule 40 (declarset -> setclear .)
    RPAREN          reduce using rule 40 (declarset -> setclear .)
    RETURN          reduce using rule 40 (declarset -> setclear .)


state 35

    (41) declarset -> setcontains .

    STATIC          reduce using rule 41 (declarset -> setcontains .)
    DATATYPES       reduce using rule 41 (declarset -> setcontains .)
    VOID            reduce using rule 41 (declarset -> setcontains .)
    FOR             reduce using rule 41 (declarset -> setcontains .)
    MAP             reduce using rule 41 (declarset -> setcontains .)
    VARTYPE         reduce using rule 41 (declarset -> setcontains .)
    ID              reduce using rule 41 (declarset -> setcontains .)
    LIST            reduce using rule 41 (declarset -> setcontains .)
    SET             reduce using rule 41 (declarset -> setcontains .)
    IMPORT          reduce using rule 41 (declarset -> setcontains .)
    WHILE           reduce using rule 41 (declarset -> setcontains .)
    BREAK           reduce using rule 41 (declarset -> setcontains .)
    PRINT           reduce using rule 41 (declarset -> setcontains .)
    IF              reduce using rule 41 (declarset -> setcontains .)
    $end            reduce using rule 41 (declarset -> setcontains .)
    CURLYBRACKETRIGHT reduce using rule 41 (declarset -> setcontains .)
    RPAREN          reduce using rule 41 (declarset -> setcontains .)
    RETURN          reduce using rule 41 (declarset -> setcontains .)


state 36

    (42) declarset -> setAddAll .

    STATIC          reduce using rule 42 (declarset -> setAddAll .)
    DATATYPES       reduce using rule 42 (declarset -> setAddAll .)
    VOID            reduce using rule 42 (declarset -> setAddAll .)
    FOR             reduce using rule 42 (declarset -> setAddAll .)
    MAP             reduce using rule 42 (declarset -> setAddAll .)
    VARTYPE         reduce using rule 42 (declarset -> setAddAll .)
    ID              reduce using rule 42 (declarset -> setAddAll .)
    LIST            reduce using rule 42 (declarset -> setAddAll .)
    SET             reduce using rule 42 (declarset -> setAddAll .)
    IMPORT          reduce using rule 42 (declarset -> setAddAll .)
    WHILE           reduce using rule 42 (declarset -> setAddAll .)
    BREAK           reduce using rule 42 (declarset -> setAddAll .)
    PRINT           reduce using rule 42 (declarset -> setAddAll .)
    IF              reduce using rule 42 (declarset -> setAddAll .)
    $end            reduce using rule 42 (declarset -> setAddAll .)
    CURLYBRACKETRIGHT reduce using rule 42 (declarset -> setAddAll .)
    RPAREN          reduce using rule 42 (declarset -> setAddAll .)
    RETURN          reduce using rule 42 (declarset -> setAddAll .)


state 37

    (43) declarset -> setlengh .

    STATIC          reduce using rule 43 (declarset -> setlengh .)
    DATATYPES       reduce using rule 43 (declarset -> setlengh .)
    VOID            reduce using rule 43 (declarset -> setlengh .)
    FOR             reduce using rule 43 (declarset -> setlengh .)
    MAP             reduce using rule 43 (declarset -> setlengh .)
    VARTYPE         reduce using rule 43 (declarset -> setlengh .)
    ID              reduce using rule 43 (declarset -> setlengh .)
    LIST            reduce using rule 43 (declarset -> setlengh .)
    SET             reduce using rule 43 (declarset -> setlengh .)
    IMPORT          reduce using rule 43 (declarset -> setlengh .)
    WHILE           reduce using rule 43 (declarset -> setlengh .)
    BREAK           reduce using rule 43 (declarset -> setlengh .)
    PRINT           reduce using rule 43 (declarset -> setlengh .)
    IF              reduce using rule 43 (declarset -> setlengh .)
    $end            reduce using rule 43 (declarset -> setlengh .)
    CURLYBRACKETRIGHT reduce using rule 43 (declarset -> setlengh .)
    RPAREN          reduce using rule 43 (declarset -> setlengh .)
    RETURN          reduce using rule 43 (declarset -> setlengh .)


state 38

    (44) declarset -> setremove .

    STATIC          reduce using rule 44 (declarset -> setremove .)
    DATATYPES       reduce using rule 44 (declarset -> setremove .)
    VOID            reduce using rule 44 (declarset -> setremove .)
    FOR             reduce using rule 44 (declarset -> setremove .)
    MAP             reduce using rule 44 (declarset -> setremove .)
    VARTYPE         reduce using rule 44 (declarset -> setremove .)
    ID              reduce using rule 44 (declarset -> setremove .)
    LIST            reduce using rule 44 (declarset -> setremove .)
    SET             reduce using rule 44 (declarset -> setremove .)
    IMPORT          reduce using rule 44 (declarset -> setremove .)
    WHILE           reduce using rule 44 (declarset -> setremove .)
    BREAK           reduce using rule 44 (declarset -> setremove .)
    PRINT           reduce using rule 44 (declarset -> setremove .)
    IF              reduce using rule 44 (declarset -> setremove .)
    $end            reduce using rule 44 (declarset -> setremove .)
    CURLYBRACKETRIGHT reduce using rule 44 (declarset -> setremove .)
    RPAREN          reduce using rule 44 (declarset -> setremove .)
    RETURN          reduce using rule 44 (declarset -> setremove .)


state 39

    (32) sentenciaIfElse -> sentenciaIf .
    (33) sentenciaIfElse -> sentenciaIf . sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse

    STATIC          reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    DATATYPES       reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    VOID            reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    FOR             reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    MAP             reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    VARTYPE         reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    ID              reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    LIST            reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    SET             reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    IMPORT          reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    WHILE           reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    BREAK           reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    PRINT           reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    IF              reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    $end            reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    CURLYBRACKETRIGHT reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    RPAREN          reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    RETURN          reduce using rule 32 (sentenciaIfElse -> sentenciaIf .)
    ELSE            shift and go to state 68

    sentenciaElse                  shift and go to state 67

state 40

    (123) importsDart -> IMPORT . STR SEMICOLON

    STR             shift and go to state 69


state 41

    (124) listMethods -> metodoListFilled .

    STATIC          reduce using rule 124 (listMethods -> metodoListFilled .)
    DATATYPES       reduce using rule 124 (listMethods -> metodoListFilled .)
    VOID            reduce using rule 124 (listMethods -> metodoListFilled .)
    FOR             reduce using rule 124 (listMethods -> metodoListFilled .)
    MAP             reduce using rule 124 (listMethods -> metodoListFilled .)
    VARTYPE         reduce using rule 124 (listMethods -> metodoListFilled .)
    ID              reduce using rule 124 (listMethods -> metodoListFilled .)
    LIST            reduce using rule 124 (listMethods -> metodoListFilled .)
    SET             reduce using rule 124 (listMethods -> metodoListFilled .)
    IMPORT          reduce using rule 124 (listMethods -> metodoListFilled .)
    WHILE           reduce using rule 124 (listMethods -> metodoListFilled .)
    BREAK           reduce using rule 124 (listMethods -> metodoListFilled .)
    PRINT           reduce using rule 124 (listMethods -> metodoListFilled .)
    IF              reduce using rule 124 (listMethods -> metodoListFilled .)
    $end            reduce using rule 124 (listMethods -> metodoListFilled .)
    CURLYBRACKETRIGHT reduce using rule 124 (listMethods -> metodoListFilled .)
    RPAREN          reduce using rule 124 (listMethods -> metodoListFilled .)
    RETURN          reduce using rule 124 (listMethods -> metodoListFilled .)


state 42

    (91) sentenciaWhile -> WHILE . LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    LPAREN          shift and go to state 70


state 43

    (95) palabraBreak -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 71


state 44

    (92) funcionPrint -> PRINT . LPAREN printValues RPAREN SEMICOLON

    LPAREN          shift and go to state 72


state 45

    (29) sentenciaIf -> IF . LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    LPAREN          shift and go to state 73


state 46

    (2) instruccionesMas -> instruccion instruccionesMas .

    $end            reduce using rule 2 (instruccionesMas -> instruccion instruccionesMas .)
    CURLYBRACKETRIGHT reduce using rule 2 (instruccionesMas -> instruccion instruccionesMas .)
    RPAREN          reduce using rule 2 (instruccionesMas -> instruccion instruccionesMas .)
    RETURN          reduce using rule 2 (instruccionesMas -> instruccion instruccionesMas .)


state 47

    (18) funcion -> STATIC DATATYPES . FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    FUNCNAME        shift and go to state 74


state 48

    (19) funcion -> DATATYPES FUNCNAME . LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    LPAREN          shift and go to state 75


state 49

    (56) array -> DATATYPES ID . EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (38) declarset -> DATATYPES ID . EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (68) asignacion -> DATATYPES ID . EQUAL values SEMICOLON
    (70) asignacion -> DATATYPES ID . operadoresAsignacion values SEMICOLON
    (115) operadoresAsignacion -> . PLUSEQUAL
    (116) operadoresAsignacion -> . MINUSEQUAL
    (117) operadoresAsignacion -> . MULTIPLUS
    (118) operadoresAsignacion -> . DIVIDEEQUAL

    EQUAL           shift and go to state 76
    PLUSEQUAL       shift and go to state 78
    MINUSEQUAL      shift and go to state 79
    MULTIPLUS       shift and go to state 80
    DIVIDEEQUAL     shift and go to state 81

    operadoresAsignacion           shift and go to state 77

state 50

    (20) funcion -> VOID FUNCNAME . LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> VOID FUNCNAME . LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> VOID FUNCNAME . LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT

    LPAREN          shift and go to state 82


state 51

    (90) sentenciaFor -> FOR LPAREN . asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus
    (72) asignacion -> . ID EQUAL values

    DATATYPES       shift and go to state 53
    VARTYPE         shift and go to state 55
    ID              shift and go to state 54

    asignacion                     shift and go to state 83

state 52

    (74) asignacionesMas -> asignacion asignacionesMas .

    STATIC          reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    DATATYPES       reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    VOID            reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    FOR             reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    MAP             reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    VARTYPE         reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    ID              reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    LIST            reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    SET             reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    IMPORT          reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    WHILE           reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    BREAK           reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    PRINT           reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    IF              reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    $end            reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    CURLYBRACKETRIGHT reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    RPAREN          reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)
    RETURN          reduce using rule 74 (asignacionesMas -> asignacion asignacionesMas .)


state 53

    (68) asignacion -> DATATYPES . ID EQUAL values SEMICOLON
    (70) asignacion -> DATATYPES . ID operadoresAsignacion values SEMICOLON

    ID              shift and go to state 84


state 54

    (71) asignacion -> ID . EQUAL condicionesPlus
    (72) asignacion -> ID . EQUAL values

    EQUAL           shift and go to state 85


state 55

    (69) asignacion -> VARTYPE . ID EQUAL values SEMICOLON

    ID              shift and go to state 86


state 56

    (79) estructuraMap -> MAP ID . EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    EQUAL           shift and go to state 87


state 57

    (80) estructuraMap -> MAP LESS . DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    DATATYPES       shift and go to state 88


state 58

    (54) array -> ID EQUAL . arrayInicio SEMICOLON
    (71) asignacion -> ID EQUAL . condicionesPlus
    (72) asignacion -> ID EQUAL . values
    (58) arrayInicio -> . SQUAREBRACKETLEFT SQUAREBRACKETRIGHT
    (59) arrayInicio -> . SQUAREBRACKETLEFT set SQUAREBRACKETRIGHT
    (60) arrayInicio -> . ID DOT subArray
    (45) condicionesPlus -> . comparacion
    (46) condicionesPlus -> . comparacion operadoresLogicos condicionesPlus
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR
    (96) comparacion -> . ID comparador values
    (97) comparacion -> . ID comparador ID
    (98) comparacion -> . ID operadoresLogicos ID
    (99) comparacion -> . BOOLEAN operadoresLogicos BOOLEAN

    SQUAREBRACKETLEFT shift and go to state 93
    ID              shift and go to state 89
    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 97
    STR             shift and go to state 98

    arrayInicio                    shift and go to state 90
    condicionesPlus                shift and go to state 91
    values                         shift and go to state 92
    comparacion                    shift and go to state 94

state 59

    (65) arrayChanges -> ID SQUAREBRACKETLEFT . values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 99

state 60

    (122) metodoMapAdd -> ID SQUAREBRACKETRIGHT . values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 101

state 61

    (53) foreach -> ID DOT . FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> ID DOT . WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (119) metodoMapClear -> ID DOT . CLEAR LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> ID DOT . CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> ID DOT . CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (63) arrayFunc -> ID DOT . subArray
    (47) setadd -> ID DOT . ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> ID DOT . CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> ID DOT . CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> ID DOT . ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> ID DOT . LENGTH SEMICOLON
    (52) setremove -> ID DOT . REMOVE LPAREN values RPAREN SEMICOLON
    (66) subArray -> . SUBLIST LPAREN values RPAREN SEMICOLON
    (67) subArray -> . subArray DOT subArray

    FOREACH         shift and go to state 102
    WHERE           shift and go to state 103
    CLEAR           shift and go to state 104
    ADD             shift and go to state 106
    CONTAINS        shift and go to state 107
    ADDALL          shift and go to state 108
    LENGTH          shift and go to state 109
    REMOVE          shift and go to state 110
    SUBLIST         shift and go to state 111

    subArray                       shift and go to state 105

state 62

    (81) estructuraMap -> VARTYPE ID . EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> VARTYPE ID . EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> VARTYPE ID . EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (69) asignacion -> VARTYPE ID . EQUAL values SEMICOLON

    EQUAL           shift and go to state 112


state 63

    (55) array -> arrayFunc SEMICOLON .

    STATIC          reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    DATATYPES       reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    VOID            reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    FOR             reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    MAP             reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    VARTYPE         reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    ID              reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    LIST            reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    SET             reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    IMPORT          reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    WHILE           reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    BREAK           reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    PRINT           reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    IF              reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    $end            reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    RPAREN          reduce using rule 55 (array -> arrayFunc SEMICOLON .)
    RETURN          reduce using rule 55 (array -> arrayFunc SEMICOLON .)


state 64

    (57) array -> LIST ID . EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON

    EQUAL           shift and go to state 113


state 65

    (125) metodoListFilled -> LIST DOT . FILLED LPAREN arrayValues RPAREN SEMICOLON

    FILLED          shift and go to state 114


state 66

    (36) declarset -> SET ID . EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> SET ID . EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    EQUAL           shift and go to state 115


state 67

    (33) sentenciaIfElse -> sentenciaIf sentenciaElse .

    STATIC          reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    DATATYPES       reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    VOID            reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    FOR             reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    MAP             reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    VARTYPE         reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    ID              reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    LIST            reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    SET             reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    IMPORT          reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    WHILE           reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    BREAK           reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    PRINT           reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    IF              reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    $end            reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    CURLYBRACKETRIGHT reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    RPAREN          reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)
    RETURN          reduce using rule 33 (sentenciaIfElse -> sentenciaIf sentenciaElse .)


state 68

    (30) sentenciaElse -> ELSE . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> ELSE . sentenciaIf sentenciaElse
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 116
    IF              shift and go to state 45

    sentenciaIf                    shift and go to state 117

state 69

    (123) importsDart -> IMPORT STR . SEMICOLON

    SEMICOLON       shift and go to state 118


state 70

    (91) sentenciaWhile -> WHILE LPAREN . comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) comparacion -> . ID comparador values
    (97) comparacion -> . ID comparador ID
    (98) comparacion -> . ID operadoresLogicos ID
    (99) comparacion -> . BOOLEAN operadoresLogicos BOOLEAN

    ID              shift and go to state 120
    BOOLEAN         shift and go to state 121

    comparacion                    shift and go to state 119

state 71

    (95) palabraBreak -> BREAK SEMICOLON .

    STATIC          reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    DATATYPES       reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    VOID            reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    FOR             reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    MAP             reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    VARTYPE         reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    ID              reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    LIST            reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    SET             reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    IMPORT          reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    WHILE           reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    BREAK           reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    PRINT           reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    IF              reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    $end            reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    RPAREN          reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)
    RETURN          reduce using rule 95 (palabraBreak -> BREAK SEMICOLON .)


state 72

    (92) funcionPrint -> PRINT LPAREN . printValues RPAREN SEMICOLON
    (93) printValues -> . ID
    (94) printValues -> . values
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    ID              shift and go to state 123
    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    printValues                    shift and go to state 122
    values                         shift and go to state 124

state 73

    (29) sentenciaIf -> IF LPAREN . comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) comparacion -> . ID comparador values
    (97) comparacion -> . ID comparador ID
    (98) comparacion -> . ID operadoresLogicos ID
    (99) comparacion -> . BOOLEAN operadoresLogicos BOOLEAN

    ID              shift and go to state 120
    BOOLEAN         shift and go to state 121

    comparacion                    shift and go to state 125

state 74

    (18) funcion -> STATIC DATATYPES FUNCNAME . LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    LPAREN          shift and go to state 126


state 75

    (19) funcion -> DATATYPES FUNCNAME LPAREN . parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (23) parametrosF -> . parametro
    (24) parametrosF -> . parametro COMMA parametrosF
    (25) parametro -> . DATATYPES ID

    DATATYPES       shift and go to state 127

    parametrosF                    shift and go to state 128
    parametro                      shift and go to state 129

state 76

    (56) array -> DATATYPES ID EQUAL . SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (38) declarset -> DATATYPES ID EQUAL . LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (68) asignacion -> DATATYPES ID EQUAL . values SEMICOLON
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    SQUAREBRACKETLEFT shift and go to state 130
    LESS            shift and go to state 131
    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 132

state 77

    (70) asignacion -> DATATYPES ID operadoresAsignacion . values SEMICOLON
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 133

state 78

    (115) operadoresAsignacion -> PLUSEQUAL .

    INT             reduce using rule 115 (operadoresAsignacion -> PLUSEQUAL .)
    FLOAT           reduce using rule 115 (operadoresAsignacion -> PLUSEQUAL .)
    BOOLEAN         reduce using rule 115 (operadoresAsignacion -> PLUSEQUAL .)
    STR             reduce using rule 115 (operadoresAsignacion -> PLUSEQUAL .)


state 79

    (116) operadoresAsignacion -> MINUSEQUAL .

    INT             reduce using rule 116 (operadoresAsignacion -> MINUSEQUAL .)
    FLOAT           reduce using rule 116 (operadoresAsignacion -> MINUSEQUAL .)
    BOOLEAN         reduce using rule 116 (operadoresAsignacion -> MINUSEQUAL .)
    STR             reduce using rule 116 (operadoresAsignacion -> MINUSEQUAL .)


state 80

    (117) operadoresAsignacion -> MULTIPLUS .

    INT             reduce using rule 117 (operadoresAsignacion -> MULTIPLUS .)
    FLOAT           reduce using rule 117 (operadoresAsignacion -> MULTIPLUS .)
    BOOLEAN         reduce using rule 117 (operadoresAsignacion -> MULTIPLUS .)
    STR             reduce using rule 117 (operadoresAsignacion -> MULTIPLUS .)


state 81

    (118) operadoresAsignacion -> DIVIDEEQUAL .

    INT             reduce using rule 118 (operadoresAsignacion -> DIVIDEEQUAL .)
    FLOAT           reduce using rule 118 (operadoresAsignacion -> DIVIDEEQUAL .)
    BOOLEAN         reduce using rule 118 (operadoresAsignacion -> DIVIDEEQUAL .)
    STR             reduce using rule 118 (operadoresAsignacion -> DIVIDEEQUAL .)


state 82

    (20) funcion -> VOID FUNCNAME LPAREN . parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> VOID FUNCNAME LPAREN . RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> VOID FUNCNAME LPAREN . RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (23) parametrosF -> . parametro
    (24) parametrosF -> . parametro COMMA parametrosF
    (25) parametro -> . DATATYPES ID

    RPAREN          shift and go to state 135
    DATATYPES       shift and go to state 127

    parametrosF                    shift and go to state 134
    parametro                      shift and go to state 129

state 83

    (90) sentenciaFor -> FOR LPAREN asignacion . SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    SEMICOLON       shift and go to state 136


state 84

    (68) asignacion -> DATATYPES ID . EQUAL values SEMICOLON
    (70) asignacion -> DATATYPES ID . operadoresAsignacion values SEMICOLON
    (115) operadoresAsignacion -> . PLUSEQUAL
    (116) operadoresAsignacion -> . MINUSEQUAL
    (117) operadoresAsignacion -> . MULTIPLUS
    (118) operadoresAsignacion -> . DIVIDEEQUAL

    EQUAL           shift and go to state 137
    PLUSEQUAL       shift and go to state 78
    MINUSEQUAL      shift and go to state 79
    MULTIPLUS       shift and go to state 80
    DIVIDEEQUAL     shift and go to state 81

    operadoresAsignacion           shift and go to state 77

state 85

    (71) asignacion -> ID EQUAL . condicionesPlus
    (72) asignacion -> ID EQUAL . values
    (45) condicionesPlus -> . comparacion
    (46) condicionesPlus -> . comparacion operadoresLogicos condicionesPlus
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR
    (96) comparacion -> . ID comparador values
    (97) comparacion -> . ID comparador ID
    (98) comparacion -> . ID operadoresLogicos ID
    (99) comparacion -> . BOOLEAN operadoresLogicos BOOLEAN

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 97
    STR             shift and go to state 98
    ID              shift and go to state 120

    condicionesPlus                shift and go to state 91
    values                         shift and go to state 92
    comparacion                    shift and go to state 94

state 86

    (69) asignacion -> VARTYPE ID . EQUAL values SEMICOLON

    EQUAL           shift and go to state 138


state 87

    (79) estructuraMap -> MAP ID EQUAL . CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETLEFT shift and go to state 139


state 88

    (80) estructuraMap -> MAP LESS DATATYPES . COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    COMMA           shift and go to state 140


state 89

    (60) arrayInicio -> ID . DOT subArray
    (96) comparacion -> ID . comparador values
    (97) comparacion -> ID . comparador ID
    (98) comparacion -> ID . operadoresLogicos ID
    (100) comparador -> . GREATER
    (101) comparador -> . LESS
    (102) comparador -> . GREATEREQ
    (103) comparador -> . LESSEQ
    (104) comparador -> . EQUALC
    (105) comparador -> . DIFFERENT
    (106) operadoresLogicos -> . AND
    (107) operadoresLogicos -> . OR
    (108) operadoresLogicos -> . NOT

    DOT             shift and go to state 141
    GREATER         shift and go to state 144
    LESS            shift and go to state 145
    GREATEREQ       shift and go to state 146
    LESSEQ          shift and go to state 147
    EQUALC          shift and go to state 148
    DIFFERENT       shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151
    NOT             shift and go to state 152

    comparador                     shift and go to state 142
    operadoresLogicos              shift and go to state 143

state 90

    (54) array -> ID EQUAL arrayInicio . SEMICOLON

    SEMICOLON       shift and go to state 153


state 91

    (71) asignacion -> ID EQUAL condicionesPlus .

    DATATYPES       reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    VARTYPE         reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    ID              reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    STATIC          reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    VOID            reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    FOR             reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    MAP             reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    LIST            reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    SET             reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    IMPORT          reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    WHILE           reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    BREAK           reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    PRINT           reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    IF              reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    $end            reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    CURLYBRACKETRIGHT reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    RPAREN          reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    RETURN          reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)
    SEMICOLON       reduce using rule 71 (asignacion -> ID EQUAL condicionesPlus .)


state 92

    (72) asignacion -> ID EQUAL values .

    DATATYPES       reduce using rule 72 (asignacion -> ID EQUAL values .)
    VARTYPE         reduce using rule 72 (asignacion -> ID EQUAL values .)
    ID              reduce using rule 72 (asignacion -> ID EQUAL values .)
    STATIC          reduce using rule 72 (asignacion -> ID EQUAL values .)
    VOID            reduce using rule 72 (asignacion -> ID EQUAL values .)
    FOR             reduce using rule 72 (asignacion -> ID EQUAL values .)
    MAP             reduce using rule 72 (asignacion -> ID EQUAL values .)
    LIST            reduce using rule 72 (asignacion -> ID EQUAL values .)
    SET             reduce using rule 72 (asignacion -> ID EQUAL values .)
    IMPORT          reduce using rule 72 (asignacion -> ID EQUAL values .)
    WHILE           reduce using rule 72 (asignacion -> ID EQUAL values .)
    BREAK           reduce using rule 72 (asignacion -> ID EQUAL values .)
    PRINT           reduce using rule 72 (asignacion -> ID EQUAL values .)
    IF              reduce using rule 72 (asignacion -> ID EQUAL values .)
    $end            reduce using rule 72 (asignacion -> ID EQUAL values .)
    CURLYBRACKETRIGHT reduce using rule 72 (asignacion -> ID EQUAL values .)
    RPAREN          reduce using rule 72 (asignacion -> ID EQUAL values .)
    RETURN          reduce using rule 72 (asignacion -> ID EQUAL values .)
    SEMICOLON       reduce using rule 72 (asignacion -> ID EQUAL values .)


state 93

    (58) arrayInicio -> SQUAREBRACKETLEFT . SQUAREBRACKETRIGHT
    (59) arrayInicio -> SQUAREBRACKETLEFT . set SQUAREBRACKETRIGHT
    (34) set -> . values
    (35) set -> . values COMMA set
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    SQUAREBRACKETRIGHT shift and go to state 154
    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    set                            shift and go to state 155
    values                         shift and go to state 156

state 94

    (45) condicionesPlus -> comparacion .
    (46) condicionesPlus -> comparacion . operadoresLogicos condicionesPlus
    (106) operadoresLogicos -> . AND
    (107) operadoresLogicos -> . OR
    (108) operadoresLogicos -> . NOT

    DATATYPES       reduce using rule 45 (condicionesPlus -> comparacion .)
    VARTYPE         reduce using rule 45 (condicionesPlus -> comparacion .)
    ID              reduce using rule 45 (condicionesPlus -> comparacion .)
    STATIC          reduce using rule 45 (condicionesPlus -> comparacion .)
    VOID            reduce using rule 45 (condicionesPlus -> comparacion .)
    FOR             reduce using rule 45 (condicionesPlus -> comparacion .)
    MAP             reduce using rule 45 (condicionesPlus -> comparacion .)
    LIST            reduce using rule 45 (condicionesPlus -> comparacion .)
    SET             reduce using rule 45 (condicionesPlus -> comparacion .)
    IMPORT          reduce using rule 45 (condicionesPlus -> comparacion .)
    WHILE           reduce using rule 45 (condicionesPlus -> comparacion .)
    BREAK           reduce using rule 45 (condicionesPlus -> comparacion .)
    PRINT           reduce using rule 45 (condicionesPlus -> comparacion .)
    IF              reduce using rule 45 (condicionesPlus -> comparacion .)
    $end            reduce using rule 45 (condicionesPlus -> comparacion .)
    CURLYBRACKETRIGHT reduce using rule 45 (condicionesPlus -> comparacion .)
    RPAREN          reduce using rule 45 (condicionesPlus -> comparacion .)
    RETURN          reduce using rule 45 (condicionesPlus -> comparacion .)
    SEMICOLON       reduce using rule 45 (condicionesPlus -> comparacion .)
    AND             shift and go to state 150
    OR              shift and go to state 151
    NOT             shift and go to state 152

    operadoresLogicos              shift and go to state 157

state 95

    (75) values -> INT .

    DATATYPES       reduce using rule 75 (values -> INT .)
    VARTYPE         reduce using rule 75 (values -> INT .)
    ID              reduce using rule 75 (values -> INT .)
    STATIC          reduce using rule 75 (values -> INT .)
    VOID            reduce using rule 75 (values -> INT .)
    FOR             reduce using rule 75 (values -> INT .)
    MAP             reduce using rule 75 (values -> INT .)
    LIST            reduce using rule 75 (values -> INT .)
    SET             reduce using rule 75 (values -> INT .)
    IMPORT          reduce using rule 75 (values -> INT .)
    WHILE           reduce using rule 75 (values -> INT .)
    BREAK           reduce using rule 75 (values -> INT .)
    PRINT           reduce using rule 75 (values -> INT .)
    IF              reduce using rule 75 (values -> INT .)
    $end            reduce using rule 75 (values -> INT .)
    CURLYBRACKETRIGHT reduce using rule 75 (values -> INT .)
    RPAREN          reduce using rule 75 (values -> INT .)
    RETURN          reduce using rule 75 (values -> INT .)
    SQUAREBRACKETRIGHT reduce using rule 75 (values -> INT .)
    SQUAREBRACKETLEFT reduce using rule 75 (values -> INT .)
    SEMICOLON       reduce using rule 75 (values -> INT .)
    COMMA           reduce using rule 75 (values -> INT .)
    COLON           reduce using rule 75 (values -> INT .)
    AND             reduce using rule 75 (values -> INT .)
    OR              reduce using rule 75 (values -> INT .)
    NOT             reduce using rule 75 (values -> INT .)


state 96

    (76) values -> FLOAT .

    DATATYPES       reduce using rule 76 (values -> FLOAT .)
    VARTYPE         reduce using rule 76 (values -> FLOAT .)
    ID              reduce using rule 76 (values -> FLOAT .)
    STATIC          reduce using rule 76 (values -> FLOAT .)
    VOID            reduce using rule 76 (values -> FLOAT .)
    FOR             reduce using rule 76 (values -> FLOAT .)
    MAP             reduce using rule 76 (values -> FLOAT .)
    LIST            reduce using rule 76 (values -> FLOAT .)
    SET             reduce using rule 76 (values -> FLOAT .)
    IMPORT          reduce using rule 76 (values -> FLOAT .)
    WHILE           reduce using rule 76 (values -> FLOAT .)
    BREAK           reduce using rule 76 (values -> FLOAT .)
    PRINT           reduce using rule 76 (values -> FLOAT .)
    IF              reduce using rule 76 (values -> FLOAT .)
    $end            reduce using rule 76 (values -> FLOAT .)
    CURLYBRACKETRIGHT reduce using rule 76 (values -> FLOAT .)
    RPAREN          reduce using rule 76 (values -> FLOAT .)
    RETURN          reduce using rule 76 (values -> FLOAT .)
    SQUAREBRACKETRIGHT reduce using rule 76 (values -> FLOAT .)
    SQUAREBRACKETLEFT reduce using rule 76 (values -> FLOAT .)
    SEMICOLON       reduce using rule 76 (values -> FLOAT .)
    COMMA           reduce using rule 76 (values -> FLOAT .)
    COLON           reduce using rule 76 (values -> FLOAT .)
    AND             reduce using rule 76 (values -> FLOAT .)
    OR              reduce using rule 76 (values -> FLOAT .)
    NOT             reduce using rule 76 (values -> FLOAT .)


state 97

    (77) values -> BOOLEAN .
    (99) comparacion -> BOOLEAN . operadoresLogicos BOOLEAN
    (106) operadoresLogicos -> . AND
    (107) operadoresLogicos -> . OR
    (108) operadoresLogicos -> . NOT

    DATATYPES       reduce using rule 77 (values -> BOOLEAN .)
    VARTYPE         reduce using rule 77 (values -> BOOLEAN .)
    ID              reduce using rule 77 (values -> BOOLEAN .)
    STATIC          reduce using rule 77 (values -> BOOLEAN .)
    VOID            reduce using rule 77 (values -> BOOLEAN .)
    FOR             reduce using rule 77 (values -> BOOLEAN .)
    MAP             reduce using rule 77 (values -> BOOLEAN .)
    LIST            reduce using rule 77 (values -> BOOLEAN .)
    SET             reduce using rule 77 (values -> BOOLEAN .)
    IMPORT          reduce using rule 77 (values -> BOOLEAN .)
    WHILE           reduce using rule 77 (values -> BOOLEAN .)
    BREAK           reduce using rule 77 (values -> BOOLEAN .)
    PRINT           reduce using rule 77 (values -> BOOLEAN .)
    IF              reduce using rule 77 (values -> BOOLEAN .)
    $end            reduce using rule 77 (values -> BOOLEAN .)
    CURLYBRACKETRIGHT reduce using rule 77 (values -> BOOLEAN .)
    RPAREN          reduce using rule 77 (values -> BOOLEAN .)
    RETURN          reduce using rule 77 (values -> BOOLEAN .)
    SEMICOLON       reduce using rule 77 (values -> BOOLEAN .)
    AND             shift and go to state 150
    OR              shift and go to state 151
    NOT             shift and go to state 152

    operadoresLogicos              shift and go to state 158

state 98

    (78) values -> STR .

    DATATYPES       reduce using rule 78 (values -> STR .)
    VARTYPE         reduce using rule 78 (values -> STR .)
    ID              reduce using rule 78 (values -> STR .)
    STATIC          reduce using rule 78 (values -> STR .)
    VOID            reduce using rule 78 (values -> STR .)
    FOR             reduce using rule 78 (values -> STR .)
    MAP             reduce using rule 78 (values -> STR .)
    LIST            reduce using rule 78 (values -> STR .)
    SET             reduce using rule 78 (values -> STR .)
    IMPORT          reduce using rule 78 (values -> STR .)
    WHILE           reduce using rule 78 (values -> STR .)
    BREAK           reduce using rule 78 (values -> STR .)
    PRINT           reduce using rule 78 (values -> STR .)
    IF              reduce using rule 78 (values -> STR .)
    $end            reduce using rule 78 (values -> STR .)
    CURLYBRACKETRIGHT reduce using rule 78 (values -> STR .)
    RPAREN          reduce using rule 78 (values -> STR .)
    RETURN          reduce using rule 78 (values -> STR .)
    SQUAREBRACKETRIGHT reduce using rule 78 (values -> STR .)
    SQUAREBRACKETLEFT reduce using rule 78 (values -> STR .)
    SEMICOLON       reduce using rule 78 (values -> STR .)
    COMMA           reduce using rule 78 (values -> STR .)
    COLON           reduce using rule 78 (values -> STR .)
    AND             reduce using rule 78 (values -> STR .)
    OR              reduce using rule 78 (values -> STR .)
    NOT             reduce using rule 78 (values -> STR .)


state 99

    (65) arrayChanges -> ID SQUAREBRACKETLEFT values . SQUAREBRACKETRIGHT EQUAL values SEMICOLON

    SQUAREBRACKETRIGHT shift and go to state 159


state 100

    (77) values -> BOOLEAN .

    SQUAREBRACKETRIGHT reduce using rule 77 (values -> BOOLEAN .)
    SQUAREBRACKETLEFT reduce using rule 77 (values -> BOOLEAN .)
    RPAREN          reduce using rule 77 (values -> BOOLEAN .)
    SEMICOLON       reduce using rule 77 (values -> BOOLEAN .)
    COMMA           reduce using rule 77 (values -> BOOLEAN .)
    COLON           reduce using rule 77 (values -> BOOLEAN .)
    AND             reduce using rule 77 (values -> BOOLEAN .)
    OR              reduce using rule 77 (values -> BOOLEAN .)
    NOT             reduce using rule 77 (values -> BOOLEAN .)
    DATATYPES       reduce using rule 77 (values -> BOOLEAN .)
    VARTYPE         reduce using rule 77 (values -> BOOLEAN .)
    ID              reduce using rule 77 (values -> BOOLEAN .)
    STATIC          reduce using rule 77 (values -> BOOLEAN .)
    VOID            reduce using rule 77 (values -> BOOLEAN .)
    FOR             reduce using rule 77 (values -> BOOLEAN .)
    MAP             reduce using rule 77 (values -> BOOLEAN .)
    LIST            reduce using rule 77 (values -> BOOLEAN .)
    SET             reduce using rule 77 (values -> BOOLEAN .)
    IMPORT          reduce using rule 77 (values -> BOOLEAN .)
    WHILE           reduce using rule 77 (values -> BOOLEAN .)
    BREAK           reduce using rule 77 (values -> BOOLEAN .)
    PRINT           reduce using rule 77 (values -> BOOLEAN .)
    IF              reduce using rule 77 (values -> BOOLEAN .)
    $end            reduce using rule 77 (values -> BOOLEAN .)
    CURLYBRACKETRIGHT reduce using rule 77 (values -> BOOLEAN .)
    RETURN          reduce using rule 77 (values -> BOOLEAN .)


state 101

    (122) metodoMapAdd -> ID SQUAREBRACKETRIGHT values . SQUAREBRACKETLEFT EQUAL values SEMICOLON

    SQUAREBRACKETLEFT shift and go to state 160


state 102

    (53) foreach -> ID DOT FOREACH . LPAREN instruccionesMas RPAREN SEMICOLON

    LPAREN          shift and go to state 161


state 103

    (64) listBuscar -> ID DOT WHERE . LPAREN instruccionesMas RPAREN SEMICOLON

    LPAREN          shift and go to state 162


state 104

    (119) metodoMapClear -> ID DOT CLEAR . LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> ID DOT CLEAR . LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> ID DOT CLEAR . LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (48) setclear -> ID DOT CLEAR . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 163


state 105

    (63) arrayFunc -> ID DOT subArray .
    (67) subArray -> subArray . DOT subArray

    SEMICOLON       reduce using rule 63 (arrayFunc -> ID DOT subArray .)
    DOT             shift and go to state 164


state 106

    (47) setadd -> ID DOT ADD . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 165


state 107

    (49) setcontains -> ID DOT CONTAINS . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 166


state 108

    (50) setAddAll -> ID DOT ADDALL . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 167


state 109

    (51) setlengh -> ID DOT LENGTH . SEMICOLON

    SEMICOLON       shift and go to state 168


state 110

    (52) setremove -> ID DOT REMOVE . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 169


state 111

    (66) subArray -> SUBLIST . LPAREN values RPAREN SEMICOLON

    LPAREN          shift and go to state 170


state 112

    (81) estructuraMap -> VARTYPE ID EQUAL . CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> VARTYPE ID EQUAL . NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> VARTYPE ID EQUAL . NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (69) asignacion -> VARTYPE ID EQUAL . values SEMICOLON
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    CURLYBRACKETLEFT shift and go to state 171
    NEW             shift and go to state 172
    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 173

state 113

    (57) array -> LIST ID EQUAL . SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON

    SQUAREBRACKETLEFT shift and go to state 174


state 114

    (125) metodoListFilled -> LIST DOT FILLED . LPAREN arrayValues RPAREN SEMICOLON

    LPAREN          shift and go to state 175


state 115

    (36) declarset -> SET ID EQUAL . NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> SET ID EQUAL . CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    NEW             shift and go to state 176
    CURLYBRACKETLEFT shift and go to state 177


state 116

    (30) sentenciaElse -> ELSE CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (90) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (73) asignacionesMas -> . asignacion
    (74) asignacionesMas -> . asignacion asignacionesMas
    (79) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (80) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . metodoMapClear
    (85) estructuraMap -> . metodoMapRemoveKey
    (86) estructuraMap -> . metodoMapAddAll
    (87) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (123) importsDart -> . IMPORT STR SEMICOLON
    (124) listMethods -> . metodoListFilled
    (91) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (95) palabraBreak -> . BREAK SEMICOLON
    (92) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus
    (72) asignacion -> . ID EQUAL values
    (119) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (122) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (125) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 23
    VARTYPE         shift and go to state 25
    ID              shift and go to state 24
    LIST            shift and go to state 31
    SET             shift and go to state 32
    IMPORT          shift and go to state 40
    WHILE           shift and go to state 42
    BREAK           shift and go to state 43
    PRINT           shift and go to state 44
    IF              shift and go to state 45

    instruccionesMas               shift and go to state 178
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    metodoMapClear                 shift and go to state 26
    metodoMapRemoveKey             shift and go to state 27
    metodoMapAddAll                shift and go to state 28
    metodoMapAdd                   shift and go to state 29
    arrayFunc                      shift and go to state 30
    setadd                         shift and go to state 33
    setclear                       shift and go to state 34
    setcontains                    shift and go to state 35
    setAddAll                      shift and go to state 36
    setlengh                       shift and go to state 37
    setremove                      shift and go to state 38
    sentenciaIf                    shift and go to state 39
    metodoListFilled               shift and go to state 41

state 117

    (31) sentenciaElse -> ELSE sentenciaIf . sentenciaElse
    (30) sentenciaElse -> . ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (31) sentenciaElse -> . ELSE sentenciaIf sentenciaElse

    ELSE            shift and go to state 68

    sentenciaElse                  shift and go to state 179

state 118

    (123) importsDart -> IMPORT STR SEMICOLON .

    STATIC          reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    DATATYPES       reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    VOID            reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    FOR             reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    MAP             reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    VARTYPE         reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    ID              reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    LIST            reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    SET             reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    IMPORT          reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    WHILE           reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    BREAK           reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    PRINT           reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    IF              reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    $end            reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    RPAREN          reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)
    RETURN          reduce using rule 123 (importsDart -> IMPORT STR SEMICOLON .)


state 119

    (91) sentenciaWhile -> WHILE LPAREN comparacion . RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    RPAREN          shift and go to state 180


state 120

    (96) comparacion -> ID . comparador values
    (97) comparacion -> ID . comparador ID
    (98) comparacion -> ID . operadoresLogicos ID
    (100) comparador -> . GREATER
    (101) comparador -> . LESS
    (102) comparador -> . GREATEREQ
    (103) comparador -> . LESSEQ
    (104) comparador -> . EQUALC
    (105) comparador -> . DIFFERENT
    (106) operadoresLogicos -> . AND
    (107) operadoresLogicos -> . OR
    (108) operadoresLogicos -> . NOT

    GREATER         shift and go to state 144
    LESS            shift and go to state 145
    GREATEREQ       shift and go to state 146
    LESSEQ          shift and go to state 147
    EQUALC          shift and go to state 148
    DIFFERENT       shift and go to state 149
    AND             shift and go to state 150
    OR              shift and go to state 151
    NOT             shift and go to state 152

    comparador                     shift and go to state 142
    operadoresLogicos              shift and go to state 143

state 121

    (99) comparacion -> BOOLEAN . operadoresLogicos BOOLEAN
    (106) operadoresLogicos -> . AND
    (107) operadoresLogicos -> . OR
    (108) operadoresLogicos -> . NOT

    AND             shift and go to state 150
    OR              shift and go to state 151
    NOT             shift and go to state 152

    operadoresLogicos              shift and go to state 158

state 122

    (92) funcionPrint -> PRINT LPAREN printValues . RPAREN SEMICOLON

    RPAREN          shift and go to state 181


state 123

    (93) printValues -> ID .

    RPAREN          reduce using rule 93 (printValues -> ID .)


state 124

    (94) printValues -> values .

    RPAREN          reduce using rule 94 (printValues -> values .)


state 125

    (29) sentenciaIf -> IF LPAREN comparacion . RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    RPAREN          shift and go to state 182


state 126

    (18) funcion -> STATIC DATATYPES FUNCNAME LPAREN . parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (23) parametrosF -> . parametro
    (24) parametrosF -> . parametro COMMA parametrosF
    (25) parametro -> . DATATYPES ID

    DATATYPES       shift and go to state 127

    parametrosF                    shift and go to state 183
    parametro                      shift and go to state 129

state 127

    (25) parametro -> DATATYPES . ID

    ID              shift and go to state 184


state 128

    (19) funcion -> DATATYPES FUNCNAME LPAREN parametrosF . RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    RPAREN          shift and go to state 185


state 129

    (23) parametrosF -> parametro .
    (24) parametrosF -> parametro . COMMA parametrosF

    RPAREN          reduce using rule 23 (parametrosF -> parametro .)
    COMMA           shift and go to state 186


state 130

    (56) array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT . arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (61) arrayValues -> . values
    (62) arrayValues -> . values COMMA arrayValues
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    arrayValues                    shift and go to state 187
    values                         shift and go to state 188

state 131

    (38) declarset -> DATATYPES ID EQUAL LESS . DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    DATATYPES       shift and go to state 189


state 132

    (68) asignacion -> DATATYPES ID EQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 190


state 133

    (70) asignacion -> DATATYPES ID operadoresAsignacion values . SEMICOLON

    SEMICOLON       shift and go to state 191


state 134

    (20) funcion -> VOID FUNCNAME LPAREN parametrosF . RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    RPAREN          shift and go to state 192


state 135

    (21) funcion -> VOID FUNCNAME LPAREN RPAREN . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> VOID FUNCNAME LPAREN RPAREN . CURLYBRACKETLEFT CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 193


state 136

    (90) sentenciaFor -> FOR LPAREN asignacion SEMICOLON . comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (96) comparacion -> . ID comparador values
    (97) comparacion -> . ID comparador ID
    (98) comparacion -> . ID operadoresLogicos ID
    (99) comparacion -> . BOOLEAN operadoresLogicos BOOLEAN

    ID              shift and go to state 120
    BOOLEAN         shift and go to state 121

    comparacion                    shift and go to state 194

state 137

    (68) asignacion -> DATATYPES ID EQUAL . values SEMICOLON
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 132

state 138

    (69) asignacion -> VARTYPE ID EQUAL . values SEMICOLON
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 173

state 139

    (79) estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT . itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (88) itemsMaps -> . values COLON values
    (89) itemsMaps -> . values COLON values COMMA itemsMaps
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    itemsMaps                      shift and go to state 195
    values                         shift and go to state 196

state 140

    (80) estructuraMap -> MAP LESS DATATYPES COMMA . DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    DATATYPES       shift and go to state 197


state 141

    (60) arrayInicio -> ID DOT . subArray
    (66) subArray -> . SUBLIST LPAREN values RPAREN SEMICOLON
    (67) subArray -> . subArray DOT subArray

    SUBLIST         shift and go to state 111

    subArray                       shift and go to state 198

state 142

    (96) comparacion -> ID comparador . values
    (97) comparacion -> ID comparador . ID
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    ID              shift and go to state 199
    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 200

state 143

    (98) comparacion -> ID operadoresLogicos . ID

    ID              shift and go to state 201


state 144

    (100) comparador -> GREATER .

    ID              reduce using rule 100 (comparador -> GREATER .)
    INT             reduce using rule 100 (comparador -> GREATER .)
    FLOAT           reduce using rule 100 (comparador -> GREATER .)
    BOOLEAN         reduce using rule 100 (comparador -> GREATER .)
    STR             reduce using rule 100 (comparador -> GREATER .)


state 145

    (101) comparador -> LESS .

    ID              reduce using rule 101 (comparador -> LESS .)
    INT             reduce using rule 101 (comparador -> LESS .)
    FLOAT           reduce using rule 101 (comparador -> LESS .)
    BOOLEAN         reduce using rule 101 (comparador -> LESS .)
    STR             reduce using rule 101 (comparador -> LESS .)


state 146

    (102) comparador -> GREATEREQ .

    ID              reduce using rule 102 (comparador -> GREATEREQ .)
    INT             reduce using rule 102 (comparador -> GREATEREQ .)
    FLOAT           reduce using rule 102 (comparador -> GREATEREQ .)
    BOOLEAN         reduce using rule 102 (comparador -> GREATEREQ .)
    STR             reduce using rule 102 (comparador -> GREATEREQ .)


state 147

    (103) comparador -> LESSEQ .

    ID              reduce using rule 103 (comparador -> LESSEQ .)
    INT             reduce using rule 103 (comparador -> LESSEQ .)
    FLOAT           reduce using rule 103 (comparador -> LESSEQ .)
    BOOLEAN         reduce using rule 103 (comparador -> LESSEQ .)
    STR             reduce using rule 103 (comparador -> LESSEQ .)


state 148

    (104) comparador -> EQUALC .

    ID              reduce using rule 104 (comparador -> EQUALC .)
    INT             reduce using rule 104 (comparador -> EQUALC .)
    FLOAT           reduce using rule 104 (comparador -> EQUALC .)
    BOOLEAN         reduce using rule 104 (comparador -> EQUALC .)
    STR             reduce using rule 104 (comparador -> EQUALC .)


state 149

    (105) comparador -> DIFFERENT .

    ID              reduce using rule 105 (comparador -> DIFFERENT .)
    INT             reduce using rule 105 (comparador -> DIFFERENT .)
    FLOAT           reduce using rule 105 (comparador -> DIFFERENT .)
    BOOLEAN         reduce using rule 105 (comparador -> DIFFERENT .)
    STR             reduce using rule 105 (comparador -> DIFFERENT .)


state 150

    (106) operadoresLogicos -> AND .

    ID              reduce using rule 106 (operadoresLogicos -> AND .)
    BOOLEAN         reduce using rule 106 (operadoresLogicos -> AND .)


state 151

    (107) operadoresLogicos -> OR .

    ID              reduce using rule 107 (operadoresLogicos -> OR .)
    BOOLEAN         reduce using rule 107 (operadoresLogicos -> OR .)


state 152

    (108) operadoresLogicos -> NOT .

    ID              reduce using rule 108 (operadoresLogicos -> NOT .)
    BOOLEAN         reduce using rule 108 (operadoresLogicos -> NOT .)


state 153

    (54) array -> ID EQUAL arrayInicio SEMICOLON .

    STATIC          reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    DATATYPES       reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    VOID            reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    FOR             reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    MAP             reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    VARTYPE         reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    ID              reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    LIST            reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    SET             reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    IMPORT          reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    WHILE           reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    BREAK           reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    PRINT           reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    IF              reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    $end            reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    RPAREN          reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)
    RETURN          reduce using rule 54 (array -> ID EQUAL arrayInicio SEMICOLON .)


state 154

    (58) arrayInicio -> SQUAREBRACKETLEFT SQUAREBRACKETRIGHT .

    SEMICOLON       reduce using rule 58 (arrayInicio -> SQUAREBRACKETLEFT SQUAREBRACKETRIGHT .)


state 155

    (59) arrayInicio -> SQUAREBRACKETLEFT set . SQUAREBRACKETRIGHT

    SQUAREBRACKETRIGHT shift and go to state 202


state 156

    (34) set -> values .
    (35) set -> values . COMMA set

    SQUAREBRACKETRIGHT reduce using rule 34 (set -> values .)
    CURLYBRACKETRIGHT reduce using rule 34 (set -> values .)
    COMMA           shift and go to state 203


state 157

    (46) condicionesPlus -> comparacion operadoresLogicos . condicionesPlus
    (45) condicionesPlus -> . comparacion
    (46) condicionesPlus -> . comparacion operadoresLogicos condicionesPlus
    (96) comparacion -> . ID comparador values
    (97) comparacion -> . ID comparador ID
    (98) comparacion -> . ID operadoresLogicos ID
    (99) comparacion -> . BOOLEAN operadoresLogicos BOOLEAN

    ID              shift and go to state 120
    BOOLEAN         shift and go to state 121

    comparacion                    shift and go to state 94
    condicionesPlus                shift and go to state 204

state 158

    (99) comparacion -> BOOLEAN operadoresLogicos . BOOLEAN

    BOOLEAN         shift and go to state 205


state 159

    (65) arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT . EQUAL values SEMICOLON

    EQUAL           shift and go to state 206


state 160

    (122) metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT . EQUAL values SEMICOLON

    EQUAL           shift and go to state 207


state 161

    (53) foreach -> ID DOT FOREACH LPAREN . instruccionesMas RPAREN SEMICOLON
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (90) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (73) asignacionesMas -> . asignacion
    (74) asignacionesMas -> . asignacion asignacionesMas
    (79) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (80) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . metodoMapClear
    (85) estructuraMap -> . metodoMapRemoveKey
    (86) estructuraMap -> . metodoMapAddAll
    (87) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (123) importsDart -> . IMPORT STR SEMICOLON
    (124) listMethods -> . metodoListFilled
    (91) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (95) palabraBreak -> . BREAK SEMICOLON
    (92) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus
    (72) asignacion -> . ID EQUAL values
    (119) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (122) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (125) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 23
    VARTYPE         shift and go to state 25
    ID              shift and go to state 24
    LIST            shift and go to state 31
    SET             shift and go to state 32
    IMPORT          shift and go to state 40
    WHILE           shift and go to state 42
    BREAK           shift and go to state 43
    PRINT           shift and go to state 44
    IF              shift and go to state 45

    instruccionesMas               shift and go to state 208
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    metodoMapClear                 shift and go to state 26
    metodoMapRemoveKey             shift and go to state 27
    metodoMapAddAll                shift and go to state 28
    metodoMapAdd                   shift and go to state 29
    arrayFunc                      shift and go to state 30
    setadd                         shift and go to state 33
    setclear                       shift and go to state 34
    setcontains                    shift and go to state 35
    setAddAll                      shift and go to state 36
    setlengh                       shift and go to state 37
    setremove                      shift and go to state 38
    sentenciaIf                    shift and go to state 39
    metodoListFilled               shift and go to state 41

state 162

    (64) listBuscar -> ID DOT WHERE LPAREN . instruccionesMas RPAREN SEMICOLON
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (90) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (73) asignacionesMas -> . asignacion
    (74) asignacionesMas -> . asignacion asignacionesMas
    (79) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (80) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . metodoMapClear
    (85) estructuraMap -> . metodoMapRemoveKey
    (86) estructuraMap -> . metodoMapAddAll
    (87) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (123) importsDart -> . IMPORT STR SEMICOLON
    (124) listMethods -> . metodoListFilled
    (91) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (95) palabraBreak -> . BREAK SEMICOLON
    (92) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus
    (72) asignacion -> . ID EQUAL values
    (119) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (122) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (125) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 23
    VARTYPE         shift and go to state 25
    ID              shift and go to state 24
    LIST            shift and go to state 31
    SET             shift and go to state 32
    IMPORT          shift and go to state 40
    WHILE           shift and go to state 42
    BREAK           shift and go to state 43
    PRINT           shift and go to state 44
    IF              shift and go to state 45

    instruccionesMas               shift and go to state 209
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    metodoMapClear                 shift and go to state 26
    metodoMapRemoveKey             shift and go to state 27
    metodoMapAddAll                shift and go to state 28
    metodoMapAdd                   shift and go to state 29
    arrayFunc                      shift and go to state 30
    setadd                         shift and go to state 33
    setclear                       shift and go to state 34
    setcontains                    shift and go to state 35
    setAddAll                      shift and go to state 36
    setlengh                       shift and go to state 37
    setremove                      shift and go to state 38
    sentenciaIf                    shift and go to state 39
    metodoListFilled               shift and go to state 41

state 163

    (119) metodoMapClear -> ID DOT CLEAR LPAREN . RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> ID DOT CLEAR LPAREN . arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> ID DOT CLEAR LPAREN . CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (48) setclear -> ID DOT CLEAR LPAREN . values RPAREN SEMICOLON
    (61) arrayValues -> . values
    (62) arrayValues -> . values COMMA arrayValues
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    RPAREN          shift and go to state 210
    CURLYBRACKETLEFT shift and go to state 212
    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    arrayValues                    shift and go to state 211
    values                         shift and go to state 213

state 164

    (67) subArray -> subArray DOT . subArray
    (66) subArray -> . SUBLIST LPAREN values RPAREN SEMICOLON
    (67) subArray -> . subArray DOT subArray

    SUBLIST         shift and go to state 111

    subArray                       shift and go to state 214

state 165

    (47) setadd -> ID DOT ADD LPAREN . values RPAREN SEMICOLON
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 215

state 166

    (49) setcontains -> ID DOT CONTAINS LPAREN . values RPAREN SEMICOLON
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 216

state 167

    (50) setAddAll -> ID DOT ADDALL LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 217


state 168

    (51) setlengh -> ID DOT LENGTH SEMICOLON .

    STATIC          reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    DATATYPES       reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    VOID            reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    FOR             reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    MAP             reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    VARTYPE         reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    ID              reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    LIST            reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    SET             reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    IMPORT          reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    WHILE           reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    BREAK           reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    PRINT           reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    IF              reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    $end            reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    RPAREN          reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)
    RETURN          reduce using rule 51 (setlengh -> ID DOT LENGTH SEMICOLON .)


state 169

    (52) setremove -> ID DOT REMOVE LPAREN . values RPAREN SEMICOLON
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 218

state 170

    (66) subArray -> SUBLIST LPAREN . values RPAREN SEMICOLON
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 219

state 171

    (81) estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT . itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (88) itemsMaps -> . values COLON values
    (89) itemsMaps -> . values COLON values COMMA itemsMaps
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    itemsMaps                      shift and go to state 220
    values                         shift and go to state 196

state 172

    (82) estructuraMap -> VARTYPE ID EQUAL NEW . MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> VARTYPE ID EQUAL NEW . MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON

    MAP             shift and go to state 221


state 173

    (69) asignacion -> VARTYPE ID EQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 222


state 174

    (57) array -> LIST ID EQUAL SQUAREBRACKETLEFT . arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (61) arrayValues -> . values
    (62) arrayValues -> . values COMMA arrayValues
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    arrayValues                    shift and go to state 223
    values                         shift and go to state 188

state 175

    (125) metodoListFilled -> LIST DOT FILLED LPAREN . arrayValues RPAREN SEMICOLON
    (61) arrayValues -> . values
    (62) arrayValues -> . values COMMA arrayValues
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    arrayValues                    shift and go to state 224
    values                         shift and go to state 188

state 176

    (36) declarset -> SET ID EQUAL NEW . SET LPAREN RPAREN SEMICOLON

    SET             shift and go to state 225


state 177

    (37) declarset -> SET ID EQUAL CURLYBRACKETLEFT . set CURLYBRACKETRIGHT SEMICOLON
    (34) set -> . values
    (35) set -> . values COMMA set
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    set                            shift and go to state 226
    values                         shift and go to state 156

state 178

    (30) sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 227


state 179

    (31) sentenciaElse -> ELSE sentenciaIf sentenciaElse .

    STATIC          reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    DATATYPES       reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    VOID            reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    FOR             reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    MAP             reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    VARTYPE         reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    ID              reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    LIST            reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    SET             reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    IMPORT          reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    WHILE           reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    BREAK           reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    PRINT           reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    IF              reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    $end            reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    CURLYBRACKETRIGHT reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    RPAREN          reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)
    RETURN          reduce using rule 31 (sentenciaElse -> ELSE sentenciaIf sentenciaElse .)


state 180

    (91) sentenciaWhile -> WHILE LPAREN comparacion RPAREN . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 228


state 181

    (92) funcionPrint -> PRINT LPAREN printValues RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 229


state 182

    (29) sentenciaIf -> IF LPAREN comparacion RPAREN . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 230


state 183

    (18) funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF . RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    RPAREN          shift and go to state 231


state 184

    (25) parametro -> DATATYPES ID .

    COMMA           reduce using rule 25 (parametro -> DATATYPES ID .)
    RPAREN          reduce using rule 25 (parametro -> DATATYPES ID .)


state 185

    (19) funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN . CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 232


state 186

    (24) parametrosF -> parametro COMMA . parametrosF
    (23) parametrosF -> . parametro
    (24) parametrosF -> . parametro COMMA parametrosF
    (25) parametro -> . DATATYPES ID

    DATATYPES       shift and go to state 127

    parametro                      shift and go to state 129
    parametrosF                    shift and go to state 233

state 187

    (56) array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues . SQUAREBRACKETRIGHT SEMICOLON

    SQUAREBRACKETRIGHT shift and go to state 234


state 188

    (61) arrayValues -> values .
    (62) arrayValues -> values . COMMA arrayValues

    SQUAREBRACKETRIGHT reduce using rule 61 (arrayValues -> values .)
    RPAREN          reduce using rule 61 (arrayValues -> values .)
    COMMA           shift and go to state 235


state 189

    (38) declarset -> DATATYPES ID EQUAL LESS DATATYPES . GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    GREATER         shift and go to state 236


state 190

    (68) asignacion -> DATATYPES ID EQUAL values SEMICOLON .

    DATATYPES       reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    ID              reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    STATIC          reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    VOID            reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    FOR             reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    MAP             reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    LIST            reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    SET             reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    IMPORT          reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    WHILE           reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    BREAK           reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    PRINT           reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    IF              reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    $end            reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    RPAREN          reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    RETURN          reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)
    SEMICOLON       reduce using rule 68 (asignacion -> DATATYPES ID EQUAL values SEMICOLON .)


state 191

    (70) asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .

    DATATYPES       reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    VARTYPE         reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    ID              reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    STATIC          reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    VOID            reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    FOR             reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    MAP             reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    LIST            reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    SET             reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    IMPORT          reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    WHILE           reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    BREAK           reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    PRINT           reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    IF              reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    $end            reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    RPAREN          reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    RETURN          reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)
    SEMICOLON       reduce using rule 70 (asignacion -> DATATYPES ID operadoresAsignacion values SEMICOLON .)


state 192

    (20) funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 237


state 193

    (21) funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT . CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (90) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (73) asignacionesMas -> . asignacion
    (74) asignacionesMas -> . asignacion asignacionesMas
    (79) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (80) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . metodoMapClear
    (85) estructuraMap -> . metodoMapRemoveKey
    (86) estructuraMap -> . metodoMapAddAll
    (87) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (123) importsDart -> . IMPORT STR SEMICOLON
    (124) listMethods -> . metodoListFilled
    (91) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (95) palabraBreak -> . BREAK SEMICOLON
    (92) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus
    (72) asignacion -> . ID EQUAL values
    (119) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (122) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (125) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 239
    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 23
    VARTYPE         shift and go to state 25
    ID              shift and go to state 24
    LIST            shift and go to state 31
    SET             shift and go to state 32
    IMPORT          shift and go to state 40
    WHILE           shift and go to state 42
    BREAK           shift and go to state 43
    PRINT           shift and go to state 44
    IF              shift and go to state 45

    instruccionesMas               shift and go to state 238
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    metodoMapClear                 shift and go to state 26
    metodoMapRemoveKey             shift and go to state 27
    metodoMapAddAll                shift and go to state 28
    metodoMapAdd                   shift and go to state 29
    arrayFunc                      shift and go to state 30
    setadd                         shift and go to state 33
    setclear                       shift and go to state 34
    setcontains                    shift and go to state 35
    setAddAll                      shift and go to state 36
    setlengh                       shift and go to state 37
    setremove                      shift and go to state 38
    sentenciaIf                    shift and go to state 39
    metodoListFilled               shift and go to state 41

state 194

    (90) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion . SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    SEMICOLON       shift and go to state 240


state 195

    (79) estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 241


state 196

    (88) itemsMaps -> values . COLON values
    (89) itemsMaps -> values . COLON values COMMA itemsMaps

    COLON           shift and go to state 242


state 197

    (80) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES . GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    GREATER         shift and go to state 243


state 198

    (60) arrayInicio -> ID DOT subArray .
    (67) subArray -> subArray . DOT subArray

    SEMICOLON       reduce using rule 60 (arrayInicio -> ID DOT subArray .)
    DOT             shift and go to state 164


state 199

    (97) comparacion -> ID comparador ID .

    AND             reduce using rule 97 (comparacion -> ID comparador ID .)
    OR              reduce using rule 97 (comparacion -> ID comparador ID .)
    NOT             reduce using rule 97 (comparacion -> ID comparador ID .)
    DATATYPES       reduce using rule 97 (comparacion -> ID comparador ID .)
    VARTYPE         reduce using rule 97 (comparacion -> ID comparador ID .)
    ID              reduce using rule 97 (comparacion -> ID comparador ID .)
    STATIC          reduce using rule 97 (comparacion -> ID comparador ID .)
    VOID            reduce using rule 97 (comparacion -> ID comparador ID .)
    FOR             reduce using rule 97 (comparacion -> ID comparador ID .)
    MAP             reduce using rule 97 (comparacion -> ID comparador ID .)
    LIST            reduce using rule 97 (comparacion -> ID comparador ID .)
    SET             reduce using rule 97 (comparacion -> ID comparador ID .)
    IMPORT          reduce using rule 97 (comparacion -> ID comparador ID .)
    WHILE           reduce using rule 97 (comparacion -> ID comparador ID .)
    BREAK           reduce using rule 97 (comparacion -> ID comparador ID .)
    PRINT           reduce using rule 97 (comparacion -> ID comparador ID .)
    IF              reduce using rule 97 (comparacion -> ID comparador ID .)
    $end            reduce using rule 97 (comparacion -> ID comparador ID .)
    CURLYBRACKETRIGHT reduce using rule 97 (comparacion -> ID comparador ID .)
    RPAREN          reduce using rule 97 (comparacion -> ID comparador ID .)
    RETURN          reduce using rule 97 (comparacion -> ID comparador ID .)
    SEMICOLON       reduce using rule 97 (comparacion -> ID comparador ID .)


state 200

    (96) comparacion -> ID comparador values .

    AND             reduce using rule 96 (comparacion -> ID comparador values .)
    OR              reduce using rule 96 (comparacion -> ID comparador values .)
    NOT             reduce using rule 96 (comparacion -> ID comparador values .)
    DATATYPES       reduce using rule 96 (comparacion -> ID comparador values .)
    VARTYPE         reduce using rule 96 (comparacion -> ID comparador values .)
    ID              reduce using rule 96 (comparacion -> ID comparador values .)
    STATIC          reduce using rule 96 (comparacion -> ID comparador values .)
    VOID            reduce using rule 96 (comparacion -> ID comparador values .)
    FOR             reduce using rule 96 (comparacion -> ID comparador values .)
    MAP             reduce using rule 96 (comparacion -> ID comparador values .)
    LIST            reduce using rule 96 (comparacion -> ID comparador values .)
    SET             reduce using rule 96 (comparacion -> ID comparador values .)
    IMPORT          reduce using rule 96 (comparacion -> ID comparador values .)
    WHILE           reduce using rule 96 (comparacion -> ID comparador values .)
    BREAK           reduce using rule 96 (comparacion -> ID comparador values .)
    PRINT           reduce using rule 96 (comparacion -> ID comparador values .)
    IF              reduce using rule 96 (comparacion -> ID comparador values .)
    $end            reduce using rule 96 (comparacion -> ID comparador values .)
    CURLYBRACKETRIGHT reduce using rule 96 (comparacion -> ID comparador values .)
    RPAREN          reduce using rule 96 (comparacion -> ID comparador values .)
    RETURN          reduce using rule 96 (comparacion -> ID comparador values .)
    SEMICOLON       reduce using rule 96 (comparacion -> ID comparador values .)


state 201

    (98) comparacion -> ID operadoresLogicos ID .

    AND             reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    OR              reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    NOT             reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    DATATYPES       reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    VARTYPE         reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    ID              reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    STATIC          reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    VOID            reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    FOR             reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    MAP             reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    LIST            reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    SET             reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    IMPORT          reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    WHILE           reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    BREAK           reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    PRINT           reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    IF              reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    $end            reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    CURLYBRACKETRIGHT reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    RPAREN          reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    RETURN          reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)
    SEMICOLON       reduce using rule 98 (comparacion -> ID operadoresLogicos ID .)


state 202

    (59) arrayInicio -> SQUAREBRACKETLEFT set SQUAREBRACKETRIGHT .

    SEMICOLON       reduce using rule 59 (arrayInicio -> SQUAREBRACKETLEFT set SQUAREBRACKETRIGHT .)


state 203

    (35) set -> values COMMA . set
    (34) set -> . values
    (35) set -> . values COMMA set
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 156
    set                            shift and go to state 244

state 204

    (46) condicionesPlus -> comparacion operadoresLogicos condicionesPlus .

    DATATYPES       reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    VARTYPE         reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    ID              reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    STATIC          reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    VOID            reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    FOR             reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    MAP             reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    LIST            reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    SET             reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    IMPORT          reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    WHILE           reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    BREAK           reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    PRINT           reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    IF              reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    $end            reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    CURLYBRACKETRIGHT reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    RPAREN          reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    RETURN          reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)
    SEMICOLON       reduce using rule 46 (condicionesPlus -> comparacion operadoresLogicos condicionesPlus .)


state 205

    (99) comparacion -> BOOLEAN operadoresLogicos BOOLEAN .

    AND             reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    OR              reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    NOT             reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    DATATYPES       reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    VARTYPE         reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    ID              reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    STATIC          reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    VOID            reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    FOR             reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    MAP             reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    LIST            reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    SET             reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    IMPORT          reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    WHILE           reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    BREAK           reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    PRINT           reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    IF              reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    $end            reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    CURLYBRACKETRIGHT reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    RPAREN          reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    RETURN          reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)
    SEMICOLON       reduce using rule 99 (comparacion -> BOOLEAN operadoresLogicos BOOLEAN .)


state 206

    (65) arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL . values SEMICOLON
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 245

state 207

    (122) metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL . values SEMICOLON
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 246

state 208

    (53) foreach -> ID DOT FOREACH LPAREN instruccionesMas . RPAREN SEMICOLON

    RPAREN          shift and go to state 247


state 209

    (64) listBuscar -> ID DOT WHERE LPAREN instruccionesMas . RPAREN SEMICOLON

    RPAREN          shift and go to state 248


state 210

    (119) metodoMapClear -> ID DOT CLEAR LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 249


state 211

    (120) metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues . RPAREN SEMICOLON

    RPAREN          shift and go to state 250


state 212

    (121) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT . itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (88) itemsMaps -> . values COLON values
    (89) itemsMaps -> . values COLON values COMMA itemsMaps
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    itemsMaps                      shift and go to state 251
    values                         shift and go to state 196

state 213

    (48) setclear -> ID DOT CLEAR LPAREN values . RPAREN SEMICOLON
    (61) arrayValues -> values .
    (62) arrayValues -> values . COMMA arrayValues

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 252
    COMMA           shift and go to state 235

  ! RPAREN          [ reduce using rule 61 (arrayValues -> values .) ]


state 214

    (67) subArray -> subArray DOT subArray .
    (67) subArray -> subArray . DOT subArray

  ! shift/reduce conflict for DOT resolved as shift
    SEMICOLON       reduce using rule 67 (subArray -> subArray DOT subArray .)
    DOT             shift and go to state 164

  ! DOT             [ reduce using rule 67 (subArray -> subArray DOT subArray .) ]


state 215

    (47) setadd -> ID DOT ADD LPAREN values . RPAREN SEMICOLON

    RPAREN          shift and go to state 253


state 216

    (49) setcontains -> ID DOT CONTAINS LPAREN values . RPAREN SEMICOLON

    RPAREN          shift and go to state 254


state 217

    (50) setAddAll -> ID DOT ADDALL LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 255


state 218

    (52) setremove -> ID DOT REMOVE LPAREN values . RPAREN SEMICOLON

    RPAREN          shift and go to state 256


state 219

    (66) subArray -> SUBLIST LPAREN values . RPAREN SEMICOLON

    RPAREN          shift and go to state 257


state 220

    (81) estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 258


state 221

    (82) estructuraMap -> VARTYPE ID EQUAL NEW MAP . LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> VARTYPE ID EQUAL NEW MAP . LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 259
    LESS            shift and go to state 260


state 222

    (69) asignacion -> VARTYPE ID EQUAL values SEMICOLON .

    DATATYPES       reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    ID              reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    STATIC          reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    VOID            reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    FOR             reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    MAP             reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    LIST            reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    SET             reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    IMPORT          reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    WHILE           reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    BREAK           reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    PRINT           reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    IF              reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    $end            reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    RPAREN          reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    RETURN          reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)
    SEMICOLON       reduce using rule 69 (asignacion -> VARTYPE ID EQUAL values SEMICOLON .)


state 223

    (57) array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues . SQUAREBRACKETRIGHT SEMICOLON

    SQUAREBRACKETRIGHT shift and go to state 261


state 224

    (125) metodoListFilled -> LIST DOT FILLED LPAREN arrayValues . RPAREN SEMICOLON

    RPAREN          shift and go to state 262


state 225

    (36) declarset -> SET ID EQUAL NEW SET . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 263


state 226

    (37) declarset -> SET ID EQUAL CURLYBRACKETLEFT set . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 264


state 227

    (30) sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    STATIC          reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 30 (sentenciaElse -> ELSE CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 228

    (91) sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (90) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (73) asignacionesMas -> . asignacion
    (74) asignacionesMas -> . asignacion asignacionesMas
    (79) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (80) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . metodoMapClear
    (85) estructuraMap -> . metodoMapRemoveKey
    (86) estructuraMap -> . metodoMapAddAll
    (87) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (123) importsDart -> . IMPORT STR SEMICOLON
    (124) listMethods -> . metodoListFilled
    (91) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (95) palabraBreak -> . BREAK SEMICOLON
    (92) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus
    (72) asignacion -> . ID EQUAL values
    (119) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (122) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (125) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 23
    VARTYPE         shift and go to state 25
    ID              shift and go to state 24
    LIST            shift and go to state 31
    SET             shift and go to state 32
    IMPORT          shift and go to state 40
    WHILE           shift and go to state 42
    BREAK           shift and go to state 43
    PRINT           shift and go to state 44
    IF              shift and go to state 45

    instruccionesMas               shift and go to state 265
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    metodoMapClear                 shift and go to state 26
    metodoMapRemoveKey             shift and go to state 27
    metodoMapAddAll                shift and go to state 28
    metodoMapAdd                   shift and go to state 29
    arrayFunc                      shift and go to state 30
    setadd                         shift and go to state 33
    setclear                       shift and go to state 34
    setcontains                    shift and go to state 35
    setAddAll                      shift and go to state 36
    setlengh                       shift and go to state 37
    setremove                      shift and go to state 38
    sentenciaIf                    shift and go to state 39
    metodoListFilled               shift and go to state 41

state 229

    (92) funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .

    STATIC          reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    VOID            reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    FOR             reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    MAP             reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    ID              reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    LIST            reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    SET             reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    IMPORT          reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    WHILE           reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    BREAK           reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    PRINT           reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    IF              reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    $end            reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    RPAREN          reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)
    RETURN          reduce using rule 92 (funcionPrint -> PRINT LPAREN printValues RPAREN SEMICOLON .)


state 230

    (29) sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (90) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (73) asignacionesMas -> . asignacion
    (74) asignacionesMas -> . asignacion asignacionesMas
    (79) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (80) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . metodoMapClear
    (85) estructuraMap -> . metodoMapRemoveKey
    (86) estructuraMap -> . metodoMapAddAll
    (87) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (123) importsDart -> . IMPORT STR SEMICOLON
    (124) listMethods -> . metodoListFilled
    (91) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (95) palabraBreak -> . BREAK SEMICOLON
    (92) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus
    (72) asignacion -> . ID EQUAL values
    (119) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (122) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (125) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 23
    VARTYPE         shift and go to state 25
    ID              shift and go to state 24
    LIST            shift and go to state 31
    SET             shift and go to state 32
    IMPORT          shift and go to state 40
    WHILE           shift and go to state 42
    BREAK           shift and go to state 43
    PRINT           shift and go to state 44
    IF              shift and go to state 45

    instruccionesMas               shift and go to state 266
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    metodoMapClear                 shift and go to state 26
    metodoMapRemoveKey             shift and go to state 27
    metodoMapAddAll                shift and go to state 28
    metodoMapAdd                   shift and go to state 29
    arrayFunc                      shift and go to state 30
    setadd                         shift and go to state 33
    setclear                       shift and go to state 34
    setcontains                    shift and go to state 35
    setAddAll                      shift and go to state 36
    setlengh                       shift and go to state 37
    setremove                      shift and go to state 38
    sentenciaIf                    shift and go to state 39
    metodoListFilled               shift and go to state 41

state 231

    (18) funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN . CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 267


state 232

    (19) funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT . instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (90) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (73) asignacionesMas -> . asignacion
    (74) asignacionesMas -> . asignacion asignacionesMas
    (79) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (80) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . metodoMapClear
    (85) estructuraMap -> . metodoMapRemoveKey
    (86) estructuraMap -> . metodoMapAddAll
    (87) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (123) importsDart -> . IMPORT STR SEMICOLON
    (124) listMethods -> . metodoListFilled
    (91) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (95) palabraBreak -> . BREAK SEMICOLON
    (92) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus
    (72) asignacion -> . ID EQUAL values
    (119) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (122) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (125) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 23
    VARTYPE         shift and go to state 25
    ID              shift and go to state 24
    LIST            shift and go to state 31
    SET             shift and go to state 32
    IMPORT          shift and go to state 40
    WHILE           shift and go to state 42
    BREAK           shift and go to state 43
    PRINT           shift and go to state 44
    IF              shift and go to state 45

    instruccionesMas               shift and go to state 268
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    metodoMapClear                 shift and go to state 26
    metodoMapRemoveKey             shift and go to state 27
    metodoMapAddAll                shift and go to state 28
    metodoMapAdd                   shift and go to state 29
    arrayFunc                      shift and go to state 30
    setadd                         shift and go to state 33
    setclear                       shift and go to state 34
    setcontains                    shift and go to state 35
    setAddAll                      shift and go to state 36
    setlengh                       shift and go to state 37
    setremove                      shift and go to state 38
    sentenciaIf                    shift and go to state 39
    metodoListFilled               shift and go to state 41

state 233

    (24) parametrosF -> parametro COMMA parametrosF .

    RPAREN          reduce using rule 24 (parametrosF -> parametro COMMA parametrosF .)


state 234

    (56) array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 269


state 235

    (62) arrayValues -> values COMMA . arrayValues
    (61) arrayValues -> . values
    (62) arrayValues -> . values COMMA arrayValues
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 188
    arrayValues                    shift and go to state 270

state 236

    (38) declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER . CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETLEFT shift and go to state 271


state 237

    (20) funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (90) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (73) asignacionesMas -> . asignacion
    (74) asignacionesMas -> . asignacion asignacionesMas
    (79) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (80) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . metodoMapClear
    (85) estructuraMap -> . metodoMapRemoveKey
    (86) estructuraMap -> . metodoMapAddAll
    (87) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (123) importsDart -> . IMPORT STR SEMICOLON
    (124) listMethods -> . metodoListFilled
    (91) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (95) palabraBreak -> . BREAK SEMICOLON
    (92) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus
    (72) asignacion -> . ID EQUAL values
    (119) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (122) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (125) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 23
    VARTYPE         shift and go to state 25
    ID              shift and go to state 24
    LIST            shift and go to state 31
    SET             shift and go to state 32
    IMPORT          shift and go to state 40
    WHILE           shift and go to state 42
    BREAK           shift and go to state 43
    PRINT           shift and go to state 44
    IF              shift and go to state 45

    instruccionesMas               shift and go to state 272
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    metodoMapClear                 shift and go to state 26
    metodoMapRemoveKey             shift and go to state 27
    metodoMapAddAll                shift and go to state 28
    metodoMapAdd                   shift and go to state 29
    arrayFunc                      shift and go to state 30
    setadd                         shift and go to state 33
    setclear                       shift and go to state 34
    setcontains                    shift and go to state 35
    setAddAll                      shift and go to state 36
    setlengh                       shift and go to state 37
    setremove                      shift and go to state 38
    sentenciaIf                    shift and go to state 39
    metodoListFilled               shift and go to state 41

state 238

    (21) funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 273


state 239

    (22) funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .

    STATIC          reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    VOID            reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    FOR             reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    MAP             reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    ID              reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    LIST            reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    SET             reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    IF              reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    $end            reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 22 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT .)


state 240

    (90) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON . operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (109) operadoresArimeticoId -> . ID INCREMENT
    (110) operadoresArimeticoId -> . ID DECREMENT
    (111) operadoresArimeticoId -> . ID PLUSEQUAL values
    (112) operadoresArimeticoId -> . ID MINUSEQUAL values
    (113) operadoresArimeticoId -> . ID MULTIPLUS values
    (114) operadoresArimeticoId -> . ID DIVIDEEQUAL values

    ID              shift and go to state 275

    operadoresArimeticoId          shift and go to state 274

state 241

    (79) estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 276


state 242

    (88) itemsMaps -> values COLON . values
    (89) itemsMaps -> values COLON . values COMMA itemsMaps
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 277

state 243

    (80) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER . ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    ID              shift and go to state 278


state 244

    (35) set -> values COMMA set .

    SQUAREBRACKETRIGHT reduce using rule 35 (set -> values COMMA set .)
    CURLYBRACKETRIGHT reduce using rule 35 (set -> values COMMA set .)


state 245

    (65) arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 279


state 246

    (122) metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values . SEMICOLON

    SEMICOLON       shift and go to state 280


state 247

    (53) foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 281


state 248

    (64) listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 282


state 249

    (119) metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .

    STATIC          reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    IMPORT          reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 119 (metodoMapClear -> ID DOT CLEAR LPAREN RPAREN SEMICOLON .)


state 250

    (120) metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 283


state 251

    (121) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps . CURLYBRACKETRIGHT RPAREN SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 284


state 252

    (48) setclear -> ID DOT CLEAR LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 285


state 253

    (47) setadd -> ID DOT ADD LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 286


state 254

    (49) setcontains -> ID DOT CONTAINS LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 287


state 255

    (50) setAddAll -> ID DOT ADDALL LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 288


state 256

    (52) setremove -> ID DOT REMOVE LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 289


state 257

    (66) subArray -> SUBLIST LPAREN values RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 290


state 258

    (81) estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 291


state 259

    (82) estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 292


state 260

    (83) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS . DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON

    DATATYPES       shift and go to state 293


state 261

    (57) array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 294


state 262

    (125) metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 295


state 263

    (36) declarset -> SET ID EQUAL NEW SET LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 296


state 264

    (37) declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 297


state 265

    (91) sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 298


state 266

    (29) sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 299


state 267

    (18) funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT . instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (90) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (73) asignacionesMas -> . asignacion
    (74) asignacionesMas -> . asignacion asignacionesMas
    (79) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (80) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . metodoMapClear
    (85) estructuraMap -> . metodoMapRemoveKey
    (86) estructuraMap -> . metodoMapAddAll
    (87) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (123) importsDart -> . IMPORT STR SEMICOLON
    (124) listMethods -> . metodoListFilled
    (91) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (95) palabraBreak -> . BREAK SEMICOLON
    (92) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus
    (72) asignacion -> . ID EQUAL values
    (119) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (122) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (125) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 23
    VARTYPE         shift and go to state 25
    ID              shift and go to state 24
    LIST            shift and go to state 31
    SET             shift and go to state 32
    IMPORT          shift and go to state 40
    WHILE           shift and go to state 42
    BREAK           shift and go to state 43
    PRINT           shift and go to state 44
    IF              shift and go to state 45

    instruccionesMas               shift and go to state 300
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    asignacion                     shift and go to state 22
    metodoMapClear                 shift and go to state 26
    metodoMapRemoveKey             shift and go to state 27
    metodoMapAddAll                shift and go to state 28
    metodoMapAdd                   shift and go to state 29
    arrayFunc                      shift and go to state 30
    setadd                         shift and go to state 33
    setclear                       shift and go to state 34
    setcontains                    shift and go to state 35
    setAddAll                      shift and go to state 36
    setlengh                       shift and go to state 37
    setremove                      shift and go to state 38
    sentenciaIf                    shift and go to state 39
    metodoListFilled               shift and go to state 41

state 268

    (19) funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas . sentenciaReturn CURLYBRACKETRIGHT
    (26) sentenciaReturn -> . RETURN LPAREN retornarValues RPAREN SEMICOLON

    RETURN          shift and go to state 302

    sentenciaReturn                shift and go to state 301

state 269

    (56) array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 56 (array -> DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)


state 270

    (62) arrayValues -> values COMMA arrayValues .

    SQUAREBRACKETRIGHT reduce using rule 62 (arrayValues -> values COMMA arrayValues .)
    RPAREN          reduce using rule 62 (arrayValues -> values COMMA arrayValues .)


state 271

    (38) declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT . set CURLYBRACKETRIGHT SEMICOLON
    (34) set -> . values
    (35) set -> . values COMMA set
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    set                            shift and go to state 303
    values                         shift and go to state 156

state 272

    (20) funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 304


state 273

    (21) funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    STATIC          reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 21 (funcion -> VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 274

    (90) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId . RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    RPAREN          shift and go to state 305


state 275

    (109) operadoresArimeticoId -> ID . INCREMENT
    (110) operadoresArimeticoId -> ID . DECREMENT
    (111) operadoresArimeticoId -> ID . PLUSEQUAL values
    (112) operadoresArimeticoId -> ID . MINUSEQUAL values
    (113) operadoresArimeticoId -> ID . MULTIPLUS values
    (114) operadoresArimeticoId -> ID . DIVIDEEQUAL values

    INCREMENT       shift and go to state 306
    DECREMENT       shift and go to state 307
    PLUSEQUAL       shift and go to state 308
    MINUSEQUAL      shift and go to state 309
    MULTIPLUS       shift and go to state 310
    DIVIDEEQUAL     shift and go to state 311


state 276

    (79) estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 79 (estructuraMap -> MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)


state 277

    (88) itemsMaps -> values COLON values .
    (89) itemsMaps -> values COLON values . COMMA itemsMaps

    CURLYBRACKETRIGHT reduce using rule 88 (itemsMaps -> values COLON values .)
    COMMA           shift and go to state 312


state 278

    (80) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID . EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    EQUAL           shift and go to state 313


state 279

    (65) arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .

    STATIC          reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    DATATYPES       reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    VOID            reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    FOR             reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    MAP             reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    ID              reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    LIST            reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    SET             reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    IMPORT          reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    WHILE           reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    BREAK           reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    PRINT           reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    IF              reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    $end            reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    RPAREN          reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)
    RETURN          reduce using rule 65 (arrayChanges -> ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON .)


state 280

    (122) metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .

    STATIC          reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    DATATYPES       reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    VOID            reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    FOR             reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    MAP             reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    VARTYPE         reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    ID              reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    LIST            reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    SET             reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    IMPORT          reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    WHILE           reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    BREAK           reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    PRINT           reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    IF              reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    $end            reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    RPAREN          reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)
    RETURN          reduce using rule 122 (metodoMapAdd -> ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON .)


state 281

    (53) foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .

    STATIC          reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    VOID            reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    FOR             reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    MAP             reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    ID              reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    LIST            reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    SET             reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    IMPORT          reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    WHILE           reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    BREAK           reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    PRINT           reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    IF              reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    $end            reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    RPAREN          reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)
    RETURN          reduce using rule 53 (foreach -> ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON .)


state 282

    (64) listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .

    STATIC          reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    VOID            reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    FOR             reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    MAP             reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    ID              reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    LIST            reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    SET             reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    IMPORT          reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    WHILE           reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    BREAK           reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    PRINT           reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    IF              reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    $end            reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    RPAREN          reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)
    RETURN          reduce using rule 64 (listBuscar -> ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON .)


state 283

    (120) metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .

    STATIC          reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    VOID            reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    FOR             reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    MAP             reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    ID              reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    LIST            reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    SET             reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    IMPORT          reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    WHILE           reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    BREAK           reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    PRINT           reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    IF              reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    $end            reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    RPAREN          reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)
    RETURN          reduce using rule 120 (metodoMapRemoveKey -> ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON .)


state 284

    (121) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT . RPAREN SEMICOLON

    RPAREN          shift and go to state 314


state 285

    (48) setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .

    STATIC          reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    VOID            reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    FOR             reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    MAP             reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    ID              reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    LIST            reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    SET             reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    IMPORT          reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    WHILE           reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    BREAK           reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    PRINT           reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    IF              reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    $end            reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    RPAREN          reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)
    RETURN          reduce using rule 48 (setclear -> ID DOT CLEAR LPAREN values RPAREN SEMICOLON .)


state 286

    (47) setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .

    STATIC          reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    VOID            reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    FOR             reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    MAP             reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    ID              reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    LIST            reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    SET             reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    IMPORT          reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    WHILE           reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    BREAK           reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    PRINT           reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    IF              reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    $end            reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    RPAREN          reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)
    RETURN          reduce using rule 47 (setadd -> ID DOT ADD LPAREN values RPAREN SEMICOLON .)


state 287

    (49) setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .

    STATIC          reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    VOID            reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    FOR             reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    MAP             reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    ID              reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    LIST            reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    SET             reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    IMPORT          reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    WHILE           reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    BREAK           reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    PRINT           reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    IF              reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    $end            reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    RPAREN          reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)
    RETURN          reduce using rule 49 (setcontains -> ID DOT CONTAINS LPAREN values RPAREN SEMICOLON .)


state 288

    (50) setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .

    STATIC          reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    VOID            reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    FOR             reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    MAP             reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    ID              reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    LIST            reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    SET             reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    IMPORT          reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    BREAK           reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    $end            reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    RPAREN          reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 50 (setAddAll -> ID DOT ADDALL LPAREN ID RPAREN SEMICOLON .)


state 289

    (52) setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .

    STATIC          reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    VOID            reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    FOR             reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    MAP             reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    ID              reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    LIST            reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    SET             reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    IMPORT          reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    WHILE           reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    BREAK           reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    PRINT           reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    IF              reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    $end            reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    RPAREN          reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)
    RETURN          reduce using rule 52 (setremove -> ID DOT REMOVE LPAREN values RPAREN SEMICOLON .)


state 290

    (66) subArray -> SUBLIST LPAREN values RPAREN SEMICOLON .

    DOT             reduce using rule 66 (subArray -> SUBLIST LPAREN values RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 66 (subArray -> SUBLIST LPAREN values RPAREN SEMICOLON .)


state 291

    (81) estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 81 (estructuraMap -> VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)


state 292

    (82) estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 315


state 293

    (83) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES . COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON

    COMMA           shift and go to state 316


state 294

    (57) array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 57 (array -> LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON .)


state 295

    (125) metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .

    STATIC          reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    VOID            reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    FOR             reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    MAP             reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    ID              reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    LIST            reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    SET             reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    IMPORT          reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    WHILE           reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    BREAK           reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    PRINT           reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    IF              reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    $end            reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    RPAREN          reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)
    RETURN          reduce using rule 125 (metodoListFilled -> LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON .)


state 296

    (36) declarset -> SET ID EQUAL NEW SET LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 317


state 297

    (37) declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 37 (declarset -> SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)


state 298

    (91) sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    STATIC          reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 91 (sentenciaWhile -> WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 299

    (29) sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    ELSE            reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    STATIC          reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 29 (sentenciaIf -> IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 300

    (18) funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas . sentenciaReturn CURLYBRACKETRIGHT
    (26) sentenciaReturn -> . RETURN LPAREN retornarValues RPAREN SEMICOLON

    RETURN          shift and go to state 302

    sentenciaReturn                shift and go to state 318

state 301

    (19) funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 319


state 302

    (26) sentenciaReturn -> RETURN . LPAREN retornarValues RPAREN SEMICOLON

    LPAREN          shift and go to state 320


state 303

    (38) declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 321


state 304

    (20) funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    STATIC          reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 20 (funcion -> VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 305

    (90) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN . CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT

    CURLYBRACKETLEFT shift and go to state 322


state 306

    (109) operadoresArimeticoId -> ID INCREMENT .

    RPAREN          reduce using rule 109 (operadoresArimeticoId -> ID INCREMENT .)


state 307

    (110) operadoresArimeticoId -> ID DECREMENT .

    RPAREN          reduce using rule 110 (operadoresArimeticoId -> ID DECREMENT .)


state 308

    (111) operadoresArimeticoId -> ID PLUSEQUAL . values
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 323

state 309

    (112) operadoresArimeticoId -> ID MINUSEQUAL . values
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 324

state 310

    (113) operadoresArimeticoId -> ID MULTIPLUS . values
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 325

state 311

    (114) operadoresArimeticoId -> ID DIVIDEEQUAL . values
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 326

state 312

    (89) itemsMaps -> values COLON values COMMA . itemsMaps
    (88) itemsMaps -> . values COLON values
    (89) itemsMaps -> . values COLON values COMMA itemsMaps
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    values                         shift and go to state 196
    itemsMaps                      shift and go to state 327

state 313

    (80) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL . CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETLEFT shift and go to state 328


state 314

    (121) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 329


state 315

    (82) estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .

    STATIC          reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    IMPORT          reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 82 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON .)


state 316

    (83) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA . DATATYPES GREATER LPAREN RPAREN SEMICOLON

    DATATYPES       shift and go to state 330


state 317

    (36) declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .

    STATIC          reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    IMPORT          reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 36 (declarset -> SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON .)


state 318

    (18) funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 331


state 319

    (19) funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .

    STATIC          reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    VOID            reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    FOR             reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    MAP             reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    ID              reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    LIST            reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    SET             reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    IF              reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    $end            reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 19 (funcion -> DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)


state 320

    (26) sentenciaReturn -> RETURN LPAREN . retornarValues RPAREN SEMICOLON
    (27) retornarValues -> . values
    (28) retornarValues -> . NULL
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    NULL            shift and go to state 334
    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    retornarValues                 shift and go to state 332
    values                         shift and go to state 333

state 321

    (38) declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 335


state 322

    (90) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT . instruccionesMas CURLYBRACKETRIGHT
    (1) instruccionesMas -> . instruccion
    (2) instruccionesMas -> . instruccion instruccionesMas
    (3) instruccion -> . funcion
    (4) instruccion -> . sentenciaFor
    (5) instruccion -> . asignacionesMas
    (6) instruccion -> . estructuraMap
    (7) instruccion -> . array
    (8) instruccion -> . arrayChanges
    (9) instruccion -> . declarset
    (10) instruccion -> . sentenciaIfElse
    (11) instruccion -> . foreach
    (12) instruccion -> . listBuscar
    (13) instruccion -> . importsDart
    (14) instruccion -> . listMethods
    (15) instruccion -> . sentenciaWhile
    (16) instruccion -> . palabraBreak
    (17) instruccion -> . funcionPrint
    (18) funcion -> . STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (19) funcion -> . DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT
    (20) funcion -> . VOID FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (21) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (22) funcion -> . VOID FUNCNAME LPAREN RPAREN CURLYBRACKETLEFT CURLYBRACKETRIGHT
    (90) sentenciaFor -> . FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (73) asignacionesMas -> . asignacion
    (74) asignacionesMas -> . asignacion asignacionesMas
    (79) estructuraMap -> . MAP ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (80) estructuraMap -> . MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (81) estructuraMap -> . VARTYPE ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (82) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LPAREN RPAREN SEMICOLON
    (83) estructuraMap -> . VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON
    (84) estructuraMap -> . metodoMapClear
    (85) estructuraMap -> . metodoMapRemoveKey
    (86) estructuraMap -> . metodoMapAddAll
    (87) estructuraMap -> . metodoMapAdd
    (54) array -> . ID EQUAL arrayInicio SEMICOLON
    (55) array -> . arrayFunc SEMICOLON
    (56) array -> . DATATYPES ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (57) array -> . LIST ID EQUAL SQUAREBRACKETLEFT arrayValues SQUAREBRACKETRIGHT SEMICOLON
    (65) arrayChanges -> . ID SQUAREBRACKETLEFT values SQUAREBRACKETRIGHT EQUAL values SEMICOLON
    (36) declarset -> . SET ID EQUAL NEW SET LPAREN RPAREN SEMICOLON
    (37) declarset -> . SET ID EQUAL CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (38) declarset -> . DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON
    (39) declarset -> . setadd
    (40) declarset -> . setclear
    (41) declarset -> . setcontains
    (42) declarset -> . setAddAll
    (43) declarset -> . setlengh
    (44) declarset -> . setremove
    (32) sentenciaIfElse -> . sentenciaIf
    (33) sentenciaIfElse -> . sentenciaIf sentenciaElse
    (53) foreach -> . ID DOT FOREACH LPAREN instruccionesMas RPAREN SEMICOLON
    (64) listBuscar -> . ID DOT WHERE LPAREN instruccionesMas RPAREN SEMICOLON
    (123) importsDart -> . IMPORT STR SEMICOLON
    (124) listMethods -> . metodoListFilled
    (91) sentenciaWhile -> . WHILE LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (95) palabraBreak -> . BREAK SEMICOLON
    (92) funcionPrint -> . PRINT LPAREN printValues RPAREN SEMICOLON
    (68) asignacion -> . DATATYPES ID EQUAL values SEMICOLON
    (69) asignacion -> . VARTYPE ID EQUAL values SEMICOLON
    (70) asignacion -> . DATATYPES ID operadoresAsignacion values SEMICOLON
    (71) asignacion -> . ID EQUAL condicionesPlus
    (72) asignacion -> . ID EQUAL values
    (119) metodoMapClear -> . ID DOT CLEAR LPAREN RPAREN SEMICOLON
    (120) metodoMapRemoveKey -> . ID DOT CLEAR LPAREN arrayValues RPAREN SEMICOLON
    (121) metodoMapAddAll -> . ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON
    (122) metodoMapAdd -> . ID SQUAREBRACKETRIGHT values SQUAREBRACKETLEFT EQUAL values SEMICOLON
    (63) arrayFunc -> . ID DOT subArray
    (47) setadd -> . ID DOT ADD LPAREN values RPAREN SEMICOLON
    (48) setclear -> . ID DOT CLEAR LPAREN values RPAREN SEMICOLON
    (49) setcontains -> . ID DOT CONTAINS LPAREN values RPAREN SEMICOLON
    (50) setAddAll -> . ID DOT ADDALL LPAREN ID RPAREN SEMICOLON
    (51) setlengh -> . ID DOT LENGTH SEMICOLON
    (52) setremove -> . ID DOT REMOVE LPAREN values RPAREN SEMICOLON
    (29) sentenciaIf -> . IF LPAREN comparacion RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT
    (125) metodoListFilled -> . LIST DOT FILLED LPAREN arrayValues RPAREN SEMICOLON

    STATIC          shift and go to state 18
    DATATYPES       shift and go to state 19
    VOID            shift and go to state 20
    FOR             shift and go to state 21
    MAP             shift and go to state 23
    VARTYPE         shift and go to state 25
    ID              shift and go to state 24
    LIST            shift and go to state 31
    SET             shift and go to state 32
    IMPORT          shift and go to state 40
    WHILE           shift and go to state 42
    BREAK           shift and go to state 43
    PRINT           shift and go to state 44
    IF              shift and go to state 45

    asignacion                     shift and go to state 22
    instruccionesMas               shift and go to state 336
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    sentenciaFor                   shift and go to state 4
    asignacionesMas                shift and go to state 5
    estructuraMap                  shift and go to state 6
    array                          shift and go to state 7
    arrayChanges                   shift and go to state 8
    declarset                      shift and go to state 9
    sentenciaIfElse                shift and go to state 10
    foreach                        shift and go to state 11
    listBuscar                     shift and go to state 12
    importsDart                    shift and go to state 13
    listMethods                    shift and go to state 14
    sentenciaWhile                 shift and go to state 15
    palabraBreak                   shift and go to state 16
    funcionPrint                   shift and go to state 17
    metodoMapClear                 shift and go to state 26
    metodoMapRemoveKey             shift and go to state 27
    metodoMapAddAll                shift and go to state 28
    metodoMapAdd                   shift and go to state 29
    arrayFunc                      shift and go to state 30
    setadd                         shift and go to state 33
    setclear                       shift and go to state 34
    setcontains                    shift and go to state 35
    setAddAll                      shift and go to state 36
    setlengh                       shift and go to state 37
    setremove                      shift and go to state 38
    sentenciaIf                    shift and go to state 39
    metodoListFilled               shift and go to state 41

state 323

    (111) operadoresArimeticoId -> ID PLUSEQUAL values .

    RPAREN          reduce using rule 111 (operadoresArimeticoId -> ID PLUSEQUAL values .)


state 324

    (112) operadoresArimeticoId -> ID MINUSEQUAL values .

    RPAREN          reduce using rule 112 (operadoresArimeticoId -> ID MINUSEQUAL values .)


state 325

    (113) operadoresArimeticoId -> ID MULTIPLUS values .

    RPAREN          reduce using rule 113 (operadoresArimeticoId -> ID MULTIPLUS values .)


state 326

    (114) operadoresArimeticoId -> ID DIVIDEEQUAL values .

    RPAREN          reduce using rule 114 (operadoresArimeticoId -> ID DIVIDEEQUAL values .)


state 327

    (89) itemsMaps -> values COLON values COMMA itemsMaps .

    CURLYBRACKETRIGHT reduce using rule 89 (itemsMaps -> values COLON values COMMA itemsMaps .)


state 328

    (80) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT . itemsMaps CURLYBRACKETRIGHT SEMICOLON
    (88) itemsMaps -> . values COLON values
    (89) itemsMaps -> . values COLON values COMMA itemsMaps
    (75) values -> . INT
    (76) values -> . FLOAT
    (77) values -> . BOOLEAN
    (78) values -> . STR

    INT             shift and go to state 95
    FLOAT           shift and go to state 96
    BOOLEAN         shift and go to state 100
    STR             shift and go to state 98

    itemsMaps                      shift and go to state 337
    values                         shift and go to state 196

state 329

    (121) metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .

    STATIC          reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    VOID            reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    FOR             reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    MAP             reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    ID              reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    LIST            reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    SET             reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    IMPORT          reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    WHILE           reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    BREAK           reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    PRINT           reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    IF              reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    $end            reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    RPAREN          reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)
    RETURN          reduce using rule 121 (metodoMapAddAll -> ID DOT CLEAR LPAREN CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT RPAREN SEMICOLON .)


state 330

    (83) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES . GREATER LPAREN RPAREN SEMICOLON

    GREATER         shift and go to state 338


state 331

    (18) funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .

    STATIC          reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    VOID            reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    FOR             reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    MAP             reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    ID              reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    LIST            reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    SET             reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    IF              reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    $end            reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 18 (funcion -> STATIC DATATYPES FUNCNAME LPAREN parametrosF RPAREN CURLYBRACKETLEFT instruccionesMas sentenciaReturn CURLYBRACKETRIGHT .)


state 332

    (26) sentenciaReturn -> RETURN LPAREN retornarValues . RPAREN SEMICOLON

    RPAREN          shift and go to state 339


state 333

    (27) retornarValues -> values .

    RPAREN          reduce using rule 27 (retornarValues -> values .)


state 334

    (28) retornarValues -> NULL .

    RPAREN          reduce using rule 28 (retornarValues -> NULL .)


state 335

    (38) declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 38 (declarset -> DATATYPES ID EQUAL LESS DATATYPES GREATER CURLYBRACKETLEFT set CURLYBRACKETRIGHT SEMICOLON .)


state 336

    (90) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas . CURLYBRACKETRIGHT

    CURLYBRACKETRIGHT shift and go to state 340


state 337

    (80) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps . CURLYBRACKETRIGHT SEMICOLON

    CURLYBRACKETRIGHT shift and go to state 341


state 338

    (83) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 342


state 339

    (26) sentenciaReturn -> RETURN LPAREN retornarValues RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 343


state 340

    (90) sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .

    STATIC          reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    DATATYPES       reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VOID            reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    FOR             reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    MAP             reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    VARTYPE         reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    ID              reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    LIST            reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    SET             reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IMPORT          reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    WHILE           reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    BREAK           reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    PRINT           reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    IF              reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    $end            reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    CURLYBRACKETRIGHT reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RPAREN          reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)
    RETURN          reduce using rule 90 (sentenciaFor -> FOR LPAREN asignacion SEMICOLON comparacion SEMICOLON operadoresArimeticoId RPAREN CURLYBRACKETLEFT instruccionesMas CURLYBRACKETRIGHT .)


state 341

    (80) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT . SEMICOLON

    SEMICOLON       shift and go to state 344


state 342

    (83) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 345


state 343

    (26) sentenciaReturn -> RETURN LPAREN retornarValues RPAREN SEMICOLON .

    CURLYBRACKETRIGHT reduce using rule 26 (sentenciaReturn -> RETURN LPAREN retornarValues RPAREN SEMICOLON .)


state 344

    (80) estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .

    STATIC          reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    DATATYPES       reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VOID            reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    FOR             reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    MAP             reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    VARTYPE         reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    ID              reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    LIST            reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    SET             reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IMPORT          reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    WHILE           reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    BREAK           reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    PRINT           reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    IF              reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    $end            reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RPAREN          reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)
    RETURN          reduce using rule 80 (estructuraMap -> MAP LESS DATATYPES COMMA DATATYPES GREATER ID EQUAL CURLYBRACKETLEFT itemsMaps CURLYBRACKETRIGHT SEMICOLON .)


state 345

    (83) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 346


state 346

    (83) estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .

    STATIC          reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    DATATYPES       reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    VARTYPE         reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    SET             reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    IMPORT          reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    CURLYBRACKETRIGHT reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 83 (estructuraMap -> VARTYPE ID EQUAL NEW MAP LESS DATATYPES COMMA DATATYPES GREATER LPAREN RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DATATYPES in state 22 resolved as shift
WARNING: shift/reduce conflict for VARTYPE in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 213 resolved as shift
WARNING: shift/reduce conflict for DOT in state 214 resolved as shift
